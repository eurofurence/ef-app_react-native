{"version":3,"sources":["node_modules/moment/locale sync /^/.*$","assets/audio/cheese.webm","assets/audio/sheesh.webm","assets/images/dealer_black.png","assets/images/banner_2022_no_logo.png","src/configuration.tsx","src/store/authorization.service.ts","src/store/authorization.slice.ts","src/store/background.slice.tsx","src/store/eurofurence.cache.ts","src/store/eurofurence.service.ts","src/store/settings.slice.tsx","src/store/timetravel.slice.ts","src/store/index.ts","src/context/Theme.tsx","src/components/Atoms/Label.tsx","src/components/Atoms/MarkdownContent.tsx","src/components/Containers/Col.tsx","src/components/Containers/Row.tsx","src/components/Atoms/Section.tsx","src/components/Containers/Button.tsx","src/components/Containers/Floater.tsx","src/context/LoadingContext.tsx","src/components/Atoms/Loading/Continuous.tsx","src/components/Atoms/Activity.tsx","src/components/Containers/Header.tsx","src/app/AppStyles.ts","src/app/About.tsx","src/hooks/useAppNavigation.tsx","src/store/eurofurence.details.ts","src/store/eurofurence.selectors.ts","src/components/Atoms/Banner.tsx","src/components/Containers/BadgeInvPad.tsx","src/components/Atoms/ImageFill.tsx","src/components/Atoms/Marker.tsx","src/components/Containers/ImageButton.tsx","src/hooks/useNow.tsx","src/app/Dealers/DealerCardContent.tsx","src/app/Dealers/DealerCard.tsx","src/app/Maps/LinkItem.tsx","src/app/Dealers/DealerContent.tsx","src/app/Dealers/DealerScreen.tsx","src/sentryHelpers.tsx","src/app/Events/EventContent.tsx","src/hooks/useEventReminder.tsx","src/app/Events/EventScreen.tsx","src/app/Events/FeedbackScreen.tsx","src/app/Knowledge/KnowledgeEntryScreen.tsx","src/components/Containers/Card.tsx","src/hoc/withPlatform.tsx","src/components/Synchronization/ImageSynchronizer.tsx","src/components/Synchronization/SynchronizationProvider.tsx","src/app/Knowledge/KnowledgeGroupsScreen.tsx","src/app/Maps/MapContent.tsx","src/app/Maps/MapScreen.tsx","src/app/PrivateMessages/PrivateMessageItemScreen.tsx","src/components/Utilities/NoData.tsx","src/app/PrivateMessages/PrivateMessageListScreen.tsx","src/components/Containers/Tab.tsx","src/components/Containers/Tabs.tsx","src/components/Navigators/Common.tsx","src/components/Navigators/TabsNavigator.tsx","src/components/Containers/Page.tsx","src/components/Containers/Pages.tsx","src/components/Navigators/PagesNavigator.tsx","src/app/Dealers/DealerSection.tsx","src/app/Dealers/DealersSectionedListGeneric.tsx","src/app/Dealers/DealersListAllScreen.tsx","src/app/Dealers/DealersListByDayScreen.tsx","src/app/Dealers/DealersTabsScreen.tsx","src/app/Events/EventActionsSheet.tsx","src/hooks/useEventProperties.tsx","src/components/Atoms/Indicator.tsx","src/app/Events/EventCardContent.tsx","src/app/Events/EventCard.tsx","src/app/Events/EventSection.tsx","src/app/Events/EventsSectionedListGeneric.tsx","src/app/Events/EventsTabsContext.tsx","src/app/Events/EventsListByDayScreen.tsx","src/app/Events/EventsListByRoomScreen.tsx","src/app/Events/EventsListByTrackScreen.tsx","src/app/Events/EventsListGeneric.tsx","src/app/Events/EventsListSearchResultsScreen.tsx","src/app/Events/EventsSearchScreen.tsx","src/app/Events/PersonalScheduleList.tsx","src/app/Events/EventsTabsScreen.tsx","src/app/Announcements/AnnouncementItem.tsx","src/app/Announcements/AnnouncementList.tsx","src/app/Events/CurrentEventsList.tsx","src/app/Events/TodayScheduleList.tsx","src/app/Events/UpcomingEventsList.tsx","src/app/Home/CountdownHeader.tsx","src/app/Home/DeviceSpecificWarnings.tsx","src/app/Home/LanguageWarnings.tsx","src/app/Home/HomeScreen.tsx","src/components/Containers/Pager.tsx","src/app/MainMenu/PagerLogin.tsx","src/components/Containers/Grid.tsx","src/app/PrivateMessages/PrivateMessageLinker.tsx","src/app/MainMenu/PagerPrimary.tsx","src/app/MainMenu/MainMenu.tsx","src/hooks/useFursuitGames.tsx","src/hooks/useAdditionalServices.tsx","src/app/ScreenAreas.tsx","src/app/Settings/CacheStats.tsx","src/app/Settings/DevButtons.tsx","src/app/Settings/RemoteMessages.tsx","src/app/Settings/ScheduledNotifications.tsx","src/app/Settings/TimeTravel.tsx","src/i18n/index.ts","src/app/Settings/ThemePicker.tsx","src/app/Settings/UserSettings.tsx","src/app/Settings/SettingsScreen.tsx","src/app/ScreenStart.tsx","src/components/Managers/AnalyticsManager.tsx","src/components/Managers/BackgroundSyncManager.tsx","src/types/NotificationTrigger.tsx","src/components/Managers/NotificationReceivedManager.tsx","src/components/Managers/NotificationRespondedManager.tsx","src/components/Managers/TokenManager.tsx","src/context/NavigationProvider.tsx","src/hooks/useNavigationStatePersistence.ts","src/hooks/useAnalytics.tsx","src/App.tsx","src/components/Utilities/AppErrorContent.tsx","src/components/Utilities/AppErrorBoundary.tsx","src/components/Managers/BackgroundSyncGenerator.tsx","src/components/Managers/NotificationChannel.tsx","src/components/Managers/NotificationHandler.tsx","src/index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","conName","packageData","convention","name","conAbbr","abbreviation","conId","identifier","appBase","apiBase","authorizationService","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","authorization","set","tagTypes","endpoints","builder","postToken","mutation","query","args","url","method","body","RegNo","Username","Password","invalidatesTags","getWhoAmI","providesTags","postDeviceRegistration","DeviceId","Topics","createSyncRequest","postSubscribeToTopic","arg","Topic","postUnsubscribeFromTopic","sendPrivateMessage","usePostTokenMutation","usePostDeviceRegistrationMutation","useGetWhoAmIQuery","useCreateSyncRequestMutation","useSendPrivateMessageMutation","usePostSubscribeToTopicMutation","authorizationSlice","usePostUnsubscribeFromTopicMutation","createSlice","initialState","isLoggedIn","isExpired","reducers","logout","state","undefined","username","tokenValidUntil","extraReducers","addMatcher","matchFulfilled","payload","Token","TokenValidUntil","uid","Uid","actions","backgroundSlice","notifications","fcmMessages","addNotification","action","push","removeNotification","filter","it","recordId","logFCMMessage","_","chain","concat","orderBy","dateReceived","value","eventsAdapter","createEntityAdapter","selectId","model","Id","sortComparer","a","b","moment","StartDateTimeUtc","subtract","valueOf","eventDaysAdapter","Date","localeCompare","eventRoomsAdapter","Name","eventTracksAdapter","knowledgeGroupsAdapter","Order","knowledgeEntriesAdapter","imagesAdapter","dealersAdapter","announcementsAdapter","ValidUntilDateTimeUtc","mapsAdapter","lastSynchronised","toISOString","events","getInitialState","eventDays","eventRooms","eventTracks","knowledgeGroups","knowledgeEntries","maps","dealers","announcements","images","syncEntities","adapter","delta","RemoveAllEntitiesBeforeInsert","removeAll","ChangedEntities","upsertMany","DeletedEntities","removeMany","eurofurenceCache","applySync","CurrentDateTimeUtc","State","Events","EventConferenceDays","EventConferenceRooms","EventConferenceTracks","KnowledgeGroups","KnowledgeEntries","Dealers","Images","Announcements","Maps","resetCache","startCacheSync","tagsFromList","type","result","tagsFromItem","eurofurenceService","keepUnusedDataFor","extractRehydrationInfo","REHYDRATE","getAnnouncements","getAnnouncementsById","getEvents","getEventById","getDealers","getDealerById","getEventDays","getEventDayById","getEventTracks","getEventTrackById","getEventRooms","getEventRoomById","getMaps","getMapById","getKnowledgeGroups","getKnowledgeGroupById","getKnowledgeEntries","getKnowledgeEntryById","getImages","getCommunications","transformResponse","CreatedDateTimeUtc","markCommunicationRead","responseHandler","response","ok","error","submitEventFeedback","EventId","eventId","Rating","rating","Message","message","useGetCommunicationsQuery","useGetAnnouncementsQuery","useGetEventsQuery","useGetEventByIdQuery","useGetDealersQuery","useGetImagesQuery","useGetEventDaysQuery","useGetEventDayByIdQuery","useGetEventTracksQuery","useGetEventTrackByIdQuery","useGetEventRoomsQuery","useGetEventRoomByIdQuery","useMarkCommunicationReadMutation","useSubmitEventFeedbackMutation","settingsSlice","analytics","enabled","prompted","showDevMenu","setAnalytics","toggleDevMenu","setTheme","theme","amount","visible","Constants","debugMode","timeTravelSlice","travelForward","travelBackward","travelToDate","now","startOf","target","diff","resetTravel","enableTimeTravel","showTimeTravel","getTimeInterval","unit","duration","asMilliseconds","ONE_MINUTE","ONE_HOUR","combineReducers","reducer","persistedReducer","persistReducer","key","version","storage","AsyncStorage","whitelist","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","ignoredPaths","warnAfter","Platform","OS","logger","persistor","persistStore","useAppDispatch","useDispatch","useAppSelector","useSelector","useThemeType","userTheme","shallowEqual","systemTheme","useColorScheme","themes","light","primary","secondary","background","surface","inverted","text","important","invText","invImportant","warning","notification","darken","lighten","soften","white","superSponsor","superSponsorText","sponsor","sponsorText","marker","dark","requinard","useTheme","useMemo","useThemeBackground","color","backgroundColor","useThemeColor","Label","style","variant","icon","ml","mt","mr","mb","children","props","resType","types","regular","resVariant","variants","marginColor","marginLeft","marginTop","marginRight","marginBottom","iconSize","StyleSheet","flatten","fontSize","Text","textAlignVertical","size","create","lead","fontWeight","h1","h2","h3","h4","h5","h6","caption","minor","strong","para","lineHeight","del","textDecorationLine","em","fontStyle","u","narrow","bold","striked","underlined","middle","textAlign","shadow","textShadowColor","textShadowRadius","textShadowOffset","width","height","MarkdownContent","styleContainer","paddingTop","paddingBottom","markdownStyles","block","flexWrap","flexDirection","blockQuote","borderLeftWidth","borderLeftColor","paddingLeft","hr","alignSelf","marginVertical","linkWrapper","link","list","listItem","justifyContent","alignItems","listItemContent","flexShrink","listItemBullet","borderRadius","listItemNumber","imageWrapper","flex","image","minWidth","Col","rest","start","View","center","stretch","end","spaced","Row","wrap","Section","React","memo","title","subtitle","titleColor","subtitleColor","titleVariant","subtitleVariant","iconColor","styles","container","placeholder","containerFill","ellipsizeMode","Button","outline","iconRight","onPress","onLongPress","disabled","base","containerOutline","fill","TouchableOpacity","padding","pad","borderColor","borderWidth","outlineText","Floater","containerStyle","contentStyle","arranger","content","paddingHorizontal","maxWidth","LoadingContext","createContext","indicateLoading","console","indicateDone","isLoading","LoadingContextProvider","useState","active","setActive","useCallback","prevState","includes","other","Boolean","length","context","Provider","Continuous","at","useSharedValue","useEffect","withRepeat","withDelay","withTiming","easing","Easing","in","cubic","colorStyle","dynamicStyle","useAnimatedStyle","left","bar","overflow","position","top","bottom","Activity","useContext","Header","navigation","useNavigation","numberOfLines","back","goBack","activity","borderBottomWidth","right","appStyles","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","abs","trailer","Credit","uri","role","onEasterEgg","delayLongPress","Image","source","AboutScreen","t","useTranslation","safe","useSafeAreaInsets","showHelpButtons","dispatch","requinardEgg","sound","Sound","createAsync","require","playAsync","pazuzuEgg","ScrollView","stickyHeaderIndices","stickyHeaderHiddenOnScroll","nativeApplicationVersion","nativeBuildVersion","Linking","openURL","useAppNavigation","screen","useAppRoute","routeName","useRoute","internalCreateImageUrl","input","keyStr","output","chr1","NaN","chr2","chr3","enc1","enc2","enc3","enc4","i","charCodeAt","isNaN","charAt","join","base64encode","ContentHashSha1","internalCategorizeTime","hours","internalTagsToIcon","tags","internalTagsToBadges","badges","internalSponsorOnly","internalMaskRequired","internalAttendanceDayNames","dealer","AttendsOnThursday","AttendsOnFriday","AttendsOnSaturday","internalAttendanceDays","days","eventDaysSelectors","selectAll","day","applyMapEntryDetails","transformEntitySelector","from","transform","selectBound","item","selectTotal","selectIds","createSelector","ids","selectEntities","entities","bound","mapValues","all","selectById","eventRoomsSelectors","getSelectors","eventTracksSelectors","knowledgeGroupsSelectors","knowledgeEntriesSelectors","imagesSelectors","FullUrl","eventsSelector","PartOfDay","Poster","PosterImageId","Banner","BannerImageId","Badges","Tags","Glyph","SuperSponsorOnly","SponsorOnly","MaskRequired","ConferenceRoom","ConferenceRoomId","ConferenceDay","ConferenceDayId","ConferenceTrack","ConferenceTrackId","announcementsSelectors","mapsSelectors","ImageId","Entries","entry","dealersSelectors","AttendanceDayNames","AttendanceDays","Artist","ArtistImageId","ArtistThumbnail","ArtistThumbnailImageId","ArtPreview","ArtPreviewImageId","FullName","DisplayName","AttendeeNickname","selectCountdownTitle","firstDay","first","lastDay","last","currentDay","find","isSame","isBefore","humanize","isAfter","selectFavoriteEvents","event","selectUpcomingFavoriteEvents","EndDateTimeUtc","selectCurrentEvents","isBetween","filterCurrentEvents","selectEventsByRoom","itemId","tracks","rooms","selectEventsByTrack","selectEventsByDay","selectUpcomingEvents","startMoment","endMoment","filterUpcomingEvents","selectActiveAnnouncements","ValidFromDateTimeUtc","filterActiveAnnouncements","selectDealersByDayName","selectBrowseableMaps","IsBrowseable","selectValidLinksByTarget","flatMap","Links","Target","selectKnowledgeItems","groups","entries","group","KnowledgeGroupId","selectKnowledgeItemsSections","items","data","selectIsSynchronized","selectImagesById","imageIds","aspect","aspectRatio","Width","Height","resizeMode","BadgeInvPad","badgeColor","textColor","textType","textVariant","marginHorizontal","styleContent","paddingVertical","initialSize","ImageFill","setSize","arrangerStyle","scale","Math","max","absoluteFillObject","imageStyle","translateX","x","translateY","y","absoluteFill","onLayout","nativeEvent","layout","Marker","markerColor","markerType","markerSize","ImageExButton","noMarker","styleBackground","minHeight","useNow","timetravel","getNow","add","DealerCardContent","avatar","present","merchandise","offDays","backgroundStyle","stylePre","pre","avatarCircle","main","tag","imageOverlay","DealerCard","format","Merchandise","DealerLinkItem","navigate","WebExternalLinkItem","MapEntryLinkItem","entryId","linkId","indexOf","EventConferenceRoomLinkItem","LinkItem","match","FragmentType","with","otherwise","DealerContent","parentPad","mapLink","markNotAttending","avatarImage","RegistrationNumber","ShortDescription","IsAfterDark","Categories","button","TelegramHandle","TwitterHandle","X","Y","TapRadius","AboutTheArtText","posterLine","ArtPreviewCaption","AboutTheArtistText","margin","aboutLine","DealerScreen","route","params","PlatformSentry","Native","Browser","captureEvent","captureException","captureNotificationException","useSentryProfiler","useProfiler","EventContent","notificationEntry","createReminder","scheduleDate","dateCreated","dateScheduled","Notifications","Title","trigger","date","toDate","channelId","removeReminder","toggleReminder","isFavorited","useEventReminder","track","room","shareEvent","Share","share","catch","SubTitle","defaultType","Abstract","marginBefore","rowLeft","rowRight","IsAcceptingFeedback","PanelHosts","finish","Description","EventScreen","feedbackForm","z","object","preprocess","parseInt","string","parse","number","min","optional","FeedbackScreen","submitFeedback","feedbackResult","useForm","resolver","zodResolver","defaultValues","control","handleSubmit","submit","isSuccess","eventTitle","rules","required","render","field","fieldState","onChange","minRating","enableHalfStar","star","starSize","TextInput","onChangeText","multiline","isError","borderBottomColor","KnowledgeEntryScreen","ImageIds","Card","withPlatform","Component","platforms","PlatformImageSynchronizer","isCaching","setIsCaching","prefetchedImages","setPrefetchedImages","imageUrls","cachedImages","queryCache","nonCachedImages","Promise","prefetch","then","c","fetchImages","SynchronizationContext","synchronize","noop","clear","SynchronizationProvider","lastFetch","count","setCount","fetch","r","json","clearCache","Vibration","vibrate","providerValues","useSynchronizer","isSynchronizing","KnowledgeListEntry","card","KnowledgeGroupsScreen","synchronizer","SectionList","onRefresh","refreshing","ListHeaderComponent","sections","stickySectionHeadersEnabled","keyExtractor","index","renderItem","renderSectionHeader","section","renderSectionFooter","footer","entryButton","distSq","hx","hy","MapContent","refHandle","useRef","refZoom","refSheet","styleHandle","results","setResults","onTransform","clearTimeout","current","setTimeout","targetWidth","originalWidth","targetHeight","originalHeight","offsetX","offsetY","zoom","zoomLevel","x1","x2","y1","y2","centerX","centerY","ix","clamp","iy","circleTouches","collapse","_getZoomableViewEventObject","diffX","diffY","moveBy","styleMarker","display","minZoom","maxZoom","ref","contentWidth","contentHeight","zoomStep","initialZoom","bindToBorders","handleStyle","handle","handleIndicatorStyle","snapPoints","initialNumToRender","maxToRenderPerBatch","contentContainerStyle","borderTopLeftRadius","borderTopRightRadius","MapScreen","PrivateMessageItemScreen","markRead","ReadDateTimeUtc","debug","Subject","NoData","maxHeight","PrivateMessageListScreen","refetchOnFocus","refetch","isFetching","sectionedData","partition","unread","read","readSections","groupBy","AuthorName","author","trim","messages","unreadSections","isEmpty","ListEmptyComponent","startCase","status","time","Tab","indicate","fillNotify","indicatorArea","indicatorLocator","indicatorContent","TabsContext","close","open","closeImmediately","isOpen","Tabs","forwardRef","tabs","textMore","textLess","indicateMore","onOpen","onClose","styleDismiss","fillBackground","bordersDarken","setHeight","setIsOpen","offset","dynamicDismiss","opacity","dynamicContainer","out","finished","runOnJS","useImperativeHandle","gesture","Gesture","Pan","onBegin","cancelAnimation","onUpdate","translationY","onEnd","threshold","targetIsOpen","targetValue","dismiss","tab","root","borderTopWidth","navigateTab","nameOrIndex","routes","emit","canPreventDefault","defaultPrevented","TabActions","jumpTo","createTabNavigator","createNavigatorFactory","more","tabsStyle","initialRouteName","screenOptions","useNavigationBuilder","TabRouter","descriptors","NavigationContent","options","Page","highlight","colorContent","containerStatic","containerGrow","styleItem","flexGrow","border","Pages","pages","indicatorIndex","indicatorHeight","styleIndicator","styleDarken","totalWidth","setTotalWidth","anchors","setAnchors","updateAnchors","copy","slice","dynamicIndicator","lower","floor","upper","ceil","anchorLower","anchorUpper","inf","scaleX","scrollView","scrollTo","anchor","horizontal","showsHorizontalScrollIndicator","indicator","page","createPagesNavigator","pagesStyle","detach","panSlack","setWidth","viewing","setViewing","arrangerWidth","useAnimatedReaction","round","translation","activeOffsetX","translationX","shift","shouldSkipChild","DealerSection","DealersSectionedListGeneric","leader","dealersGroups","navigateTo","scrollEnabled","ListFooterComponent","DealersListAllScreen","substring","toUpperCase","DealersListByDayScreen","toLowerCase","DealersTabsScreenNavigator","DealersTabsScreen","thu","fri","sat","thuDate","friDate","satDate","isThu","isFri","isSat","Navigator","Screen","component","EventActionsSheet","sheetRef","debounce","snapToIndex","enablePanDownToClose","useIsEventDone","Indicator","withSequence","EventCardContent","glyph","poster","happening","done","styleBadgeFrame","colorBadge","colorGlyph","glyphContainer","mainPoster","ImageBackground","tagArea2","tagAreaInner","mainText","badgeFrame","rotate","subtitleArea","tagArea","paddingRight","alignContent","EventCard","useEventIsHappening","useEventIsDone","Duration","runtime","asMinutes","asHours","ShortName","EventSection","EventsSectionedListGeneric","eventsGroups","select","empty","cardType","EventsTabsContext","selected","setSelected","search","setSearch","hasResults","EventsTabsContextProvider","searchActual","useEventsTabsContext","EventsListByDayScreen","eventsByDay","upcoming","passed","stillUpcomingSections","partOfDay","passedSections","EventsListByRoomScreen","isEventDone","eventsByRoom","thru","EventsListByTrackScreen","eventsByTrack","EventsListGeneric","FlatList","EventsListSearchResultsScreen","onClear","EventsSearchScreen","isFocused","useIsFocused","Keyboard","onDay","getParent","setParams","filterType","onRoom","onTrack","searchStyle","roundedStyle","searchArea","searchField","categories","rounded","rowCenter","PersonalScheduleList","past","upcomingSections","EventsTabsScreenNavigator","EventsTabsScreenContent","formatDay","actualType","currentDayId","initialId","EventsTabsScreen","AnnouncementItem","announcement","Area","Author","Content","AnnouncementList","CurrentEventList","TodayScheduleList","UpcomingEventsList","CountdownHeader","DeviceSpecificWarnings","scheduledNotifications","cacheImages","pushNotifications","Device","LanguageWarnings","notice","HomeScreen","refreshControl","RefreshControl","Pager","isRight","setIsRight","toLeft","toRight","toLeftImmediately","toRightImmediately","equal","loginSchema","regno","positive","password","LoginForm","keyPrefix","errors","formState","login","onBlur","marginAfter","placeholderTextColor","autoCapitalize","toString","autoComplete","textContentType","keyboardType","selectTextOnFocus","secureTextEntry","contextMenuHidden","PagerLogin","Grid","cols","childrenArray","Array","isArray","chunk","row","distributed","PrivateMessageLinker","onOpenMessages","prevOpen","selectFromResult","PagerPrimary","onMessages","onLogin","onInfo","onCatchEmAll","onServices","onAbout","onSettings","onMap","loggedIn","MainMenu","pager","openFursuitGames","alert","useFursuitGames","openAdditionalServices","useAdditionalServices","on","loginBack","info","catchEmAll","services","settings","about","AreasNavigator","ScreenAreas","CacheStats","sync","cache","testID","DevButtons","createSync","syncResult","sendMessage","messageResult","me","onSendMessage","RecipientUid","onLogout","log","RemoteMessages","JSON","stringify","PlatformScheduledNotifications","setNotifications","isDevice","getAllScheduledNotificationsAsync","n","TimeTravel","weekBefore","weekAfter","setMomentLocale","language","locale","P","exhaustive","Localization","partial","useableThemes","i18next","use","initReactI18next","async","init","detect","callback","fallback","split","persisted","getItem","cacheUserLanguage","lng","setItem","fallbackLng","initImmediate","defaultNS","resources","en","nl","de","pl","da","react","useSuspense","parseMissingKeyHandler","warn","ThemePicker","selector","capitalize","borderBottomLeftRadius","borderBottomRightRadius","languages","LoginSettings","auth","UserSettings","i18n","analyticsEnabled","Alert","Checkbox","selectedValue","prompt","onValueChange","changeLanguage","Item","label","SettingItem","SettingsScreen","ScreenStartNavigator","createStackNavigator","ScreenStart","themeType","StatusBar","headerShown","AnalyticsManager","user","Analytics","setUser","setTag","manifest","android","versionCode","PlatformBackgroundSyncManager","changed","AppState","addEventListener","appState","removeItem","remove","isTriggerWithNotification","remoteMessage","scheduleNotificationFromTrigger","scheduleNotificationAsync","messageId","PlatformNotificationReceivedManager","receive","addNotificationReceivedListener","request","isTriggerWithData","cid","CID","Event","removeNotificationSubscription","PlatformNotificationRespondedManager","useLastNotificationResponse","dateResponded","relatedId","RelatedId","TOPICS","prepareToken","initial","granted","canAskAgain","retrieveToken","PlatformTokenManager","authToken","registerDevice","subscribeToTopic","topic","sentryRoutingInstrumentation","ReactNavigationInstrumentation","NavigationProvider","persistenceKey","isReady","setIsReady","setInitialState","onStateChange","getInitialURL","initialUrl","savedStateString","finally","useNavigationStatePersistence","logEvent","properties","useAnalytics","navTheme","colors","logAnalytics","screen_name","linking","areasLinking","screens","Home","Favorites","Results","Search","fromEntries","All","Thu","Fri","Sat","prefixes","config","Areas","Dealer","KnowledgeEntry","Settings","Map","About","linkingFrom","NavigationContainer","onReady","registerNavigationContainer","App","AppErrorContent","componentStack","AppErrorBoundary","hasError","errorInfo","this","PureComponent","defineTask","executionInfo","registerTaskAsync","setNotificationChannelAsync","importance","MIN","lightColor","HIGH","DEFAULT","setNotificationHandler","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","handleSuccess","handleError","Sentry","dsn","enableInExpoDevelopment","tracesSampleRate","integrations","ReactNativeTracing","traceFetch","enableAppStartTracking","enableNativeFramesTracking","traceXHR","enableStallTracking","tracingOrigins","routingInstrumentation","WrappedIndex","registerRootComponent"],"mappings":"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","file":"static/js/app.ca6a651e.chunk.js","sourcesContent":["var map = {\n\t\"./af\": 374,\n\t\"./af.js\": 374,\n\t\"./ar\": 375,\n\t\"./ar-dz\": 376,\n\t\"./ar-dz.js\": 376,\n\t\"./ar-kw\": 377,\n\t\"./ar-kw.js\": 377,\n\t\"./ar-ly\": 378,\n\t\"./ar-ly.js\": 378,\n\t\"./ar-ma\": 379,\n\t\"./ar-ma.js\": 379,\n\t\"./ar-sa\": 380,\n\t\"./ar-sa.js\": 380,\n\t\"./ar-tn\": 381,\n\t\"./ar-tn.js\": 381,\n\t\"./ar.js\": 375,\n\t\"./az\": 382,\n\t\"./az.js\": 382,\n\t\"./be\": 383,\n\t\"./be.js\": 383,\n\t\"./bg\": 384,\n\t\"./bg.js\": 384,\n\t\"./bm\": 385,\n\t\"./bm.js\": 385,\n\t\"./bn\": 386,\n\t\"./bn-bd\": 387,\n\t\"./bn-bd.js\": 387,\n\t\"./bn.js\": 386,\n\t\"./bo\": 388,\n\t\"./bo.js\": 388,\n\t\"./br\": 389,\n\t\"./br.js\": 389,\n\t\"./bs\": 390,\n\t\"./bs.js\": 390,\n\t\"./ca\": 391,\n\t\"./ca.js\": 391,\n\t\"./cs\": 392,\n\t\"./cs.js\": 392,\n\t\"./cv\": 393,\n\t\"./cv.js\": 393,\n\t\"./cy\": 394,\n\t\"./cy.js\": 394,\n\t\"./da\": 308,\n\t\"./da.js\": 308,\n\t\"./de\": 309,\n\t\"./de-at\": 395,\n\t\"./de-at.js\": 395,\n\t\"./de-ch\": 396,\n\t\"./de-ch.js\": 396,\n\t\"./de.js\": 309,\n\t\"./dv\": 397,\n\t\"./dv.js\": 397,\n\t\"./el\": 398,\n\t\"./el.js\": 398,\n\t\"./en-au\": 399,\n\t\"./en-au.js\": 399,\n\t\"./en-ca\": 400,\n\t\"./en-ca.js\": 400,\n\t\"./en-gb\": 310,\n\t\"./en-gb.js\": 310,\n\t\"./en-ie\": 401,\n\t\"./en-ie.js\": 401,\n\t\"./en-il\": 402,\n\t\"./en-il.js\": 402,\n\t\"./en-in\": 403,\n\t\"./en-in.js\": 403,\n\t\"./en-nz\": 404,\n\t\"./en-nz.js\": 404,\n\t\"./en-sg\": 405,\n\t\"./en-sg.js\": 405,\n\t\"./eo\": 406,\n\t\"./eo.js\": 406,\n\t\"./es\": 407,\n\t\"./es-do\": 408,\n\t\"./es-do.js\": 408,\n\t\"./es-mx\": 409,\n\t\"./es-mx.js\": 409,\n\t\"./es-us\": 410,\n\t\"./es-us.js\": 410,\n\t\"./es.js\": 407,\n\t\"./et\": 411,\n\t\"./et.js\": 411,\n\t\"./eu\": 412,\n\t\"./eu.js\": 412,\n\t\"./fa\": 413,\n\t\"./fa.js\": 413,\n\t\"./fi\": 414,\n\t\"./fi.js\": 414,\n\t\"./fil\": 415,\n\t\"./fil.js\": 415,\n\t\"./fo\": 416,\n\t\"./fo.js\": 416,\n\t\"./fr\": 417,\n\t\"./fr-ca\": 418,\n\t\"./fr-ca.js\": 418,\n\t\"./fr-ch\": 419,\n\t\"./fr-ch.js\": 419,\n\t\"./fr.js\": 417,\n\t\"./fy\": 420,\n\t\"./fy.js\": 420,\n\t\"./ga\": 421,\n\t\"./ga.js\": 421,\n\t\"./gd\": 422,\n\t\"./gd.js\": 422,\n\t\"./gl\": 423,\n\t\"./gl.js\": 423,\n\t\"./gom-deva\": 424,\n\t\"./gom-deva.js\": 424,\n\t\"./gom-latn\": 425,\n\t\"./gom-latn.js\": 425,\n\t\"./gu\": 426,\n\t\"./gu.js\": 426,\n\t\"./he\": 427,\n\t\"./he.js\": 427,\n\t\"./hi\": 428,\n\t\"./hi.js\": 428,\n\t\"./hr\": 429,\n\t\"./hr.js\": 429,\n\t\"./hu\": 430,\n\t\"./hu.js\": 430,\n\t\"./hy-am\": 431,\n\t\"./hy-am.js\": 431,\n\t\"./id\": 432,\n\t\"./id.js\": 432,\n\t\"./is\": 433,\n\t\"./is.js\": 433,\n\t\"./it\": 311,\n\t\"./it-ch\": 434,\n\t\"./it-ch.js\": 434,\n\t\"./it.js\": 311,\n\t\"./ja\": 435,\n\t\"./ja.js\": 435,\n\t\"./jv\": 436,\n\t\"./jv.js\": 436,\n\t\"./ka\": 437,\n\t\"./ka.js\": 437,\n\t\"./kk\": 438,\n\t\"./kk.js\": 438,\n\t\"./km\": 439,\n\t\"./km.js\": 439,\n\t\"./kn\": 440,\n\t\"./kn.js\": 440,\n\t\"./ko\": 441,\n\t\"./ko.js\": 441,\n\t\"./ku\": 442,\n\t\"./ku.js\": 442,\n\t\"./ky\": 443,\n\t\"./ky.js\": 443,\n\t\"./lb\": 444,\n\t\"./lb.js\": 444,\n\t\"./lo\": 445,\n\t\"./lo.js\": 445,\n\t\"./lt\": 446,\n\t\"./lt.js\": 446,\n\t\"./lv\": 447,\n\t\"./lv.js\": 447,\n\t\"./me\": 448,\n\t\"./me.js\": 448,\n\t\"./mi\": 449,\n\t\"./mi.js\": 449,\n\t\"./mk\": 450,\n\t\"./mk.js\": 450,\n\t\"./ml\": 451,\n\t\"./ml.js\": 451,\n\t\"./mn\": 452,\n\t\"./mn.js\": 452,\n\t\"./mr\": 453,\n\t\"./mr.js\": 453,\n\t\"./ms\": 454,\n\t\"./ms-my\": 455,\n\t\"./ms-my.js\": 455,\n\t\"./ms.js\": 454,\n\t\"./mt\": 456,\n\t\"./mt.js\": 456,\n\t\"./my\": 457,\n\t\"./my.js\": 457,\n\t\"./nb\": 458,\n\t\"./nb.js\": 458,\n\t\"./ne\": 459,\n\t\"./ne.js\": 459,\n\t\"./nl\": 312,\n\t\"./nl-be\": 460,\n\t\"./nl-be.js\": 460,\n\t\"./nl.js\": 312,\n\t\"./nn\": 461,\n\t\"./nn.js\": 461,\n\t\"./oc-lnc\": 462,\n\t\"./oc-lnc.js\": 462,\n\t\"./pa-in\": 463,\n\t\"./pa-in.js\": 463,\n\t\"./pl\": 313,\n\t\"./pl.js\": 313,\n\t\"./pt\": 464,\n\t\"./pt-br\": 465,\n\t\"./pt-br.js\": 465,\n\t\"./pt.js\": 464,\n\t\"./ro\": 466,\n\t\"./ro.js\": 466,\n\t\"./ru\": 467,\n\t\"./ru.js\": 467,\n\t\"./sd\": 468,\n\t\"./sd.js\": 468,\n\t\"./se\": 469,\n\t\"./se.js\": 469,\n\t\"./si\": 470,\n\t\"./si.js\": 470,\n\t\"./sk\": 471,\n\t\"./sk.js\": 471,\n\t\"./sl\": 472,\n\t\"./sl.js\": 472,\n\t\"./sq\": 473,\n\t\"./sq.js\": 473,\n\t\"./sr\": 474,\n\t\"./sr-cyrl\": 475,\n\t\"./sr-cyrl.js\": 475,\n\t\"./sr.js\": 474,\n\t\"./ss\": 476,\n\t\"./ss.js\": 476,\n\t\"./sv\": 477,\n\t\"./sv.js\": 477,\n\t\"./sw\": 478,\n\t\"./sw.js\": 478,\n\t\"./ta\": 479,\n\t\"./ta.js\": 479,\n\t\"./te\": 480,\n\t\"./te.js\": 480,\n\t\"./tet\": 481,\n\t\"./tet.js\": 481,\n\t\"./tg\": 482,\n\t\"./tg.js\": 482,\n\t\"./th\": 483,\n\t\"./th.js\": 483,\n\t\"./tk\": 484,\n\t\"./tk.js\": 484,\n\t\"./tl-ph\": 485,\n\t\"./tl-ph.js\": 485,\n\t\"./tlh\": 486,\n\t\"./tlh.js\": 486,\n\t\"./tr\": 487,\n\t\"./tr.js\": 487,\n\t\"./tzl\": 488,\n\t\"./tzl.js\": 488,\n\t\"./tzm\": 489,\n\t\"./tzm-latn\": 490,\n\t\"./tzm-latn.js\": 490,\n\t\"./tzm.js\": 489,\n\t\"./ug-cn\": 491,\n\t\"./ug-cn.js\": 491,\n\t\"./uk\": 492,\n\t\"./uk.js\": 492,\n\t\"./ur\": 493,\n\t\"./ur.js\": 493,\n\t\"./uz\": 494,\n\t\"./uz-latn\": 495,\n\t\"./uz-latn.js\": 495,\n\t\"./uz.js\": 494,\n\t\"./vi\": 496,\n\t\"./vi.js\": 496,\n\t\"./x-pseudo\": 497,\n\t\"./x-pseudo.js\": 497,\n\t\"./yo\": 498,\n\t\"./yo.js\": 498,\n\t\"./zh-cn\": 499,\n\t\"./zh-cn.js\": 499,\n\t\"./zh-hk\": 500,\n\t\"./zh-hk.js\": 500,\n\t\"./zh-mo\": 501,\n\t\"./zh-mo.js\": 501,\n\t\"./zh-tw\": 502,\n\t\"./zh-tw.js\": 502\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 697;","module.exports = __webpack_public_path__ + \"static/media/cheese.dd2b0d30.webm\";","module.exports = __webpack_public_path__ + \"static/media/sheesh.90581965.webm\";","module.exports = __webpack_public_path__ + \"static/media/dealer_black.1869cb12.png\";","module.exports = __webpack_public_path__ + \"static/media/banner_2022_no_logo.1d7b9551.png\";","import packageData from \"../package.json\";\r\n\r\n/**\r\n * The name of the convention.\r\n */\r\nexport const conName = packageData.convention.name;\r\n\r\n/**\r\n * The abbreviation for the convention name.\r\n */\r\nexport const conAbbr = packageData.convention.abbreviation;\r\n\r\n/**\r\n * Convention identifier.\r\n */\r\nexport const conId = packageData.convention.identifier;\r\n\r\n/**\r\n * App base, non-API URLs are relative to this.\r\n */\r\nexport const appBase = packageData.convention.appBase;\r\n\r\n/**\r\n * API base, API methods are under this URL.\r\n */\r\nexport const apiBase = packageData.convention.apiBase;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\n\r\nimport { apiBase } from \"../configuration\";\r\nimport { Query } from \"../types\";\r\nimport { TokenRegSysRequest, TokenRegSysResponse, TokenWhoAmIResponse } from \"./authorization.types\";\r\nimport { RecordId, RecordMetadata } from \"./eurofurence.types\";\r\n\r\ntype NewPrivateMessage = {\r\n    RecipientUid: string;\r\n    AuthorName: string;\r\n    Subject: string;\r\n    Message: string;\r\n};\r\n\r\nexport const authorizationService = createApi({\r\n    reducerPath: \"authorizationService\",\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: apiBase,\r\n        prepareHeaders: (headers, { getState }) => {\r\n            const token: string | undefined = (getState() as any).authorization?.token;\r\n\r\n            if (token) {\r\n                headers.set(\"Authorization\", `Bearer ${token}`);\r\n            }\r\n\r\n            return headers;\r\n        },\r\n    }),\r\n    tagTypes: [\"User\"],\r\n    endpoints: (builder) => ({\r\n        postToken: builder.mutation<TokenRegSysResponse, TokenRegSysRequest>({\r\n            query: (args) => ({\r\n                url: \"/Tokens/RegSys\",\r\n                method: \"POST\",\r\n                body: {\r\n                    RegNo: args.RegNo,\r\n                    Username: args.Username,\r\n                    Password: args.Password,\r\n                },\r\n            }),\r\n            invalidatesTags: [\"User\"],\r\n        }),\r\n        getWhoAmI: builder.query<TokenWhoAmIResponse, void>({\r\n            query: () => ({\r\n                url: \"/Tokens/WhoAmI\",\r\n            }),\r\n            providesTags: [\"User\"],\r\n        }),\r\n        postDeviceRegistration: builder.mutation<void, { DeviceId: string; Topics: string[] }>({\r\n            query: (args) => ({\r\n                url: \"/PushNotifications/FcmDeviceRegistration\",\r\n                method: \"POST\",\r\n                body: {\r\n                    DeviceId: args.DeviceId,\r\n                    Topics: args.Topics,\r\n                },\r\n            }),\r\n        }),\r\n        createSyncRequest: builder.mutation({\r\n            query: () => ({\r\n                url: \"/PushNotifications/SyncRequest\",\r\n                method: \"POST\",\r\n            }),\r\n        }),\r\n        postSubscribeToTopic: builder.mutation<void, { DeviceId: string; Topic: string }>({\r\n            query: (arg) => ({\r\n                url: `/PushNotifications/Topics/${arg.Topic}/${arg.DeviceId}`,\r\n                method: \"PUT\",\r\n            }),\r\n        }),\r\n        postUnsubscribeFromTopic: builder.mutation<void, { DeviceId: string; Topic: string }>({\r\n            query: (arg) => ({\r\n                url: `/PushNotifications/Topics/${arg.Topic}/${arg.DeviceId}`,\r\n                method: \"DELETE\",\r\n            }),\r\n        }),\r\n        sendPrivateMessage: builder.mutation<string, NewPrivateMessage>({\r\n            query: (args) => ({\r\n                url: \"/Communication/PrivateMessages\",\r\n                method: \"POST\",\r\n                body: args,\r\n            }),\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const selectById =\r\n    <T extends RecordMetadata>(id: RecordId) =>\r\n    (\r\n        query: Query<T[]>\r\n    ): Query<T[]> & {\r\n        record: T | undefined;\r\n    } => ({\r\n        ...query,\r\n        record: query.data?.find((record: RecordMetadata) => record.Id === id),\r\n    });\r\n\r\nexport const filterByIds =\r\n    <T extends RecordMetadata>(ids: RecordId[]) =>\r\n    (\r\n        query: Query<T[]>\r\n    ): Query<T[]> & {\r\n        records: T[];\r\n    } => ({\r\n        ...query,\r\n        records: query.data?.filter((it: RecordMetadata) => it.Id in ids) ?? [],\r\n    });\r\n\r\nexport const {\r\n    usePostTokenMutation,\r\n    useGetWhoAmIQuery,\r\n    usePostDeviceRegistrationMutation,\r\n    useCreateSyncRequestMutation,\r\n    useSendPrivateMessageMutation,\r\n    usePostSubscribeToTopicMutation,\r\n    usePostUnsubscribeFromTopicMutation,\r\n} = authorizationService;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport { authorizationService } from \"./authorization.service\";\r\nimport { TokenRegSysResponse } from \"./authorization.types\";\r\n\r\ntype AuthorizationState = {\r\n    token?: string;\r\n    username?: string;\r\n    uid?: string;\r\n    tokenValidUntil?: string;\r\n    isLoggedIn: boolean;\r\n    isExpired: boolean;\r\n};\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    isExpired: false,\r\n} as AuthorizationState;\r\nexport const authorizationSlice = createSlice({\r\n    name: \"authorization\",\r\n    initialState,\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.token = undefined;\r\n            state.username = undefined;\r\n            state.tokenValidUntil = undefined;\r\n            state.isLoggedIn = false;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addMatcher(authorizationService.endpoints.postToken.matchFulfilled, (state, { payload }: { payload: TokenRegSysResponse }) => {\r\n            state.token = payload.Token;\r\n            state.username = payload.Username;\r\n            state.tokenValidUntil = payload.TokenValidUntil;\r\n            state.uid = payload.Uid;\r\n            state.isLoggedIn = true;\r\n            state.isExpired = false;\r\n        });\r\n    },\r\n});\r\n\r\nexport const { logout } = authorizationSlice.actions;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport _ from \"lodash\";\r\n\r\nimport { RecordId } from \"./eurofurence.types\";\r\n\r\nexport type Notification = {\r\n    recordId: RecordId;\r\n    type: \"EventReminder\";\r\n    dateScheduled: string;\r\n    dateCreated: string;\r\n};\r\n\r\nexport type FCMMessage = {\r\n    dateReceived: string;\r\n    content: object;\r\n    trigger: object;\r\n    identifier: string;\r\n};\r\ntype NotificationState = {\r\n    notifications: Notification[];\r\n    fcmMessages: FCMMessage[];\r\n};\r\n\r\nconst initialState: NotificationState = {\r\n    notifications: [],\r\n    fcmMessages: [],\r\n};\r\n\r\nexport const backgroundSlice = createSlice({\r\n    name: \"background\",\r\n    initialState,\r\n    reducers: {\r\n        addNotification: (state, action: PayloadAction<Notification>) => {\r\n            state.notifications.push(action.payload);\r\n        },\r\n        removeNotification: (state, action: PayloadAction<RecordId>) => {\r\n            state.notifications = state.notifications.filter((it) => it.recordId !== action.payload);\r\n        },\r\n        logFCMMessage: (state, action: PayloadAction<FCMMessage>) => {\r\n            state.fcmMessages = _.chain(state.fcmMessages)\r\n                .concat(action.payload)\r\n                .orderBy((it) => it.dateReceived, \"desc\")\r\n                .value();\r\n        },\r\n    },\r\n});\r\n\r\nexport const { addNotification, removeNotification, logFCMMessage } = backgroundSlice.actions;\r\n","import { createEntityAdapter, createSlice, EntityAdapter, EntityState, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport moment from \"moment\";\r\n\r\nimport {\r\n    AnnouncementRecord,\r\n    DealerRecord,\r\n    EventDayRecord,\r\n    EventRecord,\r\n    EventRoomRecord,\r\n    EventTrackRecord,\r\n    ImageRecord,\r\n    KnowledgeEntryRecord,\r\n    KnowledgeGroupRecord,\r\n    MapRecord,\r\n} from \"./eurofurence.types\";\r\n\r\ntype EntitySyncState<T = unknown> = {\r\n    StorageLastChangeDateTimeUtc: string;\r\n    StorageDeltaStartChagneDAteTimeUtc: string;\r\n    RemoveAllEntitiesBeforeInsert: string;\r\n    ChangedEntities?: T[];\r\n    DeletedEntities?: string[];\r\n};\r\n\r\ntype SyncResponse = {\r\n    ConventionIdentifier: string;\r\n    Since?: string;\r\n    CurrentDateTimeUtc: string;\r\n    State: string;\r\n    Events: EntitySyncState<EventRecord>;\r\n    EventConferenceDays: EntitySyncState<EventDayRecord>;\r\n    EventConferenceRooms: EntitySyncState<EventRoomRecord>;\r\n    EventConferenceTracks: EntitySyncState<EventTrackRecord>;\r\n    KnowledgeGroups: EntitySyncState<KnowledgeGroupRecord>;\r\n    KnowledgeEntries: EntitySyncState<KnowledgeEntryRecord>;\r\n    Images: EntitySyncState<ImageRecord>;\r\n    Dealers: EntitySyncState<DealerRecord>;\r\n    Announcements: EntitySyncState<AnnouncementRecord>;\r\n    Maps: EntitySyncState<MapRecord>;\r\n};\r\n\r\nexport const eventsAdapter = createEntityAdapter<EventRecord>({\r\n    selectId: (model) => model.Id,\r\n    sortComparer: (a, b) => moment(a.StartDateTimeUtc).subtract(b.StartDateTimeUtc).valueOf(),\r\n});\r\n\r\nexport const eventDaysAdapter = createEntityAdapter<EventDayRecord>({\r\n    selectId: (model) => model.Id,\r\n    sortComparer: (a, b) => a.Date.localeCompare(b.Date),\r\n});\r\n\r\nexport const eventRoomsAdapter = createEntityAdapter<EventRoomRecord>({\r\n    selectId: (model) => model.Id,\r\n    sortComparer: (a, b) => (a.Name && b.Name ? a.Name.localeCompare(b.Name) : 0),\r\n});\r\n\r\nexport const eventTracksAdapter = createEntityAdapter<EventTrackRecord>({\r\n    selectId: (model) => model.Id,\r\n    sortComparer: (a, b) => (a.Name && b.Name ? a.Name.localeCompare(b.Name) : 0),\r\n});\r\n\r\nexport const knowledgeGroupsAdapter = createEntityAdapter<KnowledgeGroupRecord>({\r\n    selectId: (model) => model.Id,\r\n    sortComparer: (a, b) => a.Order - b.Order,\r\n});\r\n\r\nexport const knowledgeEntriesAdapter = createEntityAdapter<KnowledgeEntryRecord>({\r\n    selectId: (model) => model.Id,\r\n    sortComparer: (a, b) => a.Order - b.Order,\r\n});\r\n\r\nexport const imagesAdapter = createEntityAdapter<ImageRecord>({\r\n    selectId: (model) => model.Id,\r\n});\r\n\r\nexport const dealersAdapter = createEntityAdapter<DealerRecord>({\r\n    selectId: (model) => model.Id,\r\n});\r\n\r\nexport const announcementsAdapter = createEntityAdapter<AnnouncementRecord>({\r\n    selectId: (model) => model.Id,\r\n    sortComparer: (a, b) => a.ValidUntilDateTimeUtc.localeCompare(b.ValidUntilDateTimeUtc),\r\n});\r\n\r\nexport const mapsAdapter = createEntityAdapter<MapRecord>({\r\n    selectId: (model) => model.Id,\r\n    sortComparer: (a, b) => a.Order - b.Order,\r\n});\r\n\r\ntype EurofurenceCacheState = {\r\n    lastSynchronised: string;\r\n    state: \"uninitialized\" | \"preview\" | \"refreshing\" | string;\r\n    events: EntityState<EventRecord>;\r\n    eventDays: EntityState<EventDayRecord>;\r\n    eventRooms: EntityState<EventRoomRecord>;\r\n    eventTracks: EntityState<EventRoomRecord>;\r\n    knowledgeGroups: EntityState<KnowledgeGroupRecord>;\r\n    knowledgeEntries: EntityState<KnowledgeEntryRecord>;\r\n    images: EntityState<ImageRecord>;\r\n    dealers: EntityState<DealerRecord>;\r\n    announcements: EntityState<AnnouncementRecord>;\r\n    maps: EntityState<MapRecord>;\r\n};\r\n\r\nconst initialState: EurofurenceCacheState = {\r\n    lastSynchronised: moment(0).toISOString(),\r\n    state: \"uninitialized\",\r\n    events: eventsAdapter.getInitialState(),\r\n    eventDays: eventDaysAdapter.getInitialState(),\r\n    eventRooms: eventRoomsAdapter.getInitialState(),\r\n    eventTracks: eventTracksAdapter.getInitialState(),\r\n    knowledgeGroups: knowledgeGroupsAdapter.getInitialState(),\r\n    knowledgeEntries: knowledgeEntriesAdapter.getInitialState(),\r\n    maps: mapsAdapter.getInitialState(),\r\n    dealers: dealersAdapter.getInitialState(),\r\n    announcements: announcementsAdapter.getInitialState(),\r\n    images: imagesAdapter.getInitialState(),\r\n};\r\n\r\nconst syncEntities = <T>(state: EntityState<T>, adapter: EntityAdapter<T>, delta: EntitySyncState<T>) => {\r\n    if (delta.RemoveAllEntitiesBeforeInsert) {\r\n        adapter.removeAll(state);\r\n    }\r\n\r\n    if (delta.ChangedEntities) {\r\n        adapter.upsertMany(state, delta.ChangedEntities);\r\n    }\r\n\r\n    if (delta.DeletedEntities) {\r\n        adapter.removeMany(state, delta.DeletedEntities);\r\n    }\r\n};\r\n\r\nexport const eurofurenceCache = createSlice({\r\n    name: \"eurofurenceCache\",\r\n    initialState,\r\n    reducers: {\r\n        applySync: (state, action: PayloadAction<SyncResponse>) => {\r\n            state.lastSynchronised = action.payload.CurrentDateTimeUtc;\r\n            state.state = action.payload.State;\r\n\r\n            syncEntities(state.events, eventsAdapter, action.payload.Events);\r\n            syncEntities(state.eventDays, eventDaysAdapter, action.payload.EventConferenceDays);\r\n            syncEntities(state.eventRooms, eventRoomsAdapter, action.payload.EventConferenceRooms);\r\n            syncEntities(state.eventTracks, eventTracksAdapter, action.payload.EventConferenceTracks);\r\n            syncEntities(state.knowledgeGroups, knowledgeGroupsAdapter, action.payload.KnowledgeGroups);\r\n            syncEntities(state.knowledgeEntries, knowledgeEntriesAdapter, action.payload.KnowledgeEntries);\r\n            syncEntities(state.dealers, dealersAdapter, action.payload.Dealers);\r\n            syncEntities(state.images, imagesAdapter, action.payload.Images);\r\n            syncEntities(state.announcements, announcementsAdapter, action.payload.Announcements);\r\n            syncEntities(state.maps, mapsAdapter, action.payload.Maps);\r\n        },\r\n        resetCache: () => {\r\n            return initialState;\r\n        },\r\n        startCacheSync: (state) => {\r\n            state.state = \"refreshing\";\r\n        },\r\n    },\r\n});\r\n\r\nexport const { applySync, resetCache, startCacheSync } = eurofurenceCache.actions;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\r\nimport _ from \"lodash\";\r\nimport { REHYDRATE } from \"redux-persist\";\r\n\r\nimport { apiBase } from \"../configuration\";\r\nimport {\r\n    AnnouncementRecord,\r\n    CommunicationRecord,\r\n    DealerRecord,\r\n    EventDayRecord,\r\n    EventRecord,\r\n    EventRoomRecord,\r\n    EventTrackRecord,\r\n    ImageRecord,\r\n    KnowledgeEntryRecord,\r\n    KnowledgeGroupRecord,\r\n    MapRecord,\r\n    RecordId,\r\n    RecordMetadata,\r\n} from \"./eurofurence.types\";\r\n\r\nconst tagsFromList =\r\n    <TagType extends string>(type: TagType) =>\r\n    <ResultType extends RecordMetadata[]>(result: ResultType | undefined) =>\r\n        result ? result.map((it) => ({ type, id: it.Id })) : [type];\r\nconst tagsFromItem =\r\n    <TagType extends string>(type: TagType) =>\r\n    <ResultType extends RecordMetadata>(result: ResultType | undefined) =>\r\n        result ? [{ type, id: result.Id }] : [type];\r\n\r\nexport const eurofurenceService = createApi({\r\n    reducerPath: \"eurofurenceService\",\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: apiBase,\r\n        prepareHeaders: (headers, { getState }) => {\r\n            const token: string | undefined = (getState() as any).authorization?.token;\r\n\r\n            if (token) {\r\n                headers.set(\"Authorization\", `Bearer ${token}`);\r\n            }\r\n\r\n            return headers;\r\n        },\r\n    }),\r\n    tagTypes: [\"Announcement\", \"Event\", \"Dealer\", \"EventDay\", \"EventTrack\", \"EventRoom\", \"Map\", \"KnowledgeGroup\", \"KnowledgeEntry\", \"Image\", \"Communication\"],\r\n    keepUnusedDataFor: 0,\r\n    extractRehydrationInfo(action, { reducerPath }) {\r\n        if (action.type === REHYDRATE && action.payload) {\r\n            return action.payload[reducerPath];\r\n        }\r\n    },\r\n    endpoints: (builder) => ({\r\n        getAnnouncements: builder.query<AnnouncementRecord[], void>({\r\n            query: () => ({ url: \"/Announcements\" }),\r\n            providesTags: tagsFromList(\"Announcement\"),\r\n        }),\r\n        getAnnouncementsById: builder.query<AnnouncementRecord, RecordId>({\r\n            query: (args) => ({ url: `/Announcements/${args}` }),\r\n            providesTags: tagsFromItem(\"Announcement\"),\r\n        }),\r\n        getEvents: builder.query<EventRecord[], void>({\r\n            query: () => ({ url: \"/Events\" }),\r\n            providesTags: tagsFromList(\"Event\"),\r\n        }),\r\n        getEventById: builder.query<EventRecord, RecordId>({\r\n            query: (args) => ({ url: `/Events/${args}` }),\r\n            providesTags: tagsFromItem(\"Event\"),\r\n        }),\r\n        getDealers: builder.query<DealerRecord[], void>({\r\n            query: () => ({ url: \"/Dealers\" }),\r\n            providesTags: tagsFromList(\"Dealer\"),\r\n        }),\r\n        getDealerById: builder.query<DealerRecord, RecordId>({\r\n            query: (args) => ({ url: `/Dealers/${args}` }),\r\n            providesTags: tagsFromItem(\"Dealer\"),\r\n        }),\r\n        getEventDays: builder.query<EventDayRecord[], void>({\r\n            query: () => ({ url: \"/EventConferenceDays\" }),\r\n            providesTags: tagsFromList(\"EventDay\"),\r\n        }),\r\n        getEventDayById: builder.query<EventDayRecord, RecordId>({\r\n            query: (args) => ({ url: `/EventConferenceDays/${args}` }),\r\n            providesTags: tagsFromItem(\"EventDay\"),\r\n        }),\r\n        getEventTracks: builder.query<EventTrackRecord[], void>({\r\n            query: () => ({ url: \"/EventConferenceTracks\" }),\r\n            providesTags: tagsFromList(\"EventTrack\"),\r\n        }),\r\n        getEventTrackById: builder.query<EventTrackRecord, RecordId>({\r\n            query: (args) => ({ url: `/EventConferenceTracks/${args}` }),\r\n            providesTags: tagsFromItem(\"EventTrack\"),\r\n        }),\r\n        getEventRooms: builder.query<EventRoomRecord[], void>({\r\n            query: () => ({ url: \"/EventConferenceRooms\" }),\r\n            providesTags: tagsFromList(\"EventRoom\"),\r\n        }),\r\n        getEventRoomById: builder.query<EventRoomRecord, RecordId>({\r\n            query: (args) => ({ url: `/EventConferenceRooms/${args}` }),\r\n            providesTags: tagsFromItem(\"EventRoom\"),\r\n        }),\r\n        getMaps: builder.query<MapRecord[], void>({\r\n            query: () => ({ url: \"/Maps\" }),\r\n            providesTags: tagsFromList(\"Map\"),\r\n        }),\r\n        getMapById: builder.query<MapRecord, RecordId>({\r\n            query: (args) => ({ url: `/Maps/${args}` }),\r\n            providesTags: tagsFromItem(\"Map\"),\r\n        }),\r\n        getKnowledgeGroups: builder.query<KnowledgeGroupRecord[], void>({\r\n            query: () => ({ url: \"/KnowledgeGroups\" }),\r\n            providesTags: tagsFromList(\"KnowledgeGroup\"),\r\n        }),\r\n        getKnowledgeGroupById: builder.query<KnowledgeGroupRecord, RecordId>({\r\n            query: (args) => ({ url: `/KnowledgeGroups/${args}` }),\r\n            providesTags: tagsFromItem(\"KnowledgeGroup\"),\r\n        }),\r\n        getKnowledgeEntries: builder.query<KnowledgeEntryRecord[], void>({\r\n            query: () => ({ url: \"/KnowledgeEntries\" }),\r\n            providesTags: tagsFromList(\"KnowledgeEntry\"),\r\n        }),\r\n        getKnowledgeEntryById: builder.query<KnowledgeEntryRecord, RecordId>({\r\n            query: (args) => ({ url: `/KnowledgeEntries/${args}` }),\r\n            providesTags: tagsFromItem(\"KnowledgeEntry\"),\r\n        }),\r\n        getImages: builder.query<ImageRecord[], void>({\r\n            query: () => ({ url: `/Images` }),\r\n            providesTags: tagsFromList(\"Image\"),\r\n        }),\r\n        getCommunications: builder.query<CommunicationRecord[], void>({\r\n            query: () => \"/Communication/PrivateMessages\",\r\n            providesTags: tagsFromList(\"Communication\"),\r\n            transformResponse: (result: CommunicationRecord[]) => _.orderBy(result, (it) => it.CreatedDateTimeUtc, \"desc\"),\r\n        }),\r\n        markCommunicationRead: builder.mutation<boolean, RecordId>({\r\n            query: (arg) => ({\r\n                url: `/Communication/PrivateMessages/${arg}/Read`,\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"text/json\",\r\n                },\r\n                body: \"true\",\r\n                responseHandler: async (response: Response) => response.ok,\r\n            }),\r\n            invalidatesTags: (result, error, arg) => (result ? [{ type: \"Communication\", id: arg }] : []),\r\n        }),\r\n        submitEventFeedback: builder.mutation<void, { eventId: RecordId; rating: number; message?: string }>({\r\n            query: (args) => ({\r\n                url: \"/EventFeedback\",\r\n                method: \"POST\",\r\n                body: {\r\n                    EventId: args.eventId,\r\n                    Rating: args.rating,\r\n                    Message: args.message,\r\n                },\r\n            }),\r\n        }),\r\n    }),\r\n});\r\n\r\nexport const {\r\n    useGetAnnouncementsQuery,\r\n    useGetEventsQuery,\r\n    useGetEventByIdQuery,\r\n    useGetDealersQuery,\r\n    useGetImagesQuery,\r\n    useGetEventDaysQuery,\r\n    useGetEventDayByIdQuery,\r\n    useGetEventTracksQuery,\r\n    useGetEventTrackByIdQuery,\r\n    useGetEventRoomsQuery,\r\n    useGetEventRoomByIdQuery,\r\n    useGetCommunicationsQuery,\r\n    useMarkCommunicationReadMutation,\r\n    useSubmitEventFeedbackMutation,\r\n} = eurofurenceService;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nimport { AppTheme } from \"../context/Theme\";\r\n\r\ntype SettingsSliceState = {\r\n    analytics: {\r\n        enabled: boolean;\r\n        prompted: boolean;\r\n    };\r\n    showDevMenu?: boolean;\r\n    theme?: AppTheme;\r\n};\r\n\r\nexport const settingsSlice = createSlice({\r\n    name: \"settingsSlice\",\r\n    initialState: {\r\n        analytics: {\r\n            enabled: false,\r\n            prompted: false,\r\n        },\r\n        showDevMenu: false,\r\n    } as SettingsSliceState,\r\n    reducers: {\r\n        setAnalytics: (state, action: PayloadAction<boolean>) => {\r\n            state.analytics.enabled = action.payload;\r\n            state.analytics.prompted = true;\r\n        },\r\n        showDevMenu: (state, action: PayloadAction<boolean>) => {\r\n            state.showDevMenu = action.payload;\r\n        },\r\n        toggleDevMenu: (state, action: PayloadAction<boolean | undefined>) => {\r\n            state.showDevMenu = action.payload !== undefined ? action.payload : !state.showDevMenu ?? true;\r\n        },\r\n        setTheme: (state, action: PayloadAction<AppTheme | undefined>) => {\r\n            state.theme = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { setAnalytics, showDevMenu, toggleDevMenu, setTheme } = settingsSlice.actions;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport Constants from \"expo-constants\";\r\nimport moment from \"moment\";\r\n\r\ninterface TimeTravelState {\r\n    amount: number;\r\n    enabled: boolean;\r\n    visible: boolean;\r\n}\r\n\r\nconst initialState: TimeTravelState = {\r\n    amount: 0,\r\n    enabled: false,\r\n    visible: Constants.debugMode,\r\n};\r\n\r\nexport const timeTravelSlice = createSlice({\r\n    name: \"timetravel\",\r\n    initialState,\r\n    reducers: {\r\n        travelForward: (state, action: PayloadAction<number>) => {\r\n            state.amount += action.payload;\r\n        },\r\n        travelBackward: (state, action: PayloadAction<number>) => {\r\n            state.amount -= action.payload;\r\n        },\r\n        travelToDate: (state, action: PayloadAction<string>) => {\r\n            const now = moment().startOf(\"day\");\r\n            const target = moment(action.payload).startOf(\"day\");\r\n            state.amount = target.diff(now, \"milliseconds\");\r\n        },\r\n        resetTravel: (state) => {\r\n            state.amount = 0;\r\n        },\r\n        enableTimeTravel: (state, action: PayloadAction<boolean>) => {\r\n            state.enabled = action.payload;\r\n        },\r\n        showTimeTravel: (state, action: PayloadAction<boolean>) => {\r\n            state.visible = action.payload;\r\n        },\r\n    },\r\n});\r\n\r\nexport const { travelForward, travelBackward, travelToDate, resetTravel, enableTimeTravel, showTimeTravel } = timeTravelSlice.actions;\r\n\r\nconst getTimeInterval = (unit: moment.unitOfTime.DurationConstructor) => moment.duration(1, unit).asMilliseconds();\r\nexport const ONE_MINUTE = getTimeInterval(\"minute\");\r\nexport const ONE_HOUR = getTimeInterval(\"hour\");\r\nexport const ONE_DAY = getTimeInterval(\"day\");\r\nexport const ONE_WEEK = getTimeInterval(\"week\");\r\nexport const ONE_MONTH = getTimeInterval(\"month\");\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { combineReducers, configureStore } from \"@reduxjs/toolkit\";\r\nimport { Platform } from \"react-native\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport logger from \"redux-logger\";\r\nimport { FLUSH, PAUSE, PERSIST, persistReducer, persistStore, PURGE, REGISTER, REHYDRATE } from \"redux-persist\";\r\n\r\nimport { authorizationService } from \"./authorization.service\";\r\nimport { authorizationSlice } from \"./authorization.slice\";\r\nimport { backgroundSlice } from \"./background.slice\";\r\nimport { eurofurenceCache } from \"./eurofurence.cache\";\r\nimport { eurofurenceService } from \"./eurofurence.service\";\r\nimport { settingsSlice } from \"./settings.slice\";\r\nimport { timeTravelSlice } from \"./timetravel.slice\";\r\n\r\nexport const reducers = combineReducers({\r\n    [backgroundSlice.name]: backgroundSlice.reducer,\r\n    [timeTravelSlice.name]: timeTravelSlice.reducer,\r\n    [authorizationSlice.name]: authorizationSlice.reducer,\r\n    [eurofurenceCache.name]: eurofurenceCache.reducer,\r\n    [eurofurenceService.reducerPath]: eurofurenceService.reducer,\r\n    [authorizationService.reducerPath]: authorizationService.reducer,\r\n    [settingsSlice.name]: settingsSlice.reducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(\r\n    {\r\n        key: \"root\",\r\n        version: 2,\r\n        storage: AsyncStorage,\r\n        whitelist: [timeTravelSlice.name, eurofurenceService.reducerPath, backgroundSlice.name, authorizationSlice.name, eurofurenceCache.name, settingsSlice.name],\r\n    },\r\n    reducers\r\n);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) => {\r\n        const middleware = getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n                ignoredPaths: [eurofurenceCache.name, eurofurenceService.reducerPath],\r\n                warnAfter: 200,\r\n            },\r\n        }).concat(eurofurenceService.middleware, authorizationService.middleware);\r\n\r\n        if (Platform.OS === \"web\") {\r\n            middleware.concat(logger);\r\n        }\r\n\r\n        return middleware;\r\n    },\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n\r\n// Types for the Store\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n// Typed versions of common hooks\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { useMemo } from \"react\";\r\nimport { useColorScheme, ViewStyle } from \"react-native\";\r\nimport { shallowEqual } from \"react-redux\";\r\n\r\nimport { useAppSelector } from \"../store\";\r\n\r\nexport type Theme = Record<string, string> & {\r\n    /**\r\n     * Primary brand color.\r\n     */\r\n    primary: string;\r\n\r\n    /**\r\n     * Secondary \"colorful\" color.\r\n     */\r\n    secondary: string;\r\n\r\n    /**\r\n     * Background of element displayed within a screen.\r\n     */\r\n    background: string;\r\n\r\n    /**\r\n     * Lowest surface of the screen, i.e., the proper background color.\r\n     */\r\n    surface: string;\r\n\r\n    /**\r\n     * Opposite of background.\r\n     */\r\n    inverted: string;\r\n\r\n    /**\r\n     * Text color.\r\n     */\r\n    text: string;\r\n\r\n    /**\r\n     * Text color with emphasis.\r\n     */\r\n    important: string;\r\n\r\n    /**\r\n     Text color on inverted.\r\n     */\r\n    invText: string;\r\n\r\n    /**\r\n     * Text color with emphasis on inverted.\r\n     */\r\n    invImportant: string;\r\n\r\n    /**\r\n     * Warning background.\r\n     */\r\n    warning: string;\r\n\r\n    /**\r\n     * Notification color.\r\n     */\r\n    notification: string;\r\n\r\n    /**\r\n     * Pull towards black.\r\n     */\r\n    darken: string;\r\n\r\n    /**\r\n     * Pull towards light.\r\n     */\r\n    lighten: string;\r\n\r\n    /**\r\n     * Pull against background.\r\n     */\r\n    soften: string;\r\n\r\n    /**\r\n     * White.\r\n     */\r\n    white: string;\r\n\r\n    /**\r\n     * Background for super-sponsor badge.\r\n     */\r\n    superSponsor: string;\r\n\r\n    /**\r\n     * Background for sponsor badge.\r\n     */\r\n    sponsor: string;\r\n\r\n    /**\r\n     * Text on super-sponsor badge.\r\n     */\r\n    superSponsorText: string;\r\n\r\n    /**\r\n     * Text on sponsor badge.\r\n     */\r\n    sponsorText: string;\r\n\r\n    /**\r\n     * Map marker.\r\n     */\r\n    marker: string;\r\n};\r\n\r\n// Resolve from system selection. Later, menu entry done.\r\nexport const useThemeType = (): AppTheme => {\r\n    const userTheme = useAppSelector((state) => state.settingsSlice.theme, shallowEqual);\r\n    const systemTheme = useColorScheme();\r\n\r\n    return userTheme ? userTheme : systemTheme ? systemTheme : \"light\";\r\n};\r\n\r\n/**\r\n * All theme definitions.\r\n */\r\nconst themes = {\r\n    light: {\r\n        primary: \"#006459\",\r\n        secondary: \"#3421bc\",\r\n        background: \"#f7f7f7\",\r\n        surface: \"#f0f0f0\",\r\n        inverted: \"#040014\",\r\n        text: \"#323034\",\r\n        important: \"#000000\",\r\n        invText: \"#fff7f0\",\r\n        invImportant: \"#ffffff\",\r\n        warning: \"#ee5e22\",\r\n        notification: \"#d91c52\",\r\n        darken: \"#04001440\",\r\n        lighten: \"#f7f7f7a0\",\r\n        soften: \"#040014a0\",\r\n        white: \"#ffffff\",\r\n        superSponsor: \"#5300ff\",\r\n        superSponsorText: \"#fff7f0\",\r\n        sponsor: \"#ffd700\",\r\n        sponsorText: \"#323034\",\r\n        marker: \"#ff2f66\",\r\n    },\r\n    dark: {\r\n        primary: \"#37726d\",\r\n        secondary: \"#917dff\",\r\n        background: \"#212121\",\r\n        surface: \"#000000\",\r\n        inverted: \"#e0dedb\",\r\n        text: \"#e0dedb\",\r\n        important: \"#f1ede8\",\r\n        invText: \"#131313\",\r\n        invImportant: \"#000000\",\r\n        warning: \"#ee5e22\",\r\n        notification: \"#d91c52\",\r\n        darken: \"#04001440\",\r\n        lighten: \"#f7f7f780\",\r\n        soften: \"#f7f7f7a0\",\r\n        white: \"#ffffff\",\r\n        superSponsor: \"#5300ff\",\r\n        superSponsorText: \"#fff7f0\",\r\n        sponsor: \"#ffd700\",\r\n        sponsorText: \"#323034\",\r\n        marker: \"#ff2f66\",\r\n    },\r\n    requinard: {\r\n        primary: \"#fff100\",\r\n        secondary: \"#dace00\",\r\n        background: \"#2b2b2b\",\r\n        surface: \"#414141\",\r\n        inverted: \"#b0b0b0\",\r\n        text: \"#e0dedb\",\r\n        important: \"#f1ede8\",\r\n        invText: \"#131313\",\r\n        invImportant: \"#000000\",\r\n        warning: \"#ee5e22\",\r\n        notification: \"#d91c52\",\r\n        darken: \"#04001440\",\r\n        lighten: \"#f7f7f7a0\",\r\n        soften: \"#f7f7f7a0\",\r\n        white: \"#ffffff\",\r\n        superSponsor: \"#5300ff\",\r\n        superSponsorText: \"#fff7f0\",\r\n        sponsor: \"#ffd700\",\r\n        sponsorText: \"#323034\",\r\n        marker: \"#ff2f66\",\r\n    },\r\n};\r\n\r\nexport type AppTheme = keyof typeof themes;\r\n\r\nexport const useTheme = (): Theme => {\r\n    // Use the selected theme type and resolve the values.\r\n    const type = useThemeType();\r\n    return useMemo(() => themes[type], [type]);\r\n};\r\n\r\nexport const useThemeColor = (color: keyof Theme) => useTheme()[color];\r\n\r\nexport const useThemeBackground = (color: keyof Theme) => {\r\n    const backgroundColor = useThemeColor(color);\r\n    return useMemo<ViewStyle>(() => ({ backgroundColor }), [backgroundColor]);\r\n};\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { ColorValue, StyleProp, StyleSheet, Text, TextProps, TextStyle } from \"react-native\";\r\n\r\nimport { Theme, useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\n\r\n/**\r\n * Props to label.\r\n */\r\nexport type LabelProps = TextProps & {\r\n    /**\r\n     * The type, one of some predefined primary style values.\r\n     */\r\n    type?: keyof typeof types;\r\n\r\n    /**\r\n     * The variant, one of some predefined secondary style values, overriding type.\r\n     */\r\n    variant?: keyof typeof variants;\r\n    /**\r\n     * The color name, a value from the theme.\r\n     */\r\n    color?: keyof Theme | ColorValue;\r\n\r\n    /**\r\n     * The icon to be displayed next to the label.\r\n     */\r\n    icon?: IconNames;\r\n\r\n    /**\r\n     * Margin left.\r\n     */\r\n    ml?: number;\r\n\r\n    /**\r\n     * Margin top.\r\n     */\r\n    mt?: number;\r\n\r\n    /**\r\n     * Margin right.\r\n     */\r\n    mr?: number;\r\n\r\n    /**\r\n     * Margin bottom.\r\n     */\r\n    mb?: number;\r\n};\r\n\r\nexport const Label: FC<LabelProps> = ({ style, type, variant, color = \"text\", icon, ml, mt, mr, mb, children, ...props }) => {\r\n    // Get theme for resolution.\r\n    const theme = useTheme();\r\n\r\n    // Create computed part.\r\n    const resType = useMemo(() => (type ? types[type] : types.regular), [type]);\r\n    const resVariant = useMemo(() => (variant ? variants[variant] : variants.regular), [variant]);\r\n    const marginColor = useMemo(() => {\r\n        // Get color value from theme, otherwise use as is.\r\n        const colorValue = typeof color === \"string\" && color in theme ? theme[color] : color;\r\n        const result: StyleProp<TextStyle> = { color: colorValue };\r\n        if (typeof ml === \"number\") result.marginLeft = ml;\r\n        if (typeof mt === \"number\") result.marginTop = mt;\r\n        if (typeof mr === \"number\") result.marginRight = mr;\r\n        if (typeof mb === \"number\") result.marginBottom = mb;\r\n        return result;\r\n    }, [ml, mt, mr, mb, theme, color]);\r\n\r\n    const iconStyle: StyleProp<TextStyle> = { marginRight: 8, textAlignVertical: \"bottom\" };\r\n    const iconSize = StyleSheet.flatten(resType).fontSize * 2;\r\n\r\n    // Return styled text.\r\n    return (\r\n        <Text style={[resType, resVariant, marginColor, style]} {...props}>\r\n            {!icon ? null : <Icon name={icon} style={iconStyle} size={iconSize} />}\r\n            {children}\r\n        </Text>\r\n    );\r\n};\r\n\r\nconst types = StyleSheet.create({\r\n    lead: {\r\n        fontWeight: \"100\",\r\n        fontSize: 20,\r\n    },\r\n    h1: {\r\n        fontWeight: \"300\",\r\n        fontSize: 30,\r\n    },\r\n    h2: {\r\n        fontSize: 24,\r\n    },\r\n    h3: {\r\n        fontSize: 20,\r\n    },\r\n    h4: {\r\n        fontSize: 17,\r\n        fontWeight: \"bold\",\r\n    },\r\n    h5: {\r\n        fontSize: 15,\r\n        fontWeight: \"bold\",\r\n    },\r\n    h6: {\r\n        fontSize: 14,\r\n        fontWeight: \"bold\",\r\n    },\r\n    caption: {\r\n        fontSize: 14,\r\n        fontWeight: \"600\",\r\n    },\r\n    regular: {\r\n        fontSize: 14,\r\n    },\r\n    minor: {\r\n        fontSize: 10,\r\n    },\r\n    strong: {\r\n        fontSize: 14,\r\n        fontWeight: \"900\",\r\n    },\r\n    para: {\r\n        fontSize: 14,\r\n        lineHeight: 24,\r\n    },\r\n    del: {\r\n        fontSize: 14,\r\n        textDecorationLine: \"line-through\",\r\n    },\r\n    em: {\r\n        fontSize: 14,\r\n        fontStyle: \"italic\",\r\n    },\r\n    u: {\r\n        fontSize: 14,\r\n        textDecorationLine: \"underline\",\r\n    },\r\n});\r\n\r\nconst variants = StyleSheet.create({\r\n    regular: {},\r\n    narrow: {\r\n        fontWeight: \"300\",\r\n    },\r\n    bold: {\r\n        fontWeight: \"900\",\r\n    },\r\n    striked: {\r\n        textDecorationLine: \"underline\",\r\n    },\r\n    underlined: {\r\n        textDecorationLine: \"underline\",\r\n    },\r\n    middle: {\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n    },\r\n    shadow: {\r\n        textShadowColor: \"#000000\",\r\n        textShadowRadius: 2,\r\n        textShadowOffset: { width: 0.5, height: 1 },\r\n    },\r\n});\r\n","import { FC, useMemo } from \"react\";\r\nimport { StyleProp, TextStyle } from \"react-native\";\r\n// @ts-expect-error untyped module\r\nimport Markdown from \"react-native-easy-markdown\";\r\n\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { LabelProps } from \"./Label\";\r\n\r\nexport type MarkdownContentProps = {\r\n    defaultType?: LabelProps[\"type\"];\r\n\r\n    /**\r\n     * Margin left.\r\n     */\r\n    ml?: number;\r\n\r\n    /**\r\n     * Margin top.\r\n     */\r\n    mt?: number;\r\n\r\n    /**\r\n     * Margin right.\r\n     */\r\n    mr?: number;\r\n\r\n    /**\r\n     * Margin bottom.\r\n     */\r\n    mb?: number;\r\n};\r\n\r\nexport const MarkdownContent: FC<MarkdownContentProps> = ({ ml, mt, mr, mb, children }) => {\r\n    // Compute outer container margins.\r\n    const styleContainer = useMemo<StyleProp<TextStyle>>(() => {\r\n        const result: StyleProp<TextStyle> = {};\r\n        if (typeof ml === \"number\") result.marginLeft = ml;\r\n        if (typeof mt === \"number\") result.paddingTop = mt;\r\n        if (typeof mr === \"number\") result.marginRight = mr;\r\n        if (typeof mb === \"number\") result.paddingBottom = mb;\r\n        return result;\r\n    }, [ml, mt, mr, mb]);\r\n\r\n    // Compute markdown styles.\r\n    const theme = useTheme();\r\n    const markdownStyles = useMemo(\r\n        () => ({\r\n            block: {\r\n                paddingBottom: 10,\r\n                flexWrap: \"wrap\",\r\n                flexDirection: \"row\",\r\n            },\r\n            blockQuote: {\r\n                borderLeftWidth: 5,\r\n                borderLeftColor: theme.secondary,\r\n                backgroundColor: theme.darken,\r\n                paddingLeft: 10,\r\n            },\r\n            h1: {\r\n                fontWeight: \"300\",\r\n                fontSize: 30,\r\n                color: theme.important,\r\n                paddingTop: 20,\r\n                paddingBottom: 8,\r\n            },\r\n            h2: {\r\n                fontSize: 24,\r\n                color: theme.important,\r\n                paddingTop: 16,\r\n                paddingBottom: 8,\r\n            },\r\n            h3: {\r\n                fontSize: 20,\r\n                color: theme.important,\r\n                paddingTop: 16,\r\n                paddingBottom: 8,\r\n            },\r\n            h4: {\r\n                fontSize: 17,\r\n                fontWeight: \"bold\",\r\n                color: theme.important,\r\n                paddingTop: 16,\r\n                paddingBottom: 8,\r\n            },\r\n            h5: {\r\n                fontSize: 15,\r\n                fontWeight: \"bold\",\r\n                color: theme.important,\r\n                paddingTop: 12,\r\n                paddingBottom: 6,\r\n            },\r\n            h6: {\r\n                fontSize: 15,\r\n                fontWeight: \"bold\",\r\n                color: theme.important,\r\n                paddingTop: 12,\r\n                paddingBottom: 6,\r\n            },\r\n            hr: {\r\n                alignSelf: \"stretch\",\r\n                height: 1,\r\n                backgroundColor: theme.text,\r\n                marginVertical: 8,\r\n            },\r\n            code: {\r\n                backgroundColor: theme.notification,\r\n                color: \"orange\",\r\n            },\r\n            text: {\r\n                alignSelf: \"flex-start\",\r\n                color: theme.text,\r\n                lineHeight: 24,\r\n            },\r\n            strong: {\r\n                fontWeight: \"bold\",\r\n                color: theme.text,\r\n            },\r\n            em: {\r\n                fontStyle: \"italic\",\r\n                color: theme.text,\r\n            },\r\n            del: {\r\n                textDecorationLine: \"line-through\",\r\n                color: theme.text,\r\n            },\r\n            u: {\r\n                textDecorationLine: \"underline\",\r\n                color: theme.text,\r\n            },\r\n            linkWrapper: {\r\n                alignSelf: \"flex-start\",\r\n            },\r\n            link: {\r\n                textDecorationLine: \"underline\",\r\n                alignSelf: \"flex-start\",\r\n                color: theme.important,\r\n            },\r\n            list: {\r\n                paddingBottom: 20,\r\n            },\r\n            listItem: {\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n                marginVertical: 5,\r\n            },\r\n            listItemContent: {\r\n                flexDirection: \"row\",\r\n                flexShrink: 1,\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"flex-start\",\r\n            },\r\n            listItemBullet: {\r\n                width: 4,\r\n                height: 4,\r\n                backgroundColor: theme.important,\r\n                borderRadius: 2,\r\n                marginRight: 10,\r\n            },\r\n            listItemNumber: {\r\n                marginRight: 10,\r\n            },\r\n            imageWrapper: {\r\n                flex: 1,\r\n                flexDirection: \"row\",\r\n                justifyContent: \"flex-start\",\r\n            },\r\n            image: {\r\n                flex: 1,\r\n                minWidth: 200,\r\n                height: 200,\r\n            },\r\n        }),\r\n        [theme]\r\n    );\r\n\r\n    return (\r\n        <Markdown style={styleContainer} markdownStyles={markdownStyles}>\r\n            {children}\r\n        </Markdown>\r\n    );\r\n};\r\n","import { FC, useMemo } from \"react\";\r\nimport { StyleSheet, View, ViewProps } from \"react-native\";\r\n\r\n/**\r\n * Arguments to the column.\r\n */\r\nexport type ColProps = ViewProps & {\r\n    /**\r\n     * The type, one of some predefined primary style values.\r\n     */\r\n    type?: keyof typeof types;\r\n\r\n    /**\r\n     * The variant, one of some predefined secondary style values, overriding type.\r\n     */\r\n    variant?: keyof typeof variants;\r\n};\r\n\r\nexport const Col: FC<ColProps> = ({ style, type, variant, children, ...rest }) => {\r\n    // Resolve styles.\r\n    const resType = useMemo(() => (type ? types[type] : types.regular), [type]);\r\n    const resVariant = useMemo(() => (variant ? variants[variant] : variants.start), [variant]);\r\n    return (\r\n        <View style={[resType, resVariant, style]} {...rest}>\r\n            {children}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst types = StyleSheet.create({\r\n    regular: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"flex-start\",\r\n    },\r\n    center: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n    },\r\n    stretch: {\r\n        flexDirection: \"column\",\r\n        alignItems: \"stretch\",\r\n    },\r\n});\r\n\r\nconst variants = StyleSheet.create({\r\n    start: {\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    end: {\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    spaced: {\r\n        justifyContent: \"space-between\",\r\n    },\r\n});\r\n","import { FC, useMemo } from \"react\";\r\nimport { StyleSheet, View, ViewProps } from \"react-native\";\r\n\r\n/**\r\n * Arguments to the row.\r\n */\r\nexport type RowProps = ViewProps & {\r\n    /**\r\n     * The type, one of some predefined primary style values.\r\n     */\r\n    type?: keyof typeof types;\r\n\r\n    /**\r\n     * The variant, one of some predefined secondary style values, overriding type.\r\n     */\r\n    variant?: keyof typeof variants;\r\n};\r\n\r\nexport const Row: FC<RowProps> = ({ style, type, variant, children, ...rest }) => {\r\n    // Resolve styles.\r\n    const resType = useMemo(() => (type ? types[type] : types.regular), [type]);\r\n    const resVariant = useMemo(() => (variant ? variants[variant] : variants.start), [variant]);\r\n    return (\r\n        <View style={[resType, resVariant, style]} {...rest}>\r\n            {children}\r\n        </View>\r\n    );\r\n};\r\n\r\nconst types = StyleSheet.create({\r\n    regular: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n    },\r\n    center: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n    },\r\n    stretch: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"stretch\",\r\n    },\r\n});\r\n\r\nconst variants = StyleSheet.create({\r\n    wrap: {\r\n        flexWrap: \"wrap\",\r\n    },\r\n    start: {\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    end: {\r\n        justifyContent: \"flex-end\",\r\n    },\r\n    spaced: {\r\n        justifyContent: \"space-between\",\r\n    },\r\n    center: {\r\n        justifyContent: \"center\",\r\n    },\r\n});\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\n\r\nimport { Theme, useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { Col } from \"../Containers/Col\";\r\nimport { Row } from \"../Containers/Row\";\r\nimport { Label, LabelProps } from \"./Label\";\r\n\r\nconst iconSize = 32; // Matches H1 font size.\r\n\r\n/**\r\n * Props to section.\r\n */\r\nexport type SectionProps = {\r\n    /**\r\n     * The style to pass to the root column.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * The icon, if one should be displayed.\r\n     */\r\n    icon?: IconNames;\r\n\r\n    /**\r\n     * The primary text.\r\n     */\r\n    title: string;\r\n\r\n    /**\r\n     * The subtitle, displayed after the text.\r\n     */\r\n    subtitle?: string;\r\n\r\n    titleColor?: keyof Theme;\r\n    subtitleColor?: keyof Theme;\r\n    titleVariant?: LabelProps[\"variant\"];\r\n    subtitleVariant?: LabelProps[\"variant\"];\r\n};\r\n\r\nexport const Section: FC<SectionProps> = React.memo(({ style, icon = \"bookmark\", title, subtitle, titleColor, subtitleColor, titleVariant, subtitleVariant }) => {\r\n    const theme = useTheme();\r\n    const iconColor = useMemo(() => theme[titleColor ?? \"important\"], [theme, titleColor]);\r\n    return (\r\n        <Col style={[styles.container, style]}>\r\n            <Row type=\"center\">\r\n                {!icon ? <View style={styles.placeholder} /> : <Icon color={iconColor} style={styles.icon} name={icon} size={iconSize} />}\r\n                <Label style={styles.containerFill} type=\"h1\" variant={titleVariant} color={titleColor ?? \"important\"} ellipsizeMode=\"tail\">\r\n                    {title}\r\n                </Label>\r\n            </Row>\r\n\r\n            {!subtitle ? null : (\r\n                <Row type=\"center\">\r\n                    <View style={styles.placeholder} />\r\n                    <Label style={styles.containerFill} type=\"h3\" variant={subtitleVariant} color={subtitleColor ?? \"text\"} ellipsizeMode=\"tail\">\r\n                        {subtitle}\r\n                    </Label>\r\n                </Row>\r\n            )}\r\n        </Col>\r\n    );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginTop: 30,\r\n        marginBottom: 15,\r\n    },\r\n    placeholder: {\r\n        width: iconSize,\r\n        height: iconSize,\r\n        marginRight: 8,\r\n    },\r\n    icon: {\r\n        marginRight: 8,\r\n    },\r\n    containerFill: {\r\n        flex: 1,\r\n    },\r\n});\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport * as React from \"react\";\r\nimport { FC, ReactNode, useMemo } from \"react\";\r\nimport { StyleProp, StyleSheet, TouchableOpacity, View, ViewStyle } from \"react-native\";\r\n\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { Label } from \"../Atoms/Label\";\r\n\r\nconst iconSize = 20;\r\nconst pad = 8;\r\nconst border = 2;\r\n\r\n/**\r\n * Arguments to the button.\r\n */\r\nexport type ButtonProps = {\r\n    /**\r\n     * The style button.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * True if outline button instead of filled button.\r\n     */\r\n    outline?: boolean;\r\n\r\n    /**\r\n     * If given, displayed as the button's icon.\r\n     */\r\n    icon?: IconNames;\r\n\r\n    /**\r\n     * If given, displayed as the button's icon, this is displayed on the right side.\r\n     */\r\n    iconRight?: IconNames;\r\n\r\n    /**\r\n     * The text of the button.\r\n     */\r\n    children?: ReactNode;\r\n\r\n    /**\r\n     * If given, invoked on button press.\r\n     */\r\n    onPress?: () => void;\r\n\r\n    onLongPress?: () => void;\r\n\r\n    disabled?: boolean;\r\n};\r\n\r\nexport const Button: FC<ButtonProps> = ({ style, outline, icon, iconRight, children, onPress, onLongPress, disabled }) => {\r\n    // Computed styles.\r\n    const theme = useTheme();\r\n    const base = useMemo(() => (outline ? styles.containerOutline : styles.containerFill), [outline]);\r\n    const fill = useMemo(() => ({ backgroundColor: outline ? theme.background : theme.inverted }), [outline, theme]);\r\n\r\n    return (\r\n        <TouchableOpacity style={[styles.container, base, fill, style]} onPress={onPress} onLongPress={onLongPress} disabled={disabled}>\r\n            {!icon ? <View style={styles.placeholder} /> : <Icon name={icon} size={iconSize} color={outline ? theme.important : theme.invImportant} />}\r\n\r\n            <Label style={styles.text} color={outline ? \"important\" : \"invImportant\"}>\r\n                {children}\r\n            </Label>\r\n\r\n            {!iconRight ? <View style={styles.placeholder} /> : <Icon name={iconRight} size={iconSize} color={outline ? theme.important : theme.invImportant} />}\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderRadius: 16,\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    containerFill: {\r\n        padding: pad,\r\n        backgroundColor: \"black\",\r\n    },\r\n    containerOutline: {\r\n        padding: pad - border,\r\n        borderColor: \"black\",\r\n        borderWidth: border,\r\n    },\r\n    placeholder: {\r\n        width: iconSize,\r\n        height: iconSize,\r\n    },\r\n    text: {\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n    },\r\n    outlineText: {\r\n        textAlign: \"center\",\r\n        textAlignVertical: \"center\",\r\n    },\r\n});\r\n","import { FC } from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\n\r\nexport const padFloater = 20;\r\n\r\n/**\r\n * Props to the Floater.\r\n */\r\nexport type FloaterProps = {\r\n    /**\r\n     * Style of the container view.\r\n     */\r\n    containerStyle?: StyleProp<ViewStyle>;\r\n    /**\r\n     * Style of the content view.\r\n     */\r\n    contentStyle?: StyleProp<ViewStyle>;\r\n};\r\n\r\n/**\r\n * A scrolling content with a child that has a maximum width.\r\n * @constructor\r\n */\r\nexport const Floater: FC<FloaterProps> = ({ containerStyle, contentStyle, children }) => {\r\n    return (\r\n        <View style={[styles.container, containerStyle]}>\r\n            <View style={styles.arranger}>\r\n                <View style={[styles.content, contentStyle]}>{children}</View>\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        paddingHorizontal: padFloater,\r\n    },\r\n    arranger: {\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"stretch\",\r\n    },\r\n    content: {\r\n        flex: 1,\r\n        alignSelf: \"stretch\",\r\n        maxWidth: 600,\r\n    },\r\n});\r\n","import { useIsFocused } from \"@react-navigation/core\";\r\nimport { createContext, FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\n/**\r\n * Type for the context.\r\n */\r\nexport type LoadingContextType = {\r\n    /**\r\n     * Indicates this ID is now loading.\r\n     * @param id\r\n     */\r\n    indicateLoading(id: string): void;\r\n\r\n    /**\r\n     * Indicates this ID is now done.\r\n     * @param id\r\n     */\r\n    indicateDone(id: string): void;\r\n\r\n    /**\r\n     * True if the context is loading.\r\n     */\r\n    isLoading: boolean;\r\n};\r\n\r\n/**\r\n * A global loading tracker.\r\n */\r\nexport const LoadingContext = createContext<LoadingContextType>({\r\n    indicateLoading: () => console.error(\"No loading context configured.\"),\r\n    indicateDone: () => console.error(\"No loading context configured.\"),\r\n    isLoading: false,\r\n});\r\n\r\n/**\r\n * Provides a loading tracker.\r\n * @param children The children to provide for.\r\n * @constructor\r\n */\r\nexport const LoadingContextProvider: FC = ({ children }) => {\r\n    // Array of active IDs.\r\n    const [active, setActive] = useState<string[]>([]);\r\n\r\n    // Add ID if not present.\r\n    const indicateLoading = useCallback((id: string) => {\r\n        setActive((prevState) => (prevState.includes(id) ? prevState : prevState.concat(id)));\r\n    }, []);\r\n\r\n    // Remove ID if present.\r\n    const indicateDone = useCallback((id: string) => {\r\n        setActive((prevState) => prevState.filter((other) => other !== id));\r\n    }, []);\r\n\r\n    // True if not empty.\r\n    const isLoading = Boolean(active.length);\r\n\r\n    // Convert to a context object.\r\n    const context = useMemo(() => ({ indicateLoading, indicateDone, isLoading }), [indicateLoading, indicateDone, isLoading]);\r\n\r\n    return <LoadingContext.Provider value={context}>{children}</LoadingContext.Provider>;\r\n};\r\n\r\nexport const useIsLoading = () => useContext(LoadingContext).isLoading;\r\n\r\nexport const useSignalLoading = (value: boolean, inBackground: boolean = false) => {\r\n    const [id] = useState(() => Math.random().toString());\r\n    const context = useContext(LoadingContext);\r\n    const focused = useIsFocused();\r\n\r\n    useEffect(() => {\r\n        if ((inBackground || focused) && value) {\r\n            context.indicateLoading(id);\r\n            return () => context.indicateDone(id);\r\n        } else {\r\n            context.indicateDone(id);\r\n        }\r\n    }, [id, context, value, inBackground, focused]);\r\n};\r\n","import { FC, useEffect, useMemo } from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport Animated, { Easing, useAnimatedStyle, useSharedValue, withDelay, withRepeat, withTiming } from \"react-native-reanimated\";\r\n\r\nimport { useTheme } from \"../../../context/Theme\";\r\n\r\n/**\r\n * Props for the continuous indicator.\r\n */\r\nexport type ContinuousProps = {\r\n    /**\r\n     * Style passed to root.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * True if the progress indicator should be displayed.\r\n     */\r\n    active?: boolean;\r\n};\r\n\r\nexport const Continuous: FC<ContinuousProps> = ({ style, active = true }) => {\r\n    // Use theme for colors.\r\n    const theme = useTheme();\r\n\r\n    // Shared at value.\r\n    const at = useSharedValue(0);\r\n\r\n    // Set animation in reaction to active.\r\n    useEffect(() => {\r\n        if (active) {\r\n            // Active, set to zero and animate.\r\n            at.value = 0;\r\n            at.value = withRepeat(withDelay(600, withTiming(1, { duration: 900, easing: Easing.in(Easing.cubic) })), -1);\r\n        } else {\r\n            // Inactive set to out of bounds.\r\n            at.value = -1;\r\n        }\r\n    }, [at, active]);\r\n\r\n    // Convert theme into style.\r\n    const colorStyle = useMemo(() => ({ backgroundColor: theme.secondary }), [theme]);\r\n\r\n    // Compute dynamic style animating the bar.\r\n    const dynamicStyle = useAnimatedStyle(\r\n        () => ({\r\n            left: `${(1 - at.value) * 140 - 20}%`,\r\n            width: \"20%\",\r\n        }),\r\n        [at]\r\n    );\r\n\r\n    return (\r\n        <View style={[styles.container, style]}>\r\n            <Animated.View style={[styles.bar, colorStyle, dynamicStyle]} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        overflow: \"hidden\",\r\n        alignSelf: \"stretch\",\r\n        height: 2,\r\n    },\r\n    bar: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        bottom: 0,\r\n    },\r\n});\r\n","import { FC } from \"react\";\r\nimport { StyleProp, ViewStyle } from \"react-native\";\r\n\r\nimport { useIsLoading } from \"../../context/LoadingContext\";\r\nimport { Continuous } from \"./Loading/Continuous\";\r\n\r\n/**\r\n * Props for the activity indicator.\r\n */\r\nexport type ActivityProps = {\r\n    /**\r\n     * Style passed to root.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport const Activity: FC<ActivityProps> = ({ style }) => {\r\n    // Use the context's loading state. See LoadingContext.\r\n    const isLoading = useIsLoading();\r\n\r\n    // Indicate on the context's state.\r\n    return <Continuous style={style} active={isLoading} />;\r\n};\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport { useNavigation } from \"@react-navigation/core\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport { StyleSheet, TouchableOpacity, View, ViewProps } from \"react-native\";\r\n\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { Activity } from \"../Atoms/Activity\";\r\nimport { Label } from \"../Atoms/Label\";\r\nimport { Row } from \"./Row\";\r\n\r\nconst iconSize = 32;\r\n\r\nexport type HeaderProps = ViewProps;\r\n\r\nexport const Header: FC<HeaderProps> = ({ style, children }) => {\r\n    const theme = useTheme();\r\n\r\n    const containerStyle = useMemo(() => ({ backgroundColor: theme.background, borderColor: theme.darken }), [theme]);\r\n\r\n    const navigation = useNavigation();\r\n\r\n    return (\r\n        <Row style={[styles.container, containerStyle, style]} type=\"center\" variant=\"spaced\">\r\n            <Icon name=\"chevron-left\" size={iconSize} color={theme.text} />\r\n\r\n            <Label style={styles.text} type=\"lead\" ellipsizeMode=\"tail\" numberOfLines={1}>\r\n                {children}\r\n            </Label>\r\n\r\n            <View style={styles.placeholder} />\r\n\r\n            <TouchableOpacity style={styles.back} onPress={() => navigation.goBack()} />\r\n\r\n            <Activity style={styles.activity} />\r\n        </Row>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        borderBottomWidth: 1,\r\n        paddingTop: 15,\r\n        paddingHorizontal: 15,\r\n        paddingBottom: 15,\r\n    },\r\n    text: {\r\n        flex: 1,\r\n    },\r\n    placeholder: {\r\n        width: iconSize,\r\n        height: iconSize,\r\n    },\r\n    back: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        bottom: 0,\r\n        width: \"30%\",\r\n    },\r\n    activity: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n    },\r\n});\r\n","import { StyleSheet } from \"react-native\";\r\n\r\nexport const appStyles = StyleSheet.create({\r\n    /**\r\n     * Verified shadow to be used across iOS and Android devices.\r\n     */\r\n    shadow: {\r\n        shadowColor: \"#000\",\r\n        shadowOffset: { width: 0, height: 2 },\r\n        shadowOpacity: 0.25,\r\n        shadowRadius: 3.84,\r\n        elevation: 5,\r\n    },\r\n\r\n    /**\r\n     * Absolute positioning only, use in conjuction with insets.\r\n     */\r\n    abs: {\r\n        position: \"absolute\",\r\n    },\r\n\r\n    /**\r\n     * Adds sufficient trailer space as padding.\r\n     */\r\n    trailer: {\r\n        paddingBottom: 100,\r\n    },\r\n});\r\n","import { nativeApplicationVersion, nativeBuildVersion } from \"expo-application\";\r\nimport { Sound } from \"expo-av/build/Audio/Sound\";\r\nimport { FC, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Image, Linking, ScrollView } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { Label } from \"../components/Atoms/Label\";\r\nimport { MarkdownContent } from \"../components/Atoms/MarkdownContent\";\r\nimport { Section } from \"../components/Atoms/Section\";\r\nimport { Button } from \"../components/Containers/Button\";\r\nimport { Col } from \"../components/Containers/Col\";\r\nimport { Floater } from \"../components/Containers/Floater\";\r\nimport { Header } from \"../components/Containers/Header\";\r\nimport { Row } from \"../components/Containers/Row\";\r\nimport { useAppDispatch, useAppSelector } from \"../store\";\r\nimport { setTheme } from \"../store/settings.slice\";\r\nimport { appStyles } from \"./AppStyles\";\r\n\r\nconst extraThanksMarkdown = `\r\n# Tooling\r\n\r\nWe use React-Native and Expo to make this experience possible.\r\n\r\nFirebase provides us with cloud messaging and analytics.\r\n\r\nAnd Sentry helps us out with exception tracing.\r\n\r\n# People\r\n\r\n## Program Management\r\n\r\n- Zefiro\r\n\r\n## Other Special People\r\n\r\n- Akulatraxas\r\n- Aragon Tigerseye\r\n- Atkelar\r\n- Cairyn\r\n- Carenath Stormwind\r\n- Jul\r\n- Liam\r\n- NordicFuzzCon (Catch'em all)\r\n- Pattarchus\r\n- Snow-wolf\r\n- StreifiGreif\r\n- Xil\r\n- IceTiger\r\n\r\n## English Translations\r\n\r\n- Luchs\r\n- Pazuzu\r\n- Requinard\r\n\r\n## German Translations\r\n\r\n- Luchs\r\n- Pazuzu\r\n- Requinard\r\n\r\n## Dutch Translations\r\n\r\n- Pazuzu\r\n- Requinard\r\n\r\n## Italian Translations\r\n\r\n- Siepnir\r\n\r\n## Polish Translations\r\n\r\n- Lemurr\r\n\r\n## Danish Translations\r\n\r\n- Wovaka\r\n\r\n# Disclaimer\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.`;\r\n\r\nexport const Credit: FC<{ uri: string; name: string; role: string; onEasterEgg?: () => void }> = ({ uri, name, role, onEasterEgg }) => (\r\n    <TouchableOpacity disabled={onEasterEgg === undefined} onLongPress={onEasterEgg} delayLongPress={2000}>\r\n        <Row type={\"center\"} style={{ marginVertical: 5 }}>\r\n            <Image\r\n                source={{ uri, height: 60, width: 60 }}\r\n                style={{\r\n                    borderRadius: 100,\r\n                }}\r\n            />\r\n\r\n            <Col style={{ flex: 1, marginLeft: 10 }}>\r\n                <Label type={\"h2\"}>{name}</Label>\r\n                <Label>{role}</Label>\r\n            </Col>\r\n        </Row>\r\n    </TouchableOpacity>\r\n);\r\n\r\nexport const AboutScreen = () => {\r\n    const { t } = useTranslation(\"About\");\r\n    const safe = useSafeAreaInsets();\r\n    const showHelpButtons = useAppSelector((state) => state.settingsSlice.showDevMenu ?? false);\r\n    const dispatch = useAppDispatch();\r\n\r\n    const requinardEgg = useCallback(async () => {\r\n        const { sound } = await Sound.createAsync(require(\"../../assets/audio/cheese.webm\"));\r\n        await sound.playAsync();\r\n        dispatch(setTheme(\"requinard\"));\r\n    }, [dispatch]);\r\n\r\n    const pazuzuEgg = useCallback(async () => {\r\n        const { sound } = await Sound.createAsync(require(\"../../assets/audio/sheesh.webm\"));\r\n        await sound.playAsync();\r\n    }, []);\r\n    return (\r\n        <ScrollView style={[appStyles.abs, safe]} stickyHeaderIndices={[0]} stickyHeaderHiddenOnScroll>\r\n            <Header>{t(\"header\")}</Header>\r\n            <Floater contentStyle={appStyles.trailer}>\r\n                <Section title={t(\"app_details.title\")} subtitle={`${nativeApplicationVersion} - ${nativeBuildVersion}`} icon={\"cellphone\"} />\r\n\r\n                {!showHelpButtons && (\r\n                    <>\r\n                        <Button style={{ marginVertical: 10 }} onPress={() => Linking.openURL(\"https://t.me/+lAYTadnRKdY2NDBk\")} icon={\"help\"}>\r\n                            {t(\"app_details.get_help\")}\r\n                        </Button>\r\n                        <Button style={{ marginVertical: 10 }} onPress={() => Linking.openURL(\"https://github.com/eurofurence/ef-app_react-native/issues\")} icon={\"bug\"}>\r\n                            {t(\"app_details.report_bug\")}\r\n                        </Button>\r\n                    </>\r\n                )}\r\n\r\n                <Section title={t(\"developed_by\")} icon={\"code-json\"} />\r\n                <Credit uri={\"https://avatars.githubusercontent.com/u/13329381\"} name={\"Luchs\"} role={\"Project management and getting us to move our butts in gear\"} />\r\n                <Credit uri={\"https://avatars.githubusercontent.com/u/5929561\"} name={\"Pazuzu\"} role={\"React Development and UI design\"} onEasterEgg={pazuzuEgg} />\r\n                <Credit uri={\"https://avatars.githubusercontent.com/u/5537850\"} name={\"Requinard\"} role={\"React Development and app mechanics\"} onEasterEgg={requinardEgg} />\r\n                <Credit uri={\"https://avatars.githubusercontent.com/u/12624320\"} name={\"Shez\"} role={\"iOS Development\"} />\r\n                <Credit uri={\"https://avatars.githubusercontent.com/u/3359222\"} name={\"Fenrikur\"} role={\"iOS Development\"} />\r\n                <MarkdownContent>{extraThanksMarkdown}</MarkdownContent>\r\n            </Floater>\r\n        </ScrollView>\r\n    );\r\n};\r\n","import { useNavigation } from \"@react-navigation/core\";\r\nimport { useRoute } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\n\r\nimport { ScreenAreasParamsList } from \"../app/ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../app/ScreenStart\";\r\n\r\ntype AllRoutes = ScreenStartParamsList & ScreenAreasParamsList;\r\n\r\ntype ParamListMap<T> = {\r\n    [RouteName in keyof T]: T;\r\n};\r\n\r\n/**\r\n * Combine all the routes into a single map from Route Name to the ParamsList it maps to\r\n */\r\ntype RouteMap = ParamListMap<ScreenAreasParamsList> & ParamListMap<ScreenStartParamsList>;\r\n\r\n// @ts-expect-error something is off about screens but it does seem to work\r\nexport const useAppNavigation = <ScreenName extends keyof RouteMap, Screen = RouteMap[ScreenName]>(screen: ScreenName) => useNavigation<StackNavigationProp<Screen, ScreenName>>();\r\n\r\ntype TypedRoute<RouteName, Params> = {\r\n    params: Params;\r\n    key: string;\r\n    name: RouteName;\r\n    path?: string;\r\n};\r\n\r\nexport const useAppRoute = <RouteName extends keyof AllRoutes>(routeName: RouteName): TypedRoute<RouteName, AllRoutes[RouteName]> => useRoute();\r\n","import moment, { MomentInput } from \"moment\";\r\n\r\nimport { apiBase } from \"../configuration\";\r\nimport { IconNames } from \"../types/IconNames\";\r\nimport { eventDaysSelectors, eventRoomsSelectors, eventTracksSelectors, imagesSelectors } from \"./eurofurence.selectors\";\r\nimport {\r\n    AnnouncementDetails,\r\n    AnnouncementRecord,\r\n    AttendanceDay,\r\n    DealerDetails,\r\n    DealerRecord,\r\n    EventDayDetails,\r\n    EventDayRecord,\r\n    EventDetails,\r\n    EventRecord,\r\n    EventRoomDetails,\r\n    EventRoomRecord,\r\n    EventTrackDetails,\r\n    EventTrackRecord,\r\n    ImageDetails,\r\n    ImageRecord,\r\n    KnowledgeEntryDetails,\r\n    KnowledgeEntryRecord,\r\n    KnowledgeGroupDetails,\r\n    KnowledgeGroupRecord,\r\n    MapDetails,\r\n    MapEntryDetails,\r\n    MapEntryRecord,\r\n    MapRecord,\r\n} from \"./eurofurence.types\";\r\nimport { RootState } from \"./index\";\r\n\r\nconst base64encode = (input: string) => {\r\n    const keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\r\n    const output = [];\r\n    let chr1 = NaN;\r\n    let chr2 = NaN;\r\n    let chr3 = NaN;\r\n    let enc1 = NaN;\r\n    let enc2 = NaN;\r\n    let enc3 = NaN;\r\n    let enc4 = NaN;\r\n    let i = 0;\r\n\r\n    do {\r\n        chr1 = input.charCodeAt(i++);\r\n        chr2 = input.charCodeAt(i++);\r\n        chr3 = input.charCodeAt(i++);\r\n\r\n        enc1 = chr1 >> 2;\r\n        enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n        enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n        enc4 = chr3 & 63;\r\n\r\n        if (isNaN(chr2)) {\r\n            enc3 = 64;\r\n            enc4 = 64;\r\n        } else if (isNaN(chr3)) {\r\n            enc4 = 64;\r\n        }\r\n\r\n        output.push(keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4));\r\n        chr1 = NaN;\r\n        chr2 = NaN;\r\n        chr3 = NaN;\r\n        enc1 = NaN;\r\n        enc2 = NaN;\r\n        enc3 = NaN;\r\n        enc4 = NaN;\r\n    } while (i < input.length);\r\n\r\n    return output.join(\"\");\r\n};\r\n\r\n/**\r\n * Do not use directly.\r\n * @param source\r\n */\r\nconst internalCreateImageUrl = (source: ImageRecord): string => `${apiBase}/Images/${source.Id}/Content/with-hash:${base64encode(source.ContentHashSha1)}`;\r\n\r\nconst internalCategorizeTime = (input: MomentInput) => {\r\n    const hours = moment(input).hours();\r\n    if (6 <= hours && hours < 13) return \"morning\";\r\n    if (13 <= hours && hours < 17) return \"afternoon\";\r\n    if (17 <= hours && hours < 21) return \"evening\";\r\n    return \"night\";\r\n};\r\n\r\nconst internalTagsToIcon = (tags?: string[]): IconNames | undefined => {\r\n    if (!tags) return;\r\n    if (tags.includes(\"supersponsors_only\")) return \"star-circle\";\r\n    if (tags.includes(\"sponsors_only\")) return \"star\";\r\n    if (tags.includes(\"kage\")) return \"bug\";\r\n    if (tags.includes(\"art_show\")) return \"image-frame\";\r\n    if (tags.includes(\"dealers_den\")) return \"shopping\";\r\n    if (tags.includes(\"main_stage\")) return \"bank\";\r\n    if (tags.includes(\"photoshoot\")) return \"camera\";\r\n};\r\n\r\nconst internalTagsToBadges = (tags?: string[]): IconNames[] | undefined => {\r\n    if (!tags) return [];\r\n\r\n    const badges: IconNames[] = [];\r\n    if (tags.includes(\"mask_required\")) badges.push(\"face-mask\");\r\n    return badges;\r\n};\r\n\r\nconst internalSuperSponsorOnly = (tags?: string[]) => Boolean(tags?.includes(\"supersponsors_only\"));\r\n\r\nconst internalSponsorOnly = (tags?: string[]) => Boolean(tags?.includes(\"sponsors_only\"));\r\n\r\nconst internalMaskRequired = (tags?: string[]) => Boolean(tags?.includes(\"mask_required\"));\r\n\r\nconst internalAttendanceDayNames = (dealer: DealerRecord) => {\r\n    const result: AttendanceDay[] = [];\r\n    if (dealer.AttendsOnThursday) result.push(\"thu\");\r\n    if (dealer.AttendsOnFriday) result.push(\"fri\");\r\n    if (dealer.AttendsOnSaturday) result.push(\"sat\");\r\n    return result;\r\n};\r\n\r\nconst internalAttendanceDays = (state: RootState, dealer: DealerRecord) => {\r\n    const days = eventDaysSelectors.selectAll(state);\r\n    const result: EventDayDetails[] = [];\r\n    for (const day of days) {\r\n        // Sun:0, Mon:1 , Tue:2, Wed:3, Thu:4, Fri:5, Sat:6.\r\n        if (dealer.AttendsOnThursday && day && moment(day.Date).day() === 4) result.push(day);\r\n        if (dealer.AttendsOnFriday && day && moment(day.Date).day() === 5) result.push(day);\r\n        if (dealer.AttendsOnSaturday && day && moment(day.Date).day() === 6) result.push(day);\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const applyAnnouncementDetails = (state: RootState, source: AnnouncementRecord): AnnouncementDetails => source;\r\n\r\nexport const applyEventDetails = (state: RootState, source: EventRecord): EventDetails => ({\r\n    ...source,\r\n    PartOfDay: internalCategorizeTime(source.StartDateTimeUtc),\r\n    Poster: !source.PosterImageId ? undefined : imagesSelectors.selectById(state, source.PosterImageId),\r\n    Banner: !source.BannerImageId ? undefined : imagesSelectors.selectById(state, source.BannerImageId),\r\n    Badges: internalTagsToBadges(source.Tags),\r\n    Glyph: internalTagsToIcon(source.Tags),\r\n    SuperSponsorOnly: internalSuperSponsorOnly(source.Tags),\r\n    SponsorOnly: internalSponsorOnly(source.Tags),\r\n    MaskRequired: internalMaskRequired(source.Tags),\r\n    ConferenceRoom: !source.ConferenceRoomId ? undefined : eventRoomsSelectors.selectById(state, source.ConferenceRoomId),\r\n    ConferenceDay: !source.ConferenceDayId ? undefined : eventDaysSelectors.selectById(state, source.ConferenceDayId),\r\n    ConferenceTrack: !source.ConferenceTrackId ? undefined : eventTracksSelectors.selectById(state, source.ConferenceTrackId),\r\n});\r\n\r\nexport const applyDealerDetails = (state: RootState, source: DealerRecord): DealerDetails => ({\r\n    ...source,\r\n    AttendanceDayNames: internalAttendanceDayNames(source),\r\n    AttendanceDays: internalAttendanceDays(state, source),\r\n    Artist: !source.ArtistImageId ? undefined : imagesSelectors.selectById(state, source.ArtistImageId),\r\n    ArtistThumbnail: !source.ArtistThumbnailImageId ? undefined : imagesSelectors.selectById(state, source.ArtistThumbnailImageId),\r\n    ArtPreview: !source.ArtPreviewImageId ? undefined : imagesSelectors.selectById(state, source.ArtPreviewImageId),\r\n    FullName: source.DisplayName || source.AttendeeNickname,\r\n});\r\n\r\nexport const applyEventDayDetails = (state: RootState, source: EventDayRecord): EventDayDetails => source;\r\n\r\nexport const applyEventTrackDetails = (state: RootState, source: EventTrackRecord): EventTrackDetails => source;\r\n\r\nexport const applyEventRoomDetails = (state: RootState, source: EventRoomRecord): EventRoomDetails => source;\r\n\r\nexport const applyMapDetails = (state: RootState, source: MapRecord): MapDetails => ({\r\n    ...source,\r\n    Image: imagesSelectors.selectById(state, source.ImageId),\r\n    Entries: source.Entries.map((entry) => applyMapEntryDetails(state, entry)),\r\n});\r\n\r\nexport const applyMapEntryDetails = (state: RootState, source: MapEntryRecord): MapEntryDetails => source;\r\n\r\nexport const applyKnowledgeGroupDetails = (state: RootState, source: KnowledgeGroupRecord): KnowledgeGroupDetails => source;\r\n\r\nexport const applyKnowledgeEntryDetails = (state: RootState, source: KnowledgeEntryRecord): KnowledgeEntryDetails => source;\r\n\r\nexport const applyImageDetails = (state: RootState, source: ImageRecord): ImageDetails => ({\r\n    ...source,\r\n    FullUrl: internalCreateImageUrl(source),\r\n});\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\nimport { EntityId, EntitySelectors } from \"@reduxjs/toolkit/src/entities/models\";\r\nimport { TFunction } from \"i18next\";\r\nimport _, { chain, Dictionary as LodashDictionary, map, mapValues } from \"lodash\";\r\nimport moment, { Moment } from \"moment\";\r\nimport { SectionListData } from \"react-native\";\r\n\r\nimport { conName } from \"../configuration\";\r\nimport {\r\n    announcementsAdapter,\r\n    dealersAdapter,\r\n    eventDaysAdapter,\r\n    eventRoomsAdapter,\r\n    eventsAdapter,\r\n    eventTracksAdapter,\r\n    imagesAdapter,\r\n    knowledgeEntriesAdapter,\r\n    knowledgeGroupsAdapter,\r\n    mapsAdapter,\r\n} from \"./eurofurence.cache\";\r\nimport {\r\n    applyAnnouncementDetails,\r\n    applyDealerDetails,\r\n    applyEventDayDetails,\r\n    applyEventDetails,\r\n    applyEventRoomDetails,\r\n    applyEventTrackDetails,\r\n    applyImageDetails,\r\n    applyKnowledgeEntryDetails,\r\n    applyKnowledgeGroupDetails,\r\n    applyMapDetails,\r\n} from \"./eurofurence.details\";\r\nimport {\r\n    AnnouncementDetails,\r\n    AttendanceDay,\r\n    EventDayRecord,\r\n    EventDetails,\r\n    ImageDetails,\r\n    KnowledgeEntryRecord,\r\n    KnowledgeGroupRecord,\r\n    LinkFragment,\r\n    MapDetails,\r\n    MapEntryRecord,\r\n    RecordId,\r\n} from \"./eurofurence.types\";\r\nimport { RootState } from \"./index\";\r\n\r\ntype RecordSelectors<T> = EntitySelectors<T, RootState> & {\r\n    selectIds: (state: RootState) => RecordId[];\r\n};\r\n\r\n/**\r\n * Creates a new set of selectors from the passed entity selectors and the given apply function.\r\n * @param from The source selectors.\r\n * @param transform The transform function.\r\n */\r\nconst transformEntitySelector = <T, TResult>(from: EntitySelectors<T, RootState>, transform: (state: RootState, source: T) => TResult): RecordSelectors<TResult> => {\r\n    // Returns a bound transformation function.\r\n    const selectBound = (state: RootState) => (item: T) => transform(state, item);\r\n\r\n    // Redefined selectors.\r\n    const selectTotal = from.selectTotal;\r\n    const selectIds = createSelector([from.selectIds], (ids) => ids.filter((id: EntityId): id is RecordId => typeof id === \"string\"));\r\n    const selectEntities = createSelector([from.selectEntities, selectBound], (entities, bound) => mapValues(entities as LodashDictionary<T>, bound));\r\n    const selectAll = createSelector([from.selectAll, selectBound], (all, bound) => map(all, bound));\r\n    const selectById = createSelector([from.selectById, selectBound], (item, bound) => (item === undefined ? undefined : bound(item)));\r\n\r\n    // Returns combined object of them all.\r\n    return {\r\n        selectTotal,\r\n        selectIds,\r\n        selectEntities,\r\n        selectAll,\r\n        selectById,\r\n    };\r\n};\r\n\r\nexport const eventRoomsSelectors = transformEntitySelector(\r\n    eventRoomsAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.eventRooms),\r\n    applyEventRoomDetails\r\n);\r\nexport const eventTracksSelectors = transformEntitySelector(\r\n    eventTracksAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.eventTracks),\r\n    applyEventTrackDetails\r\n);\r\nexport const knowledgeGroupsSelectors = transformEntitySelector(\r\n    knowledgeGroupsAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.knowledgeGroups),\r\n    applyKnowledgeGroupDetails\r\n);\r\nexport const knowledgeEntriesSelectors = transformEntitySelector(\r\n    knowledgeEntriesAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.knowledgeEntries),\r\n    applyKnowledgeEntryDetails\r\n);\r\nexport const imagesSelectors = transformEntitySelector(\r\n    imagesAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.images),\r\n    applyImageDetails\r\n);\r\nexport const eventDaysSelectors = transformEntitySelector(\r\n    eventDaysAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.eventDays),\r\n    applyEventDayDetails\r\n);\r\nexport const eventsSelector = transformEntitySelector(\r\n    eventsAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.events),\r\n    applyEventDetails\r\n);\r\nexport const announcementsSelectors = transformEntitySelector(\r\n    announcementsAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.announcements),\r\n    applyAnnouncementDetails\r\n);\r\nexport const mapsSelectors = transformEntitySelector(\r\n    mapsAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.maps),\r\n    applyMapDetails\r\n);\r\nexport const dealersSelectors = transformEntitySelector(\r\n    dealersAdapter.getSelectors<RootState>((state) => state.eurofurenceCache.dealers),\r\n    applyDealerDetails\r\n);\r\n\r\nexport const selectCountdownTitle = createSelector([eventDaysSelectors.selectAll, (days, now: Moment) => now, (days, now: Moment, t: TFunction) => t], (days, now, t): string => {\r\n    const firstDay: EventDayRecord | undefined = _.chain(days)\r\n        .orderBy((it) => it.Date, \"asc\")\r\n        .first()\r\n        .value();\r\n    const lastDay: EventDayRecord | undefined = _.chain(days)\r\n        .orderBy((it) => it.Date, \"desc\")\r\n        .last()\r\n        .value();\r\n    const currentDay: EventDayRecord | undefined = days.find((it) => now.isSame(it.Date, \"day\"));\r\n\r\n    if (currentDay) {\r\n        return currentDay.Name;\r\n    } else if (firstDay && now.isBefore(firstDay.Date, \"day\")) {\r\n        const diff = moment.duration(now.diff(firstDay.Date)).humanize();\r\n        return t(\"before_event\", { conName, diff });\r\n    } else if (lastDay && now.isAfter(lastDay.Date, \"day\")) {\r\n        return t(\"after_event\");\r\n    } else {\r\n        return \"\";\r\n    }\r\n});\r\n\r\nexport const selectFavoriteEvents = createSelector([eventsSelector.selectAll, (state: RootState) => state.background.notifications], (events, notifications): EventDetails[] =>\r\n    _.chain(notifications)\r\n        .filter((it) => it.type === \"EventReminder\")\r\n        .map((it): EventDetails | undefined => events.find((event) => event.Id === it.recordId))\r\n        .filter((it): it is EventDetails => it !== undefined)\r\n        .orderBy((it) => it.StartDateTimeUtc, \"asc\")\r\n        .value()\r\n);\r\n\r\nexport const selectUpcomingFavoriteEvents = createSelector([selectFavoriteEvents, (state, now: Moment) => now], (events, now) =>\r\n    events.filter((it) => now.isSame(it.StartDateTimeUtc, \"day\")).filter((it) => now.isBefore(it.EndDateTimeUtc))\r\n);\r\n\r\nexport const filterCurrentEvents = <T extends Pick<EventDetails, \"StartDateTimeUtc\" | \"EndDateTimeUtc\">>(events: T[], now: Moment) =>\r\n    events.filter((it) => {\r\n        return now.isBetween(it.StartDateTimeUtc, it.EndDateTimeUtc);\r\n    });\r\nexport const selectCurrentEvents = createSelector([eventsSelector.selectAll, (events, now: Moment) => now], (events, now) => filterCurrentEvents(events, now));\r\n\r\nexport const selectEventsByRoom = createSelector(\r\n    [eventsSelector.selectAll, eventDaysSelectors.selectEntities, eventTracksSelectors.selectEntities, eventRoomsSelectors.selectEntities, (state, itemId: RecordId) => itemId],\r\n    (events, days, tracks, rooms, itemId) => events.filter((it) => it?.ConferenceRoomId === itemId)\r\n);\r\nexport const selectEventsByTrack = createSelector(\r\n    [eventsSelector.selectAll, eventDaysSelectors.selectEntities, eventTracksSelectors.selectEntities, eventRoomsSelectors.selectEntities, (state, itemId: RecordId) => itemId],\r\n    (events, days, tracks, rooms, itemId) => events.filter((it) => it?.ConferenceTrackId === itemId)\r\n);\r\nexport const selectEventsByDay = createSelector(\r\n    [eventsSelector.selectAll, eventDaysSelectors.selectEntities, eventTracksSelectors.selectEntities, eventRoomsSelectors.selectEntities, (state, itemId: RecordId) => itemId],\r\n    (events, days, tracks, rooms, itemId) => events.filter((it) => it?.ConferenceDayId === itemId)\r\n);\r\n\r\nexport const filterUpcomingEvents = <T extends Pick<EventDetails, \"StartDateTimeUtc\">>(events: T[], now: Moment) =>\r\n    events.filter((it) => {\r\n        const startMoment = moment(it.StartDateTimeUtc, true).subtract(30, \"minutes\");\r\n        const endMoment = moment(it.StartDateTimeUtc, true);\r\n        return now.isBetween(startMoment, endMoment);\r\n    });\r\nexport const selectUpcomingEvents = createSelector([eventsSelector.selectAll, (state, now: Moment) => now], (events, now) => filterUpcomingEvents(events, now));\r\n\r\nexport const filterActiveAnnouncements = <T extends Pick<AnnouncementDetails, \"ValidUntilDateTimeUtc\" | \"ValidFromDateTimeUtc\">>(announcements: T[], now: Moment) =>\r\n    announcements.filter((it) => now.isBetween(it.ValidFromDateTimeUtc, it.ValidUntilDateTimeUtc, \"minute\"));\r\nexport const selectActiveAnnouncements = createSelector([announcementsSelectors.selectAll, (state, now: Moment) => now], (announcements, now) =>\r\n    filterActiveAnnouncements(announcements, now)\r\n);\r\n\r\nexport const selectDealersByDayName = createSelector([dealersSelectors.selectAll, eventDaysSelectors.selectEntities, (state, day: AttendanceDay) => day], (dealers, days, day) =>\r\n    dealers.filter((it) => {\r\n        if (day === \"thu\") return it.AttendsOnThursday;\r\n        if (day === \"fri\") return it.AttendsOnFriday;\r\n        if (day === \"sat\") return it.AttendsOnSaturday;\r\n        return false;\r\n    })\r\n);\r\n\r\nexport const filterBrowseableMaps = <T extends Pick<MapDetails, \"IsBrowseable\">>(maps: T[]) => maps.filter((it) => it.IsBrowseable);\r\nexport const selectBrowseableMaps = createSelector(mapsSelectors.selectAll, (state) => filterBrowseableMaps(state));\r\n\r\nexport const selectValidLinksByTarget = createSelector(\r\n    [mapsSelectors.selectAll, (state, target: RecordId) => target],\r\n    (maps, target): { map: MapDetails; entry: MapEntryRecord; link: LinkFragment }[] =>\r\n        chain(maps)\r\n            .flatMap((map) => map.Entries.map((entry) => ({ map, entry })))\r\n            .flatMap(({ map, entry }) => entry.Links.map((link) => ({ map, entry, link })))\r\n            .filter(({ link }) => target === link.Target)\r\n            .value()\r\n);\r\n\r\n/**\r\n * Selects all knowledge items in a sorted manner that is ready for a section list.\r\n */\r\nexport const selectKnowledgeItems = createSelector(\r\n    [knowledgeGroupsSelectors.selectAll, knowledgeEntriesSelectors.selectAll],\r\n    (groups, entries): (KnowledgeGroupRecord & { entries: KnowledgeEntryRecord[] })[] => {\r\n        return _.chain(groups)\r\n            .orderBy((it) => it.Order)\r\n            .map((group) => ({\r\n                ...group,\r\n                entries: _.chain(entries)\r\n                    .filter((entry) => entry.KnowledgeGroupId === group.Id)\r\n                    .orderBy((it) => it.Order)\r\n                    .value(),\r\n            }))\r\n            .value();\r\n    }\r\n);\r\n\r\nexport const selectKnowledgeItemsSections = createSelector(selectKnowledgeItems, (items): SectionListData<KnowledgeEntryRecord, KnowledgeGroupRecord>[] =>\r\n    items.map((it) => ({\r\n        ...it,\r\n        data: it.entries,\r\n    }))\r\n);\r\n\r\nexport const selectIsSynchronized = createSelector(\r\n    (state: RootState) => state.eurofurenceCache.state,\r\n    (state) => state === \"refreshing\"\r\n);\r\n\r\nexport const selectImagesById = createSelector([imagesSelectors.selectEntities, (state, imageIds: RecordId[]) => imageIds], (images, imageIds): ImageDetails[] =>\r\n    imageIds.map((it) => images[it]).filter((it): it is ImageDetails => it !== undefined)\r\n);\r\n","import * as React from \"react\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { Image, ImageStyle, StyleProp, StyleSheet } from \"react-native\";\r\n\r\nimport { ImageDetails } from \"../../store/eurofurence.types\";\r\n\r\nexport type BannerProps = {\r\n    /**\r\n     * The style button.\r\n     */\r\n    style?: StyleProp<ImageStyle>;\r\n\r\n    /**\r\n     * The source image object.\r\n     */\r\n    image?: ImageDetails;\r\n};\r\n\r\nexport const Banner: FC<BannerProps> = ({ style, image }) => {\r\n    // Do not render if nothing given.\r\n    if (!image) return null;\r\n\r\n    const aspect = useMemo<ImageStyle>(() => (!image ? {} : { aspectRatio: image.Width / image.Height }), [image]);\r\n\r\n    return <Image style={[styles.image, aspect, style]} resizeMode={undefined} source={{ uri: image.FullUrl }} />;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    image: {\r\n        width: \"100%\",\r\n        height: undefined,\r\n    },\r\n});\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport { ColorValue, StyleSheet, TextProps, View, ViewProps, ViewStyle } from \"react-native\";\r\n\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { Label, LabelProps } from \"../Atoms/Label\";\r\nimport { Row } from \"./Row\";\r\n\r\nconst iconSize = 32; // Matches H1 font size.\r\n\r\nexport type BadgeInvPadProps = ViewProps & {\r\n    padding: number;\r\n    badgeColor?: ColorValue;\r\n    textColor: ColorValue;\r\n    textType?: LabelProps[\"type\"];\r\n    textVariant?: LabelProps[\"variant\"];\r\n    icon?: IconNames;\r\n    children: TextProps[\"children\"];\r\n};\r\n\r\nexport const BadgeInvPad: FC<BadgeInvPadProps> = ({ padding, badgeColor, textColor, textType = \"h3\", textVariant = \"middle\", icon, children }) => {\r\n    const styleContainer = useMemo<ViewStyle>(() => ({ marginHorizontal: -padding, backgroundColor: badgeColor ?? \"transparent\" }), [padding, badgeColor]);\r\n    const styleContent = useMemo<ViewStyle>(() => ({ paddingVertical: 10, paddingHorizontal: padding }), [padding]);\r\n\r\n    return (\r\n        <View style={styleContainer}>\r\n            <Row style={[styles.content, styleContent]}>\r\n                {!icon ? null : <Icon name={icon} size={iconSize} color={textColor} />}\r\n                <Label style={styles.text} color={textColor} ml={10} type={textType} variant={textVariant}>\r\n                    {children}\r\n                </Label>\r\n            </Row>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    content: {\r\n        paddingVertical: 10,\r\n    },\r\n    text: {\r\n        flex: 1,\r\n    },\r\n});\r\n","import * as React from \"react\";\r\nimport { FC, useMemo, useState } from \"react\";\r\nimport { Image, ImageStyle, StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\n\r\nimport { ImageDetails } from \"../../store/eurofurence.types\";\r\n\r\nconst initialSize = { width: 400, height: 300 };\r\n\r\nexport type ImageFillTarget = {\r\n    x: number;\r\n    y: number;\r\n    size: number;\r\n};\r\n\r\nexport type ImageFillProps = {\r\n    /**\r\n     * The style button.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * The source image object.\r\n     */\r\n    image?: ImageDetails;\r\n\r\n    /**\r\n     * The targeted point and the dimension to make visible.\r\n     */\r\n    target?: ImageFillTarget;\r\n};\r\n\r\nexport const ImageFill: FC<ImageFillProps> = ({ style, image, target }) => {\r\n    const [size, setSize] = useState<{ width: number; height: number }>(initialSize);\r\n\r\n    const arrangerStyle = useMemo<ViewStyle>(() => {\r\n        if (!target) return StyleSheet.absoluteFillObject;\r\n\r\n        const scale = Math.max(size.width, size.height) / target.size;\r\n\r\n        return {\r\n            position: \"absolute\",\r\n            left: 0,\r\n            top: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            transform: [{ scale }],\r\n        };\r\n    }, [target]);\r\n\r\n    const imageStyle = useMemo<ImageStyle>(() => {\r\n        if (!image) return {};\r\n\r\n        // Unscaled if no section given.\r\n        if (!target) {\r\n            return {\r\n                position: \"absolute\",\r\n                left: 0,\r\n                top: 0,\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n                resizeMode: \"cover\",\r\n            };\r\n        }\r\n\r\n        // Section, scale and translate around center.\r\n        return {\r\n            position: \"absolute\",\r\n            left: 0,\r\n            top: 0,\r\n            width: image.Width,\r\n            height: image.Height,\r\n            transform: [{ translateX: size.width / 2 - target.x }, { translateY: size.height / 2 - target.y }],\r\n        };\r\n    }, [size, image, target]);\r\n\r\n    // Do not render if nothing given.\r\n    if (!image) return null;\r\n\r\n    return (\r\n        <View style={[StyleSheet.absoluteFill, style]} onLayout={(e) => setSize(e.nativeEvent.layout)}>\r\n            <View style={arrangerStyle}>\r\n                <Image style={imageStyle} resizeMode={undefined} source={{ uri: image.FullUrl }} />\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport * as React from \"react\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { ColorValue, StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\n\r\nimport { Theme, useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\n\r\nexport type MarkerProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n    markerColor?: keyof Theme | ColorValue;\r\n    markerType?: IconNames;\r\n    markerSize?: number;\r\n};\r\n\r\nexport const Marker: FC<MarkerProps> = ({ style, markerColor = \"marker\", markerType = \"map-marker\", markerSize = 40 }) => {\r\n    const theme = useTheme();\r\n    const color = useMemo(() => (typeof markerColor === \"string\" && markerColor in theme ? theme[markerColor] : markerColor), [theme, markerColor]);\r\n\r\n    return (\r\n        <View style={[styles.container, style]}>\r\n            <View style={styles.content}>\r\n                <Icon style={styles.shadow} name={markerType} color={theme.darken} size={markerSize} />\r\n                <Icon style={styles.marker} name={markerType} color={color} size={markerSize} />\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        position: \"absolute\",\r\n        width: 0,\r\n        height: 0,\r\n        alignItems: \"center\",\r\n    },\r\n    content: {\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n    },\r\n    marker: {},\r\n    shadow: {\r\n        position: \"absolute\",\r\n        transform: [{ translateX: 2 }, { translateY: 2 }],\r\n    },\r\n});\r\n","import * as React from \"react\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { ColorValue, StyleProp, StyleSheet, TouchableOpacity, ViewStyle } from \"react-native\";\r\n\r\nimport { Theme, useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { ImageFill, ImageFillProps } from \"../Atoms/ImageFill\";\r\nimport { Marker } from \"../Atoms/Marker\";\r\n\r\n/**\r\n * Arguments to the button.\r\n */\r\nexport type ImageButtonProps = {\r\n    /**\r\n     * The style button.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * The source image object.\r\n     */\r\n    image: ImageFillProps[\"image\"];\r\n\r\n    /**\r\n     * The targeted point and the dimension to make visible.\r\n     */\r\n    target: ImageFillProps[\"target\"];\r\n\r\n    /**\r\n     * True if no indicator should be displayed.\r\n     */\r\n    noMarker?: boolean;\r\n    markerColor?: keyof Theme | ColorValue;\r\n    markerType?: IconNames;\r\n    markerSize?: number;\r\n\r\n    /**\r\n     * If given, invoked on button press.\r\n     */\r\n    onPress?: () => void;\r\n\r\n    /**\r\n     * If given, invoked on long press.\r\n     */\r\n    onLongPress?: () => void;\r\n};\r\n\r\nexport const ImageExButton: FC<ImageButtonProps> = ({ style, image, target, noMarker = false, markerColor, markerType, markerSize, onPress, onLongPress }) => {\r\n    const theme = useTheme();\r\n\r\n    const styleBackground = useMemo<ViewStyle>(() => ({ backgroundColor: theme.inverted }), [theme]);\r\n\r\n    return (\r\n        <TouchableOpacity style={[styles.container, styleBackground, style]} onPress={onPress} onLongPress={onLongPress}>\r\n            <ImageFill image={image} target={target} />\r\n            {noMarker ? null : <Marker style={styles.marker} markerColor={markerColor} markerType={markerType} markerSize={markerSize} />}\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        minHeight: 160,\r\n        borderRadius: 16,\r\n        overflow: \"hidden\",\r\n        flexDirection: \"row\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    marker: {\r\n        left: \"50%\",\r\n        top: \"50%\",\r\n    },\r\n});\r\n","import moment, { Moment } from \"moment\";\r\nimport { useCallback, useMemo } from \"react\";\r\n\r\nimport { useAppSelector } from \"../store\";\r\n\r\n/**\r\n * Get the current date, which includes time travelling.\r\n */\r\nexport const useNow = (): [Moment, () => Moment] => {\r\n    const amount = useAppSelector((state) => (state.timetravel.enabled ? state.timetravel.amount : 0));\r\n\r\n    const getNow = useCallback(() => moment().add(amount, \"millisecond\"), [amount]);\r\n    const now = useMemo(() => getNow(), [getNow]);\r\n\r\n    return [now, getNow];\r\n};\r\n","import React, { FC, memo, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Image, ImageSourcePropType, StyleSheet, TouchableOpacity, View, ViewStyle } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { appStyles } from \"../AppStyles\";\r\n\r\nexport type DealerCardContentProps = {\r\n    avatar?: ImageSourcePropType;\r\n    name: string;\r\n    present: boolean;\r\n    merchandise?: string;\r\n    offDays?: string;\r\n    onPress?: () => void;\r\n    onLongPress?: () => void;\r\n};\r\n\r\nexport const DealerCardContent: FC<DealerCardContentProps> = memo(({ avatar, name, present, merchandise, offDays, onPress, onLongPress }) => {\r\n    const { t } = useTranslation(\"Dealers\");\r\n    const theme = useTheme();\r\n    const backgroundStyle = useMemo<ViewStyle>(() => ({ backgroundColor: theme.background }), [theme]);\r\n    const stylePre = useMemo<ViewStyle>(() => ({ backgroundColor: present ? theme.primary : theme.darken }), [present, theme]);\r\n\r\n    return (\r\n        <TouchableOpacity style={[styles.container, appStyles.shadow, backgroundStyle]} onPress={onPress} onLongPress={onLongPress}>\r\n            {!avatar ? null : (\r\n                <View style={[styles.pre, stylePre]}>\r\n                    <Image style={styles.avatarCircle} source={avatar} resizeMode=\"contain\" />\r\n                </View>\r\n            )}\r\n\r\n            <View style={styles.main}>\r\n                <Label type=\"h3\">{name}</Label>\r\n\r\n                {!merchandise ? null : (\r\n                    <Label type=\"h4\" variant=\"narrow\" ellipsizeMode=\"tail\" numberOfLines={2}>\r\n                        {merchandise}\r\n                    </Label>\r\n                )}\r\n\r\n                {!offDays ? null : (\r\n                    <Label style={styles.tag} type=\"regular\" ellipsizeMode=\"head\" numberOfLines={1}>\r\n                        {t(\"not_attending_on\", { offDays })}\r\n                    </Label>\r\n                )}\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        minHeight: 80,\r\n        marginVertical: 15,\r\n        borderRadius: 16,\r\n        overflow: \"hidden\",\r\n        flexDirection: \"row\",\r\n    },\r\n    background: {\r\n        position: \"absolute\",\r\n        width: undefined,\r\n        height: undefined,\r\n    },\r\n    pre: {\r\n        overflow: \"hidden\",\r\n        width: 80,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    avatarCircle: {\r\n        position: \"absolute\",\r\n        width: 70,\r\n        height: 70,\r\n        borderRadius: 35,\r\n    },\r\n    image: {\r\n        position: \"absolute\",\r\n        width: undefined,\r\n        height: undefined,\r\n        left: -10,\r\n        top: -10,\r\n        right: -10,\r\n        bottom: -10,\r\n    },\r\n    imageOverlay: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        padding: 16,\r\n    },\r\n    tag: {\r\n        textAlign: \"right\",\r\n    },\r\n});\r\n","import moment from \"moment\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { DealerDetails } from \"../../store/eurofurence.types\";\r\nimport { DealerCardContent } from \"./DealerCardContent\";\r\n\r\nexport type DealerCardProps = {\r\n    dealer: DealerDetails;\r\n    onPress?: () => void;\r\n    onLongPress?: () => void;\r\n};\r\n\r\nexport const DealerCard: FC<DealerCardProps> = ({ dealer, onPress, onLongPress }) => {\r\n    const { t } = useTranslation(\"Dealer\");\r\n    const [now] = useNow();\r\n\r\n    const avatar = useMemo(() => {\r\n        if (dealer.ArtistThumbnail) return { uri: dealer.ArtistThumbnail.FullUrl };\r\n        else if (dealer.Artist) return { uri: dealer.Artist.FullUrl };\r\n        else return require(\"../../../assets/images/dealer_black.png\");\r\n    }, [dealer]);\r\n    const present = useMemo(() => Boolean(dealer.AttendanceDays.find((day) => now.isSame(day.Date, \"day\"))), [dealer, now]);\r\n\r\n    const offDays = useMemo(() => {\r\n        return [\r\n            !dealer.AttendsOnThursday && moment().day(4).format(\"dddd\"),\r\n            !dealer.AttendsOnFriday && moment().day(5).format(\"dddd\"),\r\n            !dealer.AttendsOnSaturday && moment().day(6).format(\"dddd\"),\r\n        ]\r\n            .filter(Boolean)\r\n            .join(\", \");\r\n    }, [dealer, t]);\r\n\r\n    return (\r\n        <DealerCardContent\r\n            avatar={avatar}\r\n            name={dealer.FullName}\r\n            present={present}\r\n            merchandise={dealer.Merchandise}\r\n            offDays={offDays}\r\n            onPress={onPress}\r\n            onLongPress={onLongPress}\r\n        />\r\n    );\r\n};\r\n","import { FC } from \"react\";\r\nimport { Linking } from \"react-native\";\r\nimport { match } from \"ts-pattern\";\r\n\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { dealersSelectors } from \"../../store/eurofurence.selectors\";\r\nimport { LinkFragment, MapDetails, MapEntryDetails } from \"../../store/eurofurence.types\";\r\nimport { DealerCard } from \"../Dealers/DealerCard\";\r\n\r\ntype LinkItemProps = {\r\n    map?: MapDetails;\r\n    entry?: MapEntryDetails;\r\n    link: LinkFragment;\r\n};\r\n\r\nconst DealerLinkItem: FC<LinkItemProps> = ({ link }) => {\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    const dealer = useAppSelector((state) => dealersSelectors.selectById(state, link.Target));\r\n\r\n    if (dealer === undefined) {\r\n        return null;\r\n    }\r\n\r\n    return <DealerCard dealer={dealer} onPress={() => navigation.navigate(\"Dealer\", { id: link.Target })} />;\r\n};\r\n\r\nconst WebExternalLinkItem: FC<LinkItemProps> = ({ link }) => {\r\n    return (\r\n        <Button onPress={() => Linking.openURL(link.Target)} icon={\"web\"}>\r\n            {link.Name ? link.Name : link.Target}\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst MapEntryLinkItem: FC<LinkItemProps> = ({ map, entry, link }) => {\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    return !map || !entry ? null : (\r\n        <Button style={{ marginVertical: 5 }} onPress={() => navigation.navigate(\"Map\", { id: map.Id, entryId: entry.Id, linkId: entry?.Links.indexOf(link) })}>\r\n            {link.Name}\r\n        </Button>\r\n    );\r\n};\r\n\r\nconst EventConferenceRoomLinkItem: FC<LinkItemProps> = ({ map, entry, link }) => {\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    return !map || !entry ? null : (\r\n        <Button style={{ marginVertical: 5 }} onPress={() => navigation.navigate(\"Map\", { id: map.Id, entryId: entry.Id, linkId: entry?.Links.indexOf(link) })}>\r\n            {link.Name}\r\n        </Button>\r\n    );\r\n};\r\n\r\nexport const LinkItem: FC<LinkItemProps> = ({ map, entry, link }) => {\r\n    return match(link.FragmentType)\r\n        .with(\"DealerDetail\", () => <DealerLinkItem map={map} entry={entry} link={link} />)\r\n        .with(\"WebExternal\", () => <WebExternalLinkItem map={map} entry={entry} link={link} />)\r\n        .with(\"MapEntry\", () => <MapEntryLinkItem map={map} entry={entry} link={link} />)\r\n        .with(\"EventConferenceRoom\", () => <EventConferenceRoomLinkItem map={map} entry={entry} link={link} />)\r\n        .otherwise(() => null);\r\n};\r\n","import * as Linking from \"expo-linking\";\r\nimport moment from \"moment\";\r\nimport React, { FC, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Image, StyleSheet, View } from \"react-native\";\r\n\r\nimport { Banner } from \"../../components/Atoms/Banner\";\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { BadgeInvPad } from \"../../components/Containers/BadgeInvPad\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { ImageExButton } from \"../../components/Containers/ImageButton\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectValidLinksByTarget } from \"../../store/eurofurence.selectors\";\r\nimport { DealerDetails } from \"../../store/eurofurence.types\";\r\nimport { appStyles } from \"../AppStyles\";\r\nimport { LinkItem } from \"../Maps/LinkItem\";\r\n\r\n/**\r\n * Props to the content.\r\n */\r\nexport type DealerContentProps = {\r\n    dealer: DealerDetails;\r\n\r\n    /**\r\n     * The padding used by the parent horizontally.\r\n     */\r\n    parentPad?: number;\r\n};\r\n\r\nexport const DealerContent: FC<DealerContentProps> = ({ dealer, parentPad = 0 }) => {\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    const { t } = useTranslation(\"Dealer\");\r\n    const [now] = useNow();\r\n    const theme = useTheme();\r\n\r\n    const mapLink = useAppSelector((state) => selectValidLinksByTarget(state, dealer.Id));\r\n\r\n    const days = useMemo(\r\n        () =>\r\n            dealer.AttendanceDays\r\n                // Convert to long representation.\r\n                .map((day) => moment(day.Date).format(\"dddd\"))\r\n                // Join comma separated.\r\n                .join(\", \"),\r\n        [dealer, t]\r\n    );\r\n\r\n    // Check if not-attending warning should be marked.\r\n    const markNotAttending = useMemo(() => {\r\n        if (now.day() === 4 && !dealer.AttendsOnThursday) return true;\r\n        else if (now.day() === 5 && !dealer.AttendsOnFriday) return true;\r\n        else if (now.day() === 6 && !dealer.AttendsOnSaturday) return true;\r\n        return false;\r\n    }, [now, dealer]);\r\n\r\n    return (\r\n        <>\r\n            {!markNotAttending ? null : (\r\n                <BadgeInvPad padding={parentPad} badgeColor={theme.warning} textColor={theme.invText}>\r\n                    {t(\"not_attending\")}\r\n                </BadgeInvPad>\r\n            )}\r\n\r\n            {!dealer.Artist ? null : (\r\n                <View style={[appStyles.shadow, styles.avatarCircle]}>\r\n                    <Image resizeMode=\"cover\" style={styles.avatarImage} source={{ uri: dealer.Artist.FullUrl }} />\r\n                </View>\r\n            )}\r\n\r\n            <Section icon=\"brush\" title={dealer.FullName} subtitle={`${dealer.AttendeeNickname} (${dealer.RegistrationNumber})`} />\r\n\r\n            <Label type=\"para\">{dealer.ShortDescription}</Label>\r\n\r\n            <Section icon=\"directions-fork\" title={t(\"about\")} />\r\n            <Label type=\"caption\">{t(\"attends\")}</Label>\r\n            <Label type=\"h3\" mb={20}>\r\n                {days}\r\n            </Label>\r\n\r\n            <Label type=\"caption\">{t(\"merchandise\")}</Label>\r\n            <Label type=\"h3\" mb={20}>\r\n                {dealer.Merchandise}\r\n            </Label>\r\n\r\n            {!dealer.IsAfterDark ? null : (\r\n                <>\r\n                    <Label type=\"caption\">{t(\"after_dark\")}</Label>\r\n                    <Label type=\"h3\" mb={20}>\r\n                        {t(\"in_after_dark\")}\r\n                    </Label>\r\n                </>\r\n            )}\r\n\r\n            {!dealer.Categories?.length ? null : (\r\n                <>\r\n                    <Label type=\"caption\">{t(\"categories\")}</Label>\r\n                    <Label type=\"h3\" mb={20}>\r\n                        {dealer.Categories?.join(\", \")}\r\n                    </Label>\r\n                </>\r\n            )}\r\n\r\n            {dealer.Links &&\r\n                dealer.Links.map((it) => (\r\n                    <View style={styles.button} key={it.Name}>\r\n                        <LinkItem link={it} />\r\n                    </View>\r\n                ))}\r\n\r\n            {dealer.TelegramHandle && (\r\n                <Button style={styles.button} onPress={() => Linking.openURL(`https://t.me/${dealer.TelegramHandle}`)}>\r\n                    Telegram: {dealer.TelegramHandle}\r\n                </Button>\r\n            )}\r\n            {dealer.TwitterHandle && (\r\n                <Button style={styles.button} onPress={() => Linking.openURL(`https://twitter.com/${dealer.TwitterHandle}`)} icon={\"twitter\"}>\r\n                    Twitter: {dealer.TwitterHandle}\r\n                </Button>\r\n            )}\r\n\r\n            {mapLink.map(({ map, entry, link }, i) => (\r\n                <ImageExButton\r\n                    key={i}\r\n                    image={map.Image}\r\n                    target={{ x: entry.X, y: entry.Y, size: entry.TapRadius * 10 }}\r\n                    onPress={() => navigation.navigate(\"Map\", { id: map.Id, entryId: entry.Id, linkId: entry.Links.indexOf(link) })}\r\n                />\r\n            ))}\r\n\r\n            {!dealer.AboutTheArtText && !dealer.ArtPreview ? null : (\r\n                <>\r\n                    <Section icon=\"film\" title={t(\"about_the_art\")} />\r\n\r\n                    {!dealer.ArtPreview ? null : (\r\n                        <View style={styles.posterLine}>\r\n                            <Banner image={dealer.ArtPreview} />\r\n\r\n                            <Label mt={10} type=\"caption\" numberOfLines={4} ellipsizeMode=\"tail\">\r\n                                {dealer.ArtPreviewCaption}\r\n                            </Label>\r\n                        </View>\r\n                    )}\r\n\r\n                    <Label type=\"para\">{dealer.AboutTheArtText}</Label>\r\n                </>\r\n            )}\r\n\r\n            {!dealer.AboutTheArtistText && !dealer.ArtistImageId ? null : (\r\n                <>\r\n                    <Section icon=\"account-circle-outline\" title={t(\"about_the_artist\", { name: dealer.FullName })} />\r\n\r\n                    {!dealer.Artist ? null : (\r\n                        <View style={styles.posterLine}>\r\n                            <Banner image={dealer.Artist} />\r\n                        </View>\r\n                    )}\r\n\r\n                    <Label type=\"para\">{dealer.AboutTheArtistText}</Label>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    avatarCircle: {\r\n        width: 120,\r\n        height: 120,\r\n        borderRadius: 60,\r\n        overflow: \"hidden\",\r\n        alignSelf: \"center\",\r\n        margin: 20,\r\n    },\r\n    avatarImage: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n    aboutLine: {\r\n        marginBottom: 20,\r\n    },\r\n    posterLine: {\r\n        marginBottom: 20,\r\n        alignItems: \"center\",\r\n    },\r\n    button: {\r\n        marginBottom: 20,\r\n    },\r\n});\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { Floater, padFloater } from \"../../components/Containers/Floater\";\r\nimport { Header } from \"../../components/Containers/Header\";\r\nimport { useAppRoute } from \"../../hooks/useAppNavigation\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { dealersSelectors } from \"../../store/eurofurence.selectors\";\r\nimport { appStyles } from \"../AppStyles\";\r\nimport { DealerContent } from \"./DealerContent\";\r\n\r\n/**\r\n * Params handled by the screen in route.\r\n */\r\nexport type DealerScreenParams = {\r\n    /**\r\n     * The ID, needed if the dealer is not passed explicitly, i.e., as an external link.\r\n     */\r\n    id: string;\r\n};\r\n\r\nexport const DealerScreen = () => {\r\n    const { t } = useTranslation(\"Dealer\");\r\n    const route = useAppRoute(\"Dealer\");\r\n    const dealer = useAppSelector((state) => dealersSelectors.selectById(state, route.params.id));\r\n    const safe = useSafeAreaInsets();\r\n\r\n    return (\r\n        <ScrollView style={[appStyles.abs, safe]} stickyHeaderIndices={[0]} stickyHeaderHiddenOnScroll>\r\n            <Header>{dealer?.FullName ?? t(\"viewing_dealer\")}</Header>\r\n            <Floater contentStyle={appStyles.trailer}>{!dealer ? null : <DealerContent dealer={dealer} parentPad={padFloater} />}</Floater>\r\n        </ScrollView>\r\n    );\r\n};\r\n","import { ScopeContext } from \"@sentry/types\";\r\nimport { Browser, Native } from \"sentry-expo\";\r\n\r\n/**\r\n * Holds either browser or native sentry.\r\n */\r\nexport const PlatformSentry = Native ?? Browser;\r\nexport const captureEvent = PlatformSentry.captureEvent;\r\nexport const captureException = PlatformSentry.captureException;\r\n\r\nexport const captureNotificationException = (message: string, error: Error, context: Partial<ScopeContext> = {}) => {\r\n    console.error(message, error);\r\n\r\n    Browser.captureException(error, {\r\n        tags: {\r\n            type: \"notifications\",\r\n        },\r\n        ...context,\r\n    });\r\n};\r\n\r\nexport const useSentryProfiler = \"useProfiler\" in PlatformSentry ? PlatformSentry.useProfiler : () => {};\r\n","import moment from \"moment\";\r\nimport React, { FC, useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Share, StyleSheet, View } from \"react-native\";\r\n\r\nimport { Banner } from \"../../components/Atoms/Banner\";\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { MarkdownContent } from \"../../components/Atoms/MarkdownContent\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { BadgeInvPad } from \"../../components/Containers/BadgeInvPad\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { ImageExButton } from \"../../components/Containers/ImageButton\";\r\nimport { Row } from \"../../components/Containers/Row\";\r\nimport { appBase, conAbbr } from \"../../configuration\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { useEventReminder } from \"../../hooks/useEventReminder\";\r\nimport { captureException } from \"../../sentryHelpers\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectValidLinksByTarget } from \"../../store/eurofurence.selectors\";\r\nimport { EventDetails } from \"../../store/eurofurence.types\";\r\n\r\n/**\r\n * Props to the content.\r\n */\r\nexport type EventContentProps = {\r\n    /**\r\n     * The event to display.\r\n     */\r\n    event: EventDetails;\r\n\r\n    /**\r\n     * The padding used by the parent horizontally.\r\n     */\r\n    parentPad?: number;\r\n};\r\n\r\nexport const EventContent: FC<EventContentProps> = ({ event, parentPad = 0 }) => {\r\n    const navigation = useAppNavigation(\"Areas\");\r\n\r\n    const { t } = useTranslation(\"Event\");\r\n    const { isFavorited, toggleReminder } = useEventReminder(event);\r\n    const theme = useTheme();\r\n\r\n    const day = event.ConferenceDay;\r\n    const track = event.ConferenceTrack;\r\n    const room = event.ConferenceRoom;\r\n\r\n    const mapLink = useAppSelector((state) => (!room ? undefined : selectValidLinksByTarget(state, room.Id)));\r\n\r\n    const shareEvent = useCallback(() => {\r\n        Share.share(\r\n            {\r\n                title: event.Title,\r\n                url: `${appBase}/Web/Events/${event.Id}`,\r\n                message: `Check out ${event.Title} on ${conAbbr}!\\n${appBase}/Web/Events/${event.Id}`,\r\n            },\r\n            {}\r\n        ).catch(captureException);\r\n    }, [event]);\r\n\r\n    return (\r\n        <>\r\n            {!event.SuperSponsorOnly ? null : (\r\n                <BadgeInvPad padding={parentPad} badgeColor={theme.superSponsor} textColor={theme.superSponsorText}>\r\n                    {t(\"supersponsor_event\")}\r\n                </BadgeInvPad>\r\n            )}\r\n\r\n            {!event.SponsorOnly ? null : (\r\n                <BadgeInvPad padding={parentPad} badgeColor={theme.sponsor} textColor={theme.sponsorText}>\r\n                    {t(\"sponsor_event\")}\r\n                </BadgeInvPad>\r\n            )}\r\n\r\n            {!event.Poster ? null : (\r\n                <View style={styles.posterLine}>\r\n                    <Banner image={event.Poster} />\r\n                </View>\r\n            )}\r\n\r\n            <Section icon={isFavorited ? \"heart\" : event.Glyph} title={event.Title ?? \"\"} subtitle={event.SubTitle} />\r\n            <MarkdownContent defaultType=\"para\" mb={20}>\r\n                {event.Abstract}\r\n            </MarkdownContent>\r\n\r\n            {!event.MaskRequired ? null : (\r\n                <BadgeInvPad padding={parentPad} icon=\"face-mask\" textColor={theme.secondary} textType=\"regular\" textVariant=\"regular\">\r\n                    {t(\"mask_required\")}\r\n                </BadgeInvPad>\r\n            )}\r\n\r\n            <Row style={styles.marginBefore}>\r\n                <Button style={styles.rowLeft} outline={isFavorited} icon={isFavorited ? \"heart-outline\" : \"heart\"} onPress={toggleReminder}>\r\n                    {isFavorited ? t(\"remove_favorite\") : t(\"add_favorite\")}\r\n                </Button>\r\n                <Button style={styles.rowRight} icon={\"share\"} onPress={shareEvent}>\r\n                    {t(\"share\")}\r\n                </Button>\r\n            </Row>\r\n\r\n            {event.IsAcceptingFeedback && (\r\n                <Button style={styles.share} icon=\"pencil\" onPress={() => navigation.navigate(\"EventFeedback\", { id: event.Id })}>\r\n                    {t(\"give_feedback\")}\r\n                </Button>\r\n            )}\r\n\r\n            <Section icon=\"directions-fork\" title={t(\"about_title\")} />\r\n            <Label type=\"caption\">{t(\"label_event_panelhosts\")}</Label>\r\n            <Label type=\"h3\" mb={20}>\r\n                {event.PanelHosts}\r\n            </Label>\r\n\r\n            <Label type=\"caption\">{t(\"label_event_when\")}</Label>\r\n            <Label type=\"h3\" mb={20}>\r\n                {t(\"when\", { day: day && moment(day.Date).format(\"dddd\"), start: moment(event.StartDateTimeUtc).format(\"LT\"), finish: moment(event.EndDateTimeUtc).format(\"LT\") })}\r\n            </Label>\r\n\r\n            <Label type=\"caption\">{t(\"label_event_track\")}</Label>\r\n            <Label type=\"h3\" mb={20}>\r\n                {track?.Name || \" \"}\r\n            </Label>\r\n\r\n            <Label type=\"caption\">{t(\"label_event_room\")}</Label>\r\n            <Label type=\"h3\" mb={20}>\r\n                {room?.Name || \" \"}\r\n            </Label>\r\n\r\n            {!mapLink\r\n                ? null\r\n                : mapLink.map(({ map, entry, link }, i) => (\r\n                      <ImageExButton\r\n                          key={i}\r\n                          image={map.Image}\r\n                          target={{ x: entry.X, y: entry.Y, size: entry.TapRadius * 10 }}\r\n                          onPress={() => navigation.navigate(\"Map\", { id: map.Id, entryId: entry.Id, linkId: entry.Links.indexOf(link) })}\r\n                      />\r\n                  ))}\r\n\r\n            <Section icon=\"information\" title={t(\"label_event_description\")} />\r\n            <MarkdownContent defaultType=\"para\">{event.Description}</MarkdownContent>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    rowLeft: {\r\n        flex: 1,\r\n        marginRight: 8,\r\n    },\r\n    rowRight: {\r\n        flex: 1,\r\n        marginLeft: 8,\r\n    },\r\n    share: {\r\n        marginVertical: 15,\r\n    },\r\n    marginBefore: {\r\n        marginTop: 20,\r\n    },\r\n    posterLine: {\r\n        marginTop: 20,\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n","import * as Notifications from \"expo-notifications\";\r\nimport moment from \"moment\";\r\nimport { useCallback, useMemo } from \"react\";\r\nimport { Platform } from \"react-native\";\r\n\r\nimport { useAppDispatch, useAppSelector } from \"../store\";\r\nimport { addNotification, Notification, removeNotification } from \"../store/background.slice\";\r\nimport { EventRecord } from \"../store/eurofurence.types\";\r\n\r\nexport const useEventReminder = (event: EventRecord) => {\r\n    const dispatch = useAppDispatch();\r\n    const timetravel = useAppSelector((state) => state.timetravel.amount);\r\n    const notificationEntry = useAppSelector((state) => state.background.notifications.find((it) => it.recordId === event.Id));\r\n\r\n    const createReminder = useCallback(() => {\r\n        const scheduleDate = moment(event.StartDateTimeUtc).subtract(timetravel, \"milliseconds\").subtract(30, \"minutes\");\r\n        const notification: Notification = {\r\n            recordId: event.Id,\r\n            type: \"EventReminder\",\r\n            dateCreated: moment().toISOString(),\r\n            dateScheduled: scheduleDate.toISOString(),\r\n        };\r\n\r\n        if (Platform.OS === \"android\" || Platform.OS === \"ios\") {\r\n            Notifications.scheduleNotificationAsync({\r\n                identifier: notification.recordId,\r\n                content: {\r\n                    title: event.Title,\r\n                    subtitle: \"This event is starting soon!\",\r\n                },\r\n                trigger: {\r\n                    date: scheduleDate.toDate(),\r\n                    channelId: \"event_reminders\",\r\n                },\r\n            });\r\n        }\r\n\r\n        dispatch(addNotification(notification));\r\n    }, [event, timetravel]);\r\n\r\n    const removeReminder = useCallback(() => {\r\n        if (Platform.OS === \"android\" || Platform.OS === \"ios\") {\r\n            Notifications.cancelScheduledNotificationAsync(event.Id);\r\n        }\r\n        dispatch(removeNotification(event.Id));\r\n    }, [event]);\r\n\r\n    const toggleReminder = useMemo(() => (notificationEntry ? removeReminder : createReminder), [notificationEntry, createReminder, removeReminder]);\r\n    return {\r\n        isFavorited: Boolean(notificationEntry),\r\n        createReminder,\r\n        removeReminder,\r\n        toggleReminder,\r\n    };\r\n};\r\n","import { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { Floater, padFloater } from \"../../components/Containers/Floater\";\r\nimport { Header } from \"../../components/Containers/Header\";\r\nimport { useAppRoute } from \"../../hooks/useAppNavigation\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { eventsSelector } from \"../../store/eurofurence.selectors\";\r\nimport { appStyles } from \"../AppStyles\";\r\nimport { EventContent } from \"./EventContent\";\r\n\r\n/**\r\n * Params handled by the screen in route.\r\n */\r\nexport type EventScreenParams = {\r\n    /**\r\n     * The ID, needed if the event is not passed explicitly, i.e., as an external link.\r\n     */\r\n    id: string;\r\n};\r\n\r\nexport const EventScreen = () => {\r\n    const safe = useSafeAreaInsets();\r\n    const route = useAppRoute(\"Event\");\r\n    const event = useAppSelector((state) => eventsSelector.selectById(state, route.params.id));\r\n\r\n    return (\r\n        <ScrollView style={[appStyles.abs, safe]} stickyHeaderIndices={[0]} stickyHeaderHiddenOnScroll>\r\n            <Header>{event?.Title ?? \"Viewing event\"}</Header>\r\n            <Floater contentStyle={appStyles.trailer}>{!event ? null : <EventContent event={event} parentPad={padFloater} />}</Floater>\r\n        </ScrollView>\r\n    );\r\n};\r\n","import { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { useCallback, useEffect } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet, TextInput } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\nimport StarRating from \"react-native-star-rating-widget\";\r\nimport { z } from \"zod\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { Col } from \"../../components/Containers/Col\";\r\nimport { Floater } from \"../../components/Containers/Floater\";\r\nimport { Header } from \"../../components/Containers/Header\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { useAppNavigation, useAppRoute } from \"../../hooks/useAppNavigation\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { eventsSelector } from \"../../store/eurofurence.selectors\";\r\nimport { useSubmitEventFeedbackMutation } from \"../../store/eurofurence.service\";\r\n\r\nconst feedbackForm = z.object({\r\n    rating: z.preprocess((a) => parseInt(z.string().parse(a), 10), z.number().min(1).max(5)),\r\n    message: z.string().optional(),\r\n});\r\n\r\ntype FeedbackForm = z.infer<typeof feedbackForm>;\r\n\r\nexport const FeedbackScreen = () => {\r\n    const theme = useTheme();\r\n    const navigation = useAppNavigation(\"EventFeedback\");\r\n    const [submitFeedback, feedbackResult] = useSubmitEventFeedbackMutation();\r\n    const { t } = useTranslation(\"EventFeedback\");\r\n    const { control, handleSubmit } = useForm<FeedbackForm>({\r\n        resolver: zodResolver(feedbackForm),\r\n        defaultValues: {\r\n            rating: undefined,\r\n            message: undefined,\r\n        },\r\n    });\r\n\r\n    const safe = useSafeAreaInsets();\r\n    const { params } = useAppRoute(\"EventFeedback\");\r\n    const event = useAppSelector((state) => eventsSelector.selectById(state, params.id));\r\n\r\n    const submit = useCallback((data: FeedbackForm) => {\r\n        submitFeedback({\r\n            ...data,\r\n            eventId: event!.Id,\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (feedbackResult.isSuccess) {\r\n            navigation.goBack();\r\n        }\r\n    }, [feedbackResult]);\r\n\r\n    return (\r\n        <ScrollView style={safe} stickyHeaderIndices={[0]}>\r\n            <Header>{t(\"header\", { eventTitle: event?.Title })}</Header>\r\n            <Floater containerStyle={{ marginTop: 10 }}>\r\n                <Label variant={\"narrow\"}>{t(\"explanation\", { eventTitle: event?.Title })}</Label>\r\n\r\n                <Controller\r\n                    control={control}\r\n                    name={\"rating\"}\r\n                    rules={{\r\n                        required: true,\r\n                    }}\r\n                    render={({ field, fieldState }) => (\r\n                        <Col type={\"stretch\"}>\r\n                            <Label variant={\"bold\"} mt={16}>\r\n                                {t(\"rating_title\")}\r\n                            </Label>\r\n                            <StarRating\r\n                                rating={field.value}\r\n                                onChange={field.onChange}\r\n                                minRating={1}\r\n                                enableHalfStar={false}\r\n                                color={theme.secondary}\r\n                                style={styles.star}\r\n                                starSize={52}\r\n                            />\r\n                            {fieldState.error && <Label style={styles.error}>{fieldState.error.message}</Label>}\r\n                        </Col>\r\n                    )}\r\n                />\r\n                <Controller\r\n                    control={control}\r\n                    name={\"message\"}\r\n                    rules={{\r\n                        required: false,\r\n                    }}\r\n                    render={({ field }) => (\r\n                        <>\r\n                            <Label variant={\"bold\"} mt={16}>\r\n                                {t(\"message_title\")}\r\n                            </Label>\r\n                            <TextInput {...field} style={styles.input} onChangeText={field.onChange} placeholder={t(\"message_placeholder\")} numberOfLines={8} multiline />\r\n                        </>\r\n                    )}\r\n                />\r\n\r\n                <Button onPress={handleSubmit(submit)} disabled={feedbackResult.isLoading}>\r\n                    {t(\"submit\")}\r\n                </Button>\r\n\r\n                {feedbackResult.isError && (\r\n                    <Label style={styles.error} mt={16}>\r\n                        {t(\"submit_failed\")}\r\n                    </Label>\r\n                )}\r\n                {feedbackResult.isLoading && <Label mt={16}>{t(\"submit_in_progress\")}</Label>}\r\n            </Floater>\r\n        </ScrollView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    input: {\r\n        width: \"100%\",\r\n        borderBottomColor: \"black\",\r\n        borderBottomWidth: 1,\r\n        paddingVertical: 8,\r\n        marginBottom: 16,\r\n    },\r\n    star: {\r\n        marginTop: 16,\r\n        marginBottom: 8,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\",\r\n    },\r\n    error: {\r\n        fontSize: 10,\r\n        color: \"#a01010\",\r\n    },\r\n});\r\n","import { Image, View } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { MarkdownContent } from \"../../components/Atoms/MarkdownContent\";\r\nimport { Floater } from \"../../components/Containers/Floater\";\r\nimport { Header } from \"../../components/Containers/Header\";\r\nimport { useAppRoute } from \"../../hooks/useAppNavigation\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { knowledgeEntriesSelectors, selectImagesById } from \"../../store/eurofurence.selectors\";\r\nimport { appStyles } from \"../AppStyles\";\r\nimport { LinkItem } from \"../Maps/LinkItem\";\r\n\r\nexport const KnowledgeEntryScreen = () => {\r\n    const { params } = useAppRoute(\"KnowledgeEntry\");\r\n    const entry = useAppSelector((state) => knowledgeEntriesSelectors.selectById(state, params.id));\r\n    const images = useAppSelector((state) => selectImagesById(state, entry?.ImageIds ?? []));\r\n    const safe = useSafeAreaInsets();\r\n    return (\r\n        <ScrollView style={[appStyles.abs, safe]} stickyHeaderIndices={[0]} stickyHeaderHiddenOnScroll>\r\n            <Header>{entry?.Title}</Header>\r\n            <Floater contentStyle={appStyles.trailer}>\r\n                {images.map((it) => (\r\n                    <Image source={{ uri: it.FullUrl, height: 400 }} key={it.Id} resizeMode={\"contain\"} />\r\n                ))}\r\n                <MarkdownContent>{entry?.Text ?? \"\"}</MarkdownContent>\r\n                {entry?.Links.map((link) => (\r\n                    <View style={{ marginBottom: 10 }}>\r\n                        <LinkItem link={link} key={link.Target} />\r\n                    </View>\r\n                ))}\r\n            </Floater>\r\n        </ScrollView>\r\n    );\r\n};\r\n","import { FC } from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\nimport { appStyles } from \"../../app/AppStyles\";\r\nimport { useTheme } from \"../../context/Theme\";\r\n\r\ntype CardProps = {\r\n    onPress?: () => void;\r\n    onLongPress?: () => void;\r\n    style?: StyleProp<ViewStyle> | undefined;\r\n};\r\nexport const Card: FC<CardProps> = ({ children, onPress, onLongPress, style }) => {\r\n    const theme = useTheme();\r\n    return (\r\n        <TouchableOpacity\r\n            style={[styles.container, appStyles.shadow, { backgroundColor: theme.background }, style]}\r\n            onPress={onPress}\r\n            onLongPress={onLongPress}\r\n            disabled={onPress === undefined && onLongPress === undefined}\r\n        >\r\n            <View style={styles.main}>{children}</View>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        minHeight: 80,\r\n        marginVertical: 15,\r\n        borderRadius: 16,\r\n        overflow: \"hidden\",\r\n        flexDirection: \"row\",\r\n    },\r\n    main: {\r\n        flex: 1,\r\n        padding: 16,\r\n    },\r\n});\r\n","import { Platform } from \"react-native\";\r\n\r\ntype OS = typeof Platform.OS;\r\n\r\nexport const withPlatform =\r\n    <ComponentType,>(Component: React.ComponentType<ComponentType>, platforms: OS[]) =>\r\n    (props: ComponentType) =>\r\n        platforms.includes(Platform.OS) ? <Component {...props} /> : null;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Image, Text } from \"react-native\";\r\n\r\nimport { withPlatform } from \"../../hoc/withPlatform\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { imagesSelectors } from \"../../store/eurofurence.selectors\";\r\n\r\nexport const ImageSynchronizer = () => {\r\n    const [isCaching, setIsCaching] = useState(false);\r\n    const [prefetchedImages, setPrefetchedImages] = useState(0);\r\n    const images = useAppSelector(imagesSelectors.selectAll);\r\n\r\n    useEffect(() => {\r\n        const fetchImages = async () => {\r\n            const imageUrls = images.map((it) => it.FullUrl).filter((it): it is string => it !== undefined);\r\n            // @ts-expect-error this method seemingly might not exist?\r\n            const cachedImages = await Image.queryCache(imageUrls);\r\n\r\n            setPrefetchedImages(Object.keys(cachedImages).length);\r\n\r\n            const nonCachedImages = imageUrls.filter((url) => !(url in cachedImages));\r\n\r\n            await Promise.all(nonCachedImages.map((url) => Image.prefetch(url).then(() => setPrefetchedImages((c) => c + 1))));\r\n\r\n            setIsCaching(false);\r\n        };\r\n\r\n        fetchImages().catch(console.error);\r\n    }, [images]);\r\n\r\n    if (!isCaching) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <Text>\r\n            We are prefetching images. We are currently at {prefetchedImages} out of {images.length}\r\n        </Text>\r\n    );\r\n};\r\n\r\nexport const PlatformImageSynchronizer = withPlatform(ImageSynchronizer, [\"android\", \"ios\"]);\r\n","import { noop } from \"lodash\";\r\nimport { createContext, FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\r\nimport { Vibration } from \"react-native\";\r\n\r\nimport { apiBase } from \"../../configuration\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store\";\r\nimport { applySync, resetCache, startCacheSync } from \"../../store/eurofurence.cache\";\r\nimport { selectIsSynchronized } from \"../../store/eurofurence.selectors\";\r\nimport { PlatformImageSynchronizer } from \"./ImageSynchronizer\";\r\n\r\ntype SynchronizationProviderProps = {\r\n    /**\r\n     * Call this function to trigger a synchronization step.\r\n     */\r\n    synchronize: (vibrate?: boolean) => void;\r\n\r\n    /**\r\n     * Clear the entire cache and start over again.\r\n     */\r\n    clear: () => void;\r\n};\r\nconst SynchronizationContext = createContext<SynchronizationProviderProps>({\r\n    synchronize: noop,\r\n    clear: noop,\r\n});\r\n\r\nexport const SynchronizationProvider: FC = ({ children }) => {\r\n    const dispatch = useAppDispatch();\r\n    const lastFetch = useAppSelector((state) => state.eurofurenceCache.lastSynchronised);\r\n    const [count, setCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        fetch(`${apiBase}/Sync?since=${lastFetch}`)\r\n            .then((r) => r.json())\r\n            .then((data) => dispatch(applySync(data)))\r\n            .catch(console.error);\r\n    }, [count]);\r\n\r\n    const clearCache = useCallback(() => {\r\n        Vibration.vibrate(400);\r\n        dispatch(resetCache());\r\n        synchronize();\r\n    }, [dispatch]);\r\n\r\n    const synchronize = useCallback((vibrate: boolean = true) => {\r\n        dispatch(startCacheSync());\r\n        if (vibrate) Vibration.vibrate(150);\r\n        setCount((c) => c + 1);\r\n    }, []);\r\n\r\n    const providerValues = useMemo(\r\n        (): SynchronizationProviderProps => ({\r\n            synchronize,\r\n            clear: clearCache,\r\n        }),\r\n        [synchronize]\r\n    );\r\n\r\n    return (\r\n        <SynchronizationContext.Provider value={providerValues}>\r\n            <PlatformImageSynchronizer />\r\n            {children}\r\n        </SynchronizationContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useSynchronizer = () => {\r\n    const { synchronize, clear } = useContext(SynchronizationContext);\r\n    const isSynchronizing = useAppSelector(selectIsSynchronized);\r\n\r\n    return {\r\n        synchronize,\r\n        clear,\r\n        isSynchronizing,\r\n    };\r\n};\r\n","import React, { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { SectionList, StyleSheet, View } from \"react-native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { Card } from \"../../components/Containers/Card\";\r\nimport { Header } from \"../../components/Containers/Header\";\r\nimport { useSynchronizer } from \"../../components/Synchronization/SynchronizationProvider\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectKnowledgeItemsSections } from \"../../store/eurofurence.selectors\";\r\nimport { KnowledgeEntryRecord } from \"../../store/eurofurence.types\";\r\nimport { appStyles } from \"../AppStyles\";\r\n\r\nexport const KnowledgeListEntry: FC<{ entry: KnowledgeEntryRecord }> = ({ entry }) => {\r\n    const navigation = useAppNavigation(\"KnowledgeGroups\");\r\n\r\n    return (\r\n        <View style={{ paddingHorizontal: 20 }}>\r\n            <Card style={styles.card} onPress={() => navigation.navigate(\"KnowledgeEntry\", { id: entry.Id })}>\r\n                <Label>{entry.Title}</Label>\r\n            </Card>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const KnowledgeGroupsScreen = () => {\r\n    const { t } = useTranslation(\"KnowledgeGroups\");\r\n    const synchronizer = useSynchronizer();\r\n    const safe = useSafeAreaInsets();\r\n    const theme = useTheme();\r\n    const entries = useAppSelector((state) => selectKnowledgeItemsSections(state));\r\n\r\n    return (\r\n        <SectionList\r\n            style={[appStyles.abs, safe]}\r\n            onRefresh={synchronizer.synchronize}\r\n            refreshing={synchronizer.isSynchronizing}\r\n            ListHeaderComponent={<Header>{t(\"header\")}</Header>}\r\n            sections={entries}\r\n            stickySectionHeadersEnabled\r\n            keyExtractor={(item, index) => item.Id + index}\r\n            renderItem={({ item }) => <KnowledgeListEntry entry={item} key={item.Id} />}\r\n            renderSectionHeader={({ section }) => (\r\n                <Section title={section.Name} subtitle={section.Description} style={{ padding: 20, marginTop: 0, backgroundColor: theme.surface }} />\r\n            )}\r\n            renderSectionFooter={() => <View style={styles.footer} />}\r\n        />\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    card: {\r\n        minHeight: 0,\r\n        marginVertical: 4,\r\n    },\r\n    container: {\r\n        paddingHorizontal: 20,\r\n        paddingBottom: 100,\r\n    },\r\n    footer: {\r\n        height: 20,\r\n    },\r\n    entryButton: {\r\n        marginVertical: 10,\r\n    },\r\n});\r\n","import BottomSheet, { BottomSheetFlatList } from \"@gorhom/bottom-sheet\";\r\nimport { ReactNativeZoomableView as ZoomableView, ZoomableViewEvent } from \"@openspacelabs/react-native-zoomable-view\";\r\nimport { chain, clamp } from \"lodash\";\r\nimport * as React from \"react\";\r\nimport { FC, useCallback, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Image, StyleSheet, View, ViewStyle } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Marker } from \"../../components/Atoms/Marker\";\r\nimport { useThemeBackground } from \"../../context/Theme\";\r\nimport { ImageDetails, LinkFragment, MapDetails, MapEntryDetails } from \"../../store/eurofurence.types\";\r\nimport { LinkItem } from \"./LinkItem\";\r\n\r\nconst distSq = (hx: number, hy: number) => hx * hx + hy * hy;\r\nconst circleTouches = (x1: number, y1: number, x2: number, y2: number, x: number, y: number, r: number) => {\r\n    const ix = clamp(x, x1, x2);\r\n    const iy = clamp(y, y1, y2);\r\n    return distSq(ix - x, iy - y) < r * r;\r\n};\r\n\r\ntype FilterResult = {\r\n    key: string;\r\n    map: MapDetails;\r\n    entry: MapEntryDetails;\r\n    link: LinkFragment;\r\n};\r\n\r\nexport type MapContentProps = {\r\n    map: MapDetails & { Image: ImageDetails };\r\n    entry?: MapEntryDetails;\r\n    link?: LinkFragment;\r\n};\r\n\r\nexport const MapContent: FC<MapContentProps> = ({ map, entry, link }) => {\r\n    const { t } = useTranslation(\"Maps\");\r\n    const refHandle = useRef<any>([0, 0]);\r\n    const refZoom = useRef<ZoomableView>(null);\r\n    const refSheet = useRef<BottomSheet>(null);\r\n\r\n    const styleBackground = useThemeBackground(\"background\");\r\n    const styleHandle = useThemeBackground(\"inverted\");\r\n\r\n    const [results, setResults] = useState<FilterResult[]>([]);\r\n    const onTransform = useCallback((event: ZoomableViewEvent) => {\r\n        clearTimeout(refHandle.current);\r\n\r\n        refHandle.current = setTimeout(() => {\r\n            // Get arguments from event.\r\n            const targetWidth = event.originalWidth;\r\n            const targetHeight = event.originalHeight;\r\n            const offsetX = event.offsetX;\r\n            const offsetY = event.offsetY;\r\n            const zoom = event.zoomLevel;\r\n\r\n            // Get area and area center.\r\n            const x1 = ((map.Image.Width * zoom) / 2 - offsetX * zoom - targetWidth / 2) / zoom;\r\n            const x2 = x1 + targetWidth / zoom;\r\n            const y1 = ((map.Image.Height * zoom) / 2 - offsetY * zoom - targetHeight / 2) / zoom;\r\n            const y2 = y1 + targetHeight / zoom;\r\n            const centerX = (x1 + x2) / 2;\r\n            const centerY = (y1 + y2) / 2;\r\n\r\n            // Filter all that touch the view. Order ascending by square distance and then add all their links.\r\n            setResults(\r\n                chain(map?.Entries)\r\n                    .filter((entry) => circleTouches(x1, y1, x2, y2, entry.X, entry.Y, entry.TapRadius))\r\n                    .orderBy((entry) => distSq(entry.X - centerX, entry.Y - centerY), \"asc\")\r\n                    .flatMap((entry) => entry.Links.map((link, i) => ({ key: `${map.Id}/${entry.Id}#${i}`, map, entry, link })))\r\n                    .value()\r\n            );\r\n        }, 350);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (!refSheet.current) return;\r\n        if (entry) refSheet.current.collapse();\r\n    }, [entry]);\r\n\r\n    // On change of entry, move to new location.\r\n    useEffect(() => {\r\n        if (!entry) return;\r\n        if (!refZoom.current) return;\r\n        // Get arguments from current status..\r\n        const current = refZoom.current._getZoomableViewEventObject();\r\n        const offsetX = current.offsetX;\r\n        const offsetY = current.offsetY;\r\n        const zoom = current.zoomLevel;\r\n\r\n        // Get change to current center.\r\n        const diffX = entry.X - (map.Image.Width / 2 - offsetX);\r\n        const diffY = entry.Y - (map.Image.Height / 2 - offsetY);\r\n        refZoom.current.moveBy(diffX * zoom, diffY * zoom).catch(() => undefined);\r\n    }, [entry, refZoom]);\r\n\r\n    // Compute containers.\r\n    const styleContainer = useMemo<ViewStyle>(() => ({ width: map.Image.Width, height: map.Image.Height }), [map]);\r\n    const styleMarker = useMemo<ViewStyle>(() => (!entry ? { display: \"none\" } : { left: entry.X, top: entry.Y }), [entry]);\r\n\r\n    const [minZoom, maxZoom] = useMemo(() => (Math.max(map.Image.Width, map.Image.Height) < 2048 ? [0.5, 2] : [0.25, 1]), [map]);\r\n    return (\r\n        <>\r\n            <View style={styles.container}>\r\n                <ZoomableView\r\n                    ref={refZoom}\r\n                    contentWidth={map.Image.Width}\r\n                    contentHeight={map.Image.Height}\r\n                    maxZoom={maxZoom}\r\n                    minZoom={minZoom}\r\n                    zoomStep={maxZoom - minZoom}\r\n                    initialZoom={entry ? 1.5 : minZoom}\r\n                    bindToBorders={true}\r\n                    onTransform={onTransform}\r\n                >\r\n                    <View style={styleContainer}>\r\n                        <Image style={styles.image} resizeMode={undefined} source={{ uri: map.Image.FullUrl }} />\r\n                        {!entry ? null : <Marker style={styleMarker} markerSize={75} />}\r\n                    </View>\r\n                </ZoomableView>\r\n            </View>\r\n\r\n            <BottomSheet ref={refSheet} backgroundStyle={styleBackground} handleStyle={styles.handle} handleIndicatorStyle={styleHandle} snapPoints={[\"10%\", \"75%\"]} index={0}>\r\n                {!results ? (\r\n                    <Label mt={15} type=\"em\" variant=\"middle\">\r\n                        {t(\"filtering\")}\r\n                    </Label>\r\n                ) : (\r\n                    <BottomSheetFlatList\r\n                        initialNumToRender={2}\r\n                        maxToRenderPerBatch={1}\r\n                        data={results}\r\n                        keyExtractor={({ key }) => key}\r\n                        renderItem={({ item: { map, entry, link } }) => <LinkItem map={map} entry={entry} link={link} />}\r\n                        contentContainerStyle={{ paddingHorizontal: 15 }}\r\n                    />\r\n                )}\r\n            </BottomSheet>\r\n        </>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    handle: {\r\n        borderTopLeftRadius: 15,\r\n        borderTopRightRadius: 15,\r\n    },\r\n    container: {\r\n        flex: 1,\r\n        paddingBottom: \"10%\",\r\n    },\r\n    image: {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n    },\r\n});\r\n","import * as React from \"react\";\r\nimport { useMemo } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { Header } from \"../../components/Containers/Header\";\r\nimport { useAppRoute } from \"../../hooks/useAppNavigation\";\r\nimport { useSentryProfiler } from \"../../sentryHelpers\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { mapsSelectors } from \"../../store/eurofurence.selectors\";\r\nimport { appStyles } from \"../AppStyles\";\r\nimport { MapContent, MapContentProps } from \"./MapContent\";\r\n\r\nexport const MapScreen = () => {\r\n    // Get safe area and route.\r\n    useSentryProfiler(\"MapScreen\");\r\n    const safe = useSafeAreaInsets();\r\n    const route = useAppRoute(\"Map\");\r\n\r\n    // Resolve map.\r\n    const map = useAppSelector((state) => mapsSelectors.selectById(state, route.params.id));\r\n\r\n    // Resolve entry if requested.\r\n    const entry = useMemo(() => {\r\n        if (!map) return;\r\n        if (!route.params.entryId) return;\r\n        return map.Entries.find((item) => item.Id === route.params.entryId);\r\n    }, [map, route]);\r\n\r\n    const link = useMemo(() => {\r\n        if (!entry) return;\r\n        if (typeof route.params.linkId !== \"number\") return;\r\n        return entry.Links[route.params.linkId];\r\n    }, [entry, route]);\r\n\r\n    const title = useMemo(() => {\r\n        if (map?.Description) {\r\n            if (link?.Name) return `${map.Description}: ${link.Name}`;\r\n            else return map.Description;\r\n        } else {\r\n            return \"Viewing map\";\r\n        }\r\n    }, [map, link]);\r\n\r\n    return (\r\n        <View style={[appStyles.abs, safe]}>\r\n            <Header>{title}</Header>\r\n            {!map?.Image || (route.params.entryId && !entry) || (route.params.linkId && !link) ? null : (\r\n                <MapContent map={map as MapContentProps[\"map\"]} entry={entry} link={link} />\r\n            )}\r\n        </View>\r\n    );\r\n};\r\n","import { useEffect } from \"react\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { MarkdownContent } from \"../../components/Atoms/MarkdownContent\";\r\nimport { Floater } from \"../../components/Containers/Floater\";\r\nimport { Header } from \"../../components/Containers/Header\";\r\nimport { useAppRoute } from \"../../hooks/useAppNavigation\";\r\nimport { useMarkCommunicationReadMutation } from \"../../store/eurofurence.service\";\r\nimport { appStyles } from \"../AppStyles\";\r\n\r\nexport const PrivateMessageItemScreen = () => {\r\n    const { params } = useAppRoute(\"PrivateMessageItem\");\r\n    const safe = useSafeAreaInsets();\r\n    const [markRead] = useMarkCommunicationReadMutation();\r\n\r\n    useEffect(() => {\r\n        if (params.message.ReadDateTimeUtc === null) {\r\n            console.debug(\"marking as read\", params.message.ReadDateTimeUtc);\r\n            markRead(params.id);\r\n        }\r\n    }, [params.message]);\r\n\r\n    return (\r\n        <ScrollView style={[safe]} stickyHeaderIndices={[0]} stickyHeaderHiddenOnScroll>\r\n            <Header>{params.message.Subject}</Header>\r\n            <Floater contentStyle={appStyles.trailer}>\r\n                <MarkdownContent>{params.message.Message}</MarkdownContent>\r\n            </Floater>\r\n        </ScrollView>\r\n    );\r\n};\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport { StyleSheet, View } from \"react-native\";\r\n\r\nimport { Label } from \"../Atoms/Label\";\r\n\r\nexport const NoData = () => {\r\n    return (\r\n        <View style={[styles.container]}>\r\n            <Icon name={\"calendar-alert\"} size={40} style={{ marginBottom: 20 }} />\r\n            <Label type={\"h3\"} variant={\"narrow\"}>\r\n                There's nothing here yet . . .\r\n            </Label>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        maxHeight: \"100%\",\r\n        height: 400,\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n});\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport React, { useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { SectionList, StyleSheet, View } from \"react-native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Card } from \"../../components/Containers/Card\";\r\nimport { Col } from \"../../components/Containers/Col\";\r\nimport { Header } from \"../../components/Containers/Header\";\r\nimport { Row } from \"../../components/Containers/Row\";\r\nimport { NoData } from \"../../components/Utilities/NoData\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { useGetCommunicationsQuery } from \"../../store/eurofurence.service\";\r\nimport { CommunicationRecord } from \"../../store/eurofurence.types\";\r\nimport { Query } from \"../../types\";\r\nimport { appStyles } from \"../AppStyles\";\r\n\r\nexport const PrivateMessageListScreen = () => {\r\n    const { t } = useTranslation(\"PrivateMessageList\");\r\n    const navigation = useAppNavigation(\"PrivateMessageList\");\r\n    const theme = useTheme();\r\n    const { data, refetch, isFetching }: Query<CommunicationRecord[]> = useGetCommunicationsQuery(undefined, {\r\n        refetchOnFocus: true,\r\n    });\r\n    const safe = useSafeAreaInsets();\r\n\r\n    const sectionedData = useMemo(() => {\r\n        const [unread, read] = _.partition(data, (it) => it.ReadDateTimeUtc === null);\r\n\r\n        const readSections = _.chain(read)\r\n            .orderBy([\"AuthorName\", \"SentDateTimeUtc\"], [\"asc\", \"desc\"])\r\n            .groupBy((it) => (it.AuthorName ? t(\"from\", { author: it.AuthorName?.trim() }) : t(\"from_unknown\")))\r\n            .map((messages, author) => ({\r\n                title: author,\r\n                data: messages,\r\n            }))\r\n            .value();\r\n\r\n        const unreadSections = _.isEmpty(unread)\r\n            ? []\r\n            : [\r\n                  {\r\n                      title: t(\"unread\"),\r\n                      data: unread,\r\n                  },\r\n              ];\r\n\r\n        return [...unreadSections, ...readSections];\r\n    }, [data]);\r\n\r\n    return (\r\n        <SectionList\r\n            style={[appStyles.abs, safe]}\r\n            sections={sectionedData}\r\n            keyExtractor={(item, index) => item.Id + index}\r\n            stickySectionHeadersEnabled\r\n            onRefresh={refetch}\r\n            refreshing={isFetching}\r\n            ListEmptyComponent={<NoData />}\r\n            ListHeaderComponent={<Header>Private Messages</Header>}\r\n            renderSectionHeader={({ section }) => (\r\n                <Label type={\"h2\"} style={{ padding: 20, backgroundColor: theme.background }}>\r\n                    {_.startCase(section.title)}\r\n                </Label>\r\n            )}\r\n            renderItem={({ item }) => (\r\n                <View style={{ paddingHorizontal: 20 }}>\r\n                    <Card\r\n                        key={item.Id}\r\n                        onPress={() =>\r\n                            navigation.navigate(\"PrivateMessageItem\", {\r\n                                id: item.Id,\r\n                                message: item,\r\n                            })\r\n                        }\r\n                    >\r\n                        <Row>\r\n                            <Col style={styles.title}>\r\n                                <Label variant={item.ReadDateTimeUtc === null ? \"bold\" : \"regular\"}>{item.Subject}</Label>\r\n                                <Label variant={item.ReadDateTimeUtc === null ? \"bold\" : \"regular\"}>\r\n                                    {t(\"message_item_subtitle\", {\r\n                                        status: item.ReadDateTimeUtc === null ? t(\"unread\") : t(\"read\"),\r\n                                        time: moment(item.CreatedDateTimeUtc).format(\"llll\"),\r\n                                    })}\r\n                                </Label>\r\n                            </Col>\r\n                            <View\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"center\",\r\n                                    alignItems: \"center\",\r\n                                    width: 50,\r\n                                    height: 50,\r\n                                    borderRadius: 50,\r\n                                }}\r\n                            >\r\n                                <Icon name=\"chevron-right\" size={30} />\r\n                            </View>\r\n                        </Row>\r\n                    </Card>\r\n                </View>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: \"row\",\r\n        alignItems: \"baseline\",\r\n        marginVertical: 15,\r\n        paddingHorizontal: 20,\r\n    },\r\n    title: {\r\n        flex: 6,\r\n    },\r\n    action: {\r\n        flex: 3,\r\n    },\r\n});\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport { FC, ReactNode, useMemo } from \"react\";\r\nimport { StyleProp, StyleSheet, TouchableOpacity, View, ViewStyle } from \"react-native\";\r\n\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { Label } from \"../Atoms/Label\";\r\n\r\n/**\r\n * Arguments to the tab.\r\n */\r\nexport type TabProps = {\r\n    /**\r\n     * Root container style.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * The icon to display.\r\n     */\r\n    icon: IconNames;\r\n\r\n    /**\r\n     * The name of the tab.\r\n     */\r\n    text: string;\r\n\r\n    /**\r\n     * True if to be rendered as active.\r\n     */\r\n    active?: boolean;\r\n\r\n    /**\r\n     * True if on inverted background.\r\n     */\r\n    inverted?: boolean;\r\n\r\n    /**\r\n     * If true or node, indicator will be presented over the this tab.\r\n     */\r\n    indicate?: boolean | ReactNode;\r\n\r\n    /**\r\n     * If given, invoked when the tab is pressed.\r\n     */\r\n    onPress?: () => void;\r\n};\r\n\r\n/**\r\n * Tab is an icon/caption combo intended for use in the bottom-navigation control.\r\n * @constructor\r\n */\r\nexport const Tab: FC<TabProps> = ({ style, icon, text, indicate, active = false, inverted = false, onPress }) => {\r\n    const theme = useTheme();\r\n    const color = useMemo(() => {\r\n        if (inverted) return active ? theme.invImportant : theme.invText;\r\n        else return active ? theme.secondary : theme.text;\r\n    }, [theme, active, inverted]);\r\n    const fillNotify = useMemo(() => ({ backgroundColor: theme.notification }), [theme]);\r\n\r\n    return (\r\n        <TouchableOpacity style={[styles.container, style]} onPress={onPress}>\r\n            <View style={styles.item}>\r\n                <Icon name={icon} size={24} color={color} />\r\n\r\n                {!indicate ? null : (\r\n                    <View style={styles.indicatorArea}>\r\n                        <View style={styles.indicatorLocator}>\r\n                            <View style={[styles.indicatorContent, fillNotify]}>{indicate === true ? null : indicate}</View>\r\n                        </View>\r\n                    </View>\r\n                )}\r\n            </View>\r\n            <View style={styles.item}>\r\n                <Label variant=\"middle\" color={color}>\r\n                    {text}\r\n                </Label>\r\n            </View>\r\n        </TouchableOpacity>\r\n    );\r\n};\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: \"center\",\r\n        padding: 16,\r\n    },\r\n    item: {\r\n        alignSelf: \"stretch\",\r\n        alignItems: \"center\",\r\n    },\r\n    indicatorArea: {\r\n        position: \"absolute\",\r\n        width: 24,\r\n        height: 24,\r\n    },\r\n    indicatorLocator: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        right: 0,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    indicatorContent: {\r\n        position: \"absolute\",\r\n        minWidth: 12,\r\n        minHeight: 12,\r\n        padding: 4,\r\n        borderRadius: 99999,\r\n    },\r\n});\r\n","import { noop } from \"lodash\";\r\nimport { createContext, forwardRef, ReactNode, useCallback, useContext, useImperativeHandle, useMemo, useState } from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport { Gesture, GestureDetector, TouchableWithoutFeedback } from \"react-native-gesture-handler\";\r\nimport Animated, { cancelAnimation, Easing, runOnJS, useAnimatedStyle, useSharedValue, withTiming } from \"react-native-reanimated\";\r\n\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { Activity } from \"../Atoms/Activity\";\r\nimport { Tab } from \"./Tab\";\r\n\r\n/**\r\n * Arguments to the tabs.\r\n */\r\nexport type TabsProps = {\r\n    /**\r\n     * Style used on the container of the tabs.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * If given, tabs that are layed out before the more/less button.\r\n     */\r\n    tabs: {\r\n        /**\r\n         * The icon to display.\r\n         */\r\n        icon: IconNames;\r\n\r\n        /**\r\n         * The name of the tab.\r\n         */\r\n        text: string;\r\n\r\n        /**\r\n         * True if to be rendered as active.\r\n         */\r\n        active?: boolean;\r\n\r\n        /**\r\n         * If true or node, indicator will be presented over the this tab.\r\n         */\r\n        indicate?: boolean | ReactNode;\r\n\r\n        /**\r\n         * If given, invoked when the tab is pressed.\r\n         */\r\n        onPress?: () => void;\r\n    }[];\r\n\r\n    /**\r\n     * Text to display for opening the menu.\r\n     */\r\n    textMore?: string;\r\n\r\n    /**\r\n     * Text to display for closing the menu.\r\n     */\r\n    textLess?: string;\r\n\r\n    /**\r\n     * If true or node, indicator will be presented over the more button.\r\n     */\r\n    indicateMore?: true | ReactNode;\r\n\r\n    /**\r\n     * If given, invoked when the navigator is opened by pressing more or dragging up.\r\n     */\r\n    onOpen?: () => void;\r\n\r\n    /**\r\n     * If given, invoked when the navigator is opened by pressing  less or dragging down.\r\n     */\r\n    onClose?: () => void;\r\n\r\n    /**\r\n     * The content to render in the more-area.\r\n     */\r\n    children?: ReactNode;\r\n};\r\n\r\n/**\r\n * Operations provided by the navigator.\r\n */\r\nexport type TabsRef = {\r\n    /**\r\n     * Closes the more-area with animations.\r\n     */\r\n    close(): void;\r\n\r\n    /**\r\n     * Opens the more-area with animations.\r\n     */\r\n    open(): void;\r\n\r\n    /**\r\n     * Closes the more-area immediately.\r\n     */\r\n    closeImmediately(): void;\r\n};\r\n\r\n/**\r\n * Allow components in tabs to get access to the Tab properties.\r\n */\r\nconst TabsContext = createContext<TabsRef & { isOpen: boolean }>({\r\n    close: noop,\r\n    open: noop,\r\n    closeImmediately: noop,\r\n    isOpen: false,\r\n});\r\n\r\n/**\r\n * Expose the Tabs Context as a hook\r\n */\r\nexport const useTabs = () => useContext(TabsContext);\r\n\r\n/**\r\n * A row of tabs and a \"more\" button.\r\n *\r\n * Adds a child under it containing the more-area. When opened by pressing\r\n * or dragging, translates it into view and overlays the containing view with\r\n * a semi-opaque layer.\r\n */\r\nexport const Tabs = forwardRef<TabsRef, TabsProps>(({ style, tabs, textMore = \"More\", textLess = \"Less\", indicateMore, onOpen, onClose, children }, ref) => {\r\n    // Computed styles.\r\n    const theme = useTheme();\r\n    const styleDismiss = useMemo(() => ({ backgroundColor: theme.darken }), [theme]);\r\n    const fillBackground = useMemo(() => ({ backgroundColor: theme.background }), [theme]);\r\n    const bordersDarken = useMemo(() => ({ borderColor: theme.darken }), [theme]);\r\n\r\n    // Height of the content rendered as children, state if currently open.\r\n    const [height, setHeight] = useState(425);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    // Start is used for pan gesture, offset is used to animate the actual openness.\r\n    const start = useSharedValue(0);\r\n    const offset = useSharedValue(0);\r\n\r\n    // Derive opacity from offset. If completely closed, translate out.\r\n    const dynamicDismiss = useAnimatedStyle(\r\n        () => ({\r\n            opacity: offset.value,\r\n            transform: [\r\n                {\r\n                    translateY: offset.value === 0 ? 99999 : 0,\r\n                },\r\n            ],\r\n        }),\r\n        [offset]\r\n    );\r\n\r\n    // Derive transformation from offset.\r\n    const dynamicContainer = useAnimatedStyle(\r\n        () => ({\r\n            transform: [{ translateY: -offset.value * height }],\r\n        }),\r\n        [offset, height]\r\n    );\r\n\r\n    // Opens the more area and runs the handlers.\r\n    const open = useCallback(() => {\r\n        offset.value = withTiming(1, { duration: 234, easing: Easing.out(Easing.cubic) }, (finished) => {\r\n            if (finished) {\r\n                runOnJS(setIsOpen)(true);\r\n                onOpen && runOnJS(onOpen)();\r\n            }\r\n        });\r\n    }, [offset]);\r\n\r\n    // Closes the more area and runs the handlers.\r\n    const close = useCallback(() => {\r\n        offset.value = withTiming(0, { duration: 234, easing: Easing.out(Easing.cubic) }, (finished) => {\r\n            if (finished) {\r\n                runOnJS(setIsOpen)(false);\r\n                onClose && runOnJS(onClose)();\r\n            }\r\n        });\r\n    }, [offset]);\r\n\r\n    // Closes the more area immediately and runs the handlers.\r\n    const closeImmediately = useCallback(() => {\r\n        offset.value = 0;\r\n        setIsOpen(false);\r\n        onClose && onClose();\r\n    }, [offset]);\r\n\r\n    // Handle to invoke internal mutations from outside if needed.\r\n    useImperativeHandle(ref, () => ({ open, close, closeImmediately }), [open, close, closeImmediately]);\r\n\r\n    // Enable panning the navigator to dismiss. Only available if open.\r\n    const gesture = Gesture.Pan()\r\n        .onBegin(() => {\r\n            start.value = offset.value;\r\n            cancelAnimation(offset);\r\n        })\r\n        .onUpdate((e) => {\r\n            // Update from translation.\r\n            offset.value = -e.translationY / height + start.value;\r\n            offset.value = Math.max(0, Math.min(offset.value, 1));\r\n        })\r\n        .onEnd((e) => {\r\n            // Compute threshold from direction.\r\n            const threshold = e.translationY > 0 ? 0.9 : 0.1;\r\n\r\n            // Close if smaller than threshold, otherwise open again.\r\n            const targetIsOpen = offset.value >= threshold;\r\n            const targetValue = targetIsOpen ? 1 : 0;\r\n            offset.value = withTiming(targetValue, { duration: 234, easing: Easing.out(Easing.cubic) }, (finished) => {\r\n                if (finished) {\r\n                    runOnJS(setIsOpen)(targetIsOpen);\r\n\r\n                    if (targetIsOpen) onOpen && runOnJS(onOpen)();\r\n                    else onClose && runOnJS(onClose)();\r\n                }\r\n            });\r\n        });\r\n\r\n    // TODO: Add safe area to tabs.\r\n    // TODO: Integration with back button.\r\n\r\n    return (\r\n        <TabsContext.Provider value={{ close, open, closeImmediately, isOpen: offset.value > 0 }}>\r\n            {/* Dismissal area. */}\r\n            <Animated.View style={[styles.dismiss, styleDismiss, dynamicDismiss]}>\r\n                <TouchableWithoutFeedback containerStyle={StyleSheet.absoluteFill} style={StyleSheet.absoluteFill} onPress={close} />\r\n            </Animated.View>\r\n\r\n            <GestureDetector gesture={gesture}>\r\n                <Animated.View style={dynamicContainer}>\r\n                    <View style={[styles.tabs, bordersDarken, fillBackground, style]}>\r\n                        {/* Dynamic tabs. */}\r\n                        {tabs?.map((tab, i) => <Tab key={i} icon={tab.icon} text={tab.text} active={tab.active} indicate={tab.indicate} onPress={tab.onPress} />) ?? null}\r\n\r\n                        {/* More-tab. */}\r\n                        <Tab icon={isOpen ? \"arrow-down-circle\" : \"menu\"} text={isOpen ? textLess : textMore} indicate={indicateMore} onPress={isOpen ? close : open} />\r\n\r\n                        <Activity style={styles.activity} />\r\n                    </View>\r\n\r\n                    {/* Children rendered as the expandable content. */}\r\n                    <View style={[styles.content, fillBackground]} onLayout={(e) => setHeight(e.nativeEvent.layout.height || height)}>\r\n                        {children}\r\n                    </View>\r\n                </Animated.View>\r\n            </GestureDetector>\r\n        </TabsContext.Provider>\r\n    );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        justifyContent: \"flex-end\",\r\n        overflow: \"hidden\",\r\n    },\r\n    dismiss: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    tabs: {\r\n        flexDirection: \"row\",\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n    },\r\n    activity: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        right: 0,\r\n    },\r\n    content: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: \"100%\",\r\n        right: 0,\r\n    },\r\n});\r\n","import { EventEmitter, TabActions } from \"@react-navigation/core\";\r\nimport { ParamListBase } from \"@react-navigation/native\";\r\nimport { Route } from \"@react-navigation/routers/src/types\";\r\n\r\nimport { PagesNavigationEventMap, PagesNavigationProp } from \"./PagesNavigator\";\r\nimport { TabNavigationEventMap, TabNavigationProp } from \"./TabsNavigator\";\r\n\r\n/**\r\n * On a pages or tabs navigator, performs event driven or dispatch driven navigation to a route or index.\r\n * @param navigation The target.\r\n * @param nameOrIndex The route or the index of the route in the array of all routes.\r\n */\r\nexport function navigateTab<ParamList extends ParamListBase, RouteName extends keyof ParamList>(\r\n    navigation: (PagesNavigationProp<ParamList> & EventEmitter<PagesNavigationEventMap>) | (TabNavigationProp<ParamList> & EventEmitter<TabNavigationEventMap>),\r\n    nameOrIndex: number | Route<Extract<RouteName, string>, ParamList[RouteName]>\r\n) {\r\n    const state = navigation.getState();\r\n    const target = typeof nameOrIndex === \"number\" ? state.routes[nameOrIndex] : nameOrIndex;\r\n\r\n    // Skip if invalid target.\r\n    if (!target) return;\r\n\r\n    // Emit event.\r\n    const event = navigation.emit({\r\n        type: \"tabPress\",\r\n        target: target.key,\r\n        canPreventDefault: true,\r\n    });\r\n\r\n    // If event did not prevent default, dispatch tab jump.\r\n    if (!event.defaultPrevented) {\r\n        navigation.dispatch({\r\n            // TODO: @lukashaertel pls fix\r\n            ...TabActions.jumpTo(target.name),\r\n            target: state.key,\r\n        });\r\n    }\r\n}\r\n","import { createNavigatorFactory, NavigationProp, ParamListBase, RouteProp, TabActionHelpers, TabNavigationState, TabRouter, useNavigationBuilder } from \"@react-navigation/native\";\r\nimport { FC, ReactNode, RefObject, useRef } from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\n\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { Tabs, TabsRef } from \"../Containers/Tabs\";\r\nimport { navigateTab } from \"./Common\";\r\n\r\n/**\r\n * Options for a tabs-screen.\r\n */\r\nexport type TabNavigationOptions = {\r\n    /**\r\n     * The icon to use.\r\n     */\r\n    icon: IconNames;\r\n\r\n    /**\r\n     * The title of the screen.\r\n     */\r\n    title: string;\r\n\r\n    /**\r\n     * True if this tab should indicate or a node of what it should indicate.\r\n     */\r\n    indicate?: boolean | ReactNode;\r\n};\r\n\r\nexport type TabNavigatorProps = {\r\n    /**\r\n     * Render function for the content under more.\r\n     */\r\n    more?: ReactNode | ((tabs: RefObject<TabsRef>) => ReactNode);\r\n\r\n    /**\r\n     * Text to display for opening the menu.\r\n     */\r\n    textMore?: string;\r\n\r\n    /**\r\n     * Text to display for closing the menu.\r\n     */\r\n    textLess?: string;\r\n\r\n    /**\r\n     * True if the more tab should indicate or a node of what it should indicate.\r\n     */\r\n    indicateMore?: boolean | ReactNode;\r\n\r\n    /**\r\n     * Style of the content. This is the container around all pages.\r\n     */\r\n    contentStyle?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * Style of a tab. This is on the page's individual container.\r\n     */\r\n    tabsStyle?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * The initial route.\r\n     */\r\n    initialRouteName: string;\r\n\r\n    /**\r\n     * The screens.\r\n     */\r\n    children: ReactNode;\r\n\r\n    /**\r\n     * The default screen options.\r\n     */\r\n    screenOptions: TabNavigationOptions;\r\n};\r\n\r\n/**\r\n * Events handled by the tabs emitter.\r\n */\r\nexport type TabNavigationEventMap = {\r\n    /**\r\n     * A tab was pressed.\r\n     */\r\n    tabPress: {\r\n        data: undefined;\r\n        canPreventDefault: true;\r\n    };\r\n};\r\n\r\n/**\r\n * Type of navigation when using a screen inside a tab navigator.\r\n */\r\nexport type TabNavigationProp<\r\n    ParamList extends ParamListBase,\r\n    RouteName extends keyof ParamList = keyof ParamList,\r\n    NavigatorID extends string | undefined = undefined\r\n> = NavigationProp<ParamList, RouteName, NavigatorID, TabNavigationState<ParamList>, TabNavigationOptions, TabNavigationEventMap> & TabActionHelpers<ParamList>;\r\n\r\n/**\r\n * Props to a tabs-screen.\r\n */\r\nexport type TabScreenProps<ParamList extends ParamListBase, RouteName extends keyof ParamList = keyof ParamList, NavigatorID extends string | undefined = undefined> = {\r\n    navigation: TabNavigationProp<ParamList, RouteName, NavigatorID>;\r\n    route: RouteProp<ParamList, RouteName>;\r\n};\r\n\r\nexport const TabNavigator: FC<TabNavigatorProps> = ({\r\n    more,\r\n    indicateMore,\r\n    textMore = \"More\",\r\n    textLess = \"Less\",\r\n    contentStyle,\r\n    tabsStyle,\r\n    initialRouteName,\r\n    children,\r\n    screenOptions,\r\n}) => {\r\n    // Make builder from passed arguments.\r\n    const { state, navigation, descriptors, NavigationContent } = useNavigationBuilder(TabRouter, {\r\n        children,\r\n        screenOptions,\r\n        initialRouteName,\r\n    });\r\n\r\n    const tabs = useRef<TabsRef>(null);\r\n\r\n    return (\r\n        <NavigationContent>\r\n            <View style={[styles.content, contentStyle]}>\r\n                {/* Tabbed content. */}\r\n                <View style={styles.tab}>{descriptors[state.routes[state.index].key].render()}</View>\r\n            </View>\r\n\r\n            {/* Tab bar. */}\r\n            <Tabs\r\n                style={tabsStyle}\r\n                ref={tabs}\r\n                textMore={textMore}\r\n                textLess={textLess}\r\n                indicateMore={indicateMore}\r\n                tabs={state.routes.map((route, i) => ({\r\n                    active: state.index === i,\r\n                    icon: descriptors[route.key].options.icon,\r\n                    text: descriptors[route.key].options.title,\r\n                    onPress: () => {\r\n                        // todo: @lukashaertel pls fix\r\n                        navigateTab(navigation, route);\r\n                        tabs.current?.close();\r\n                    },\r\n                    indicate: descriptors[route.key].options.indicate,\r\n                }))}\r\n            >\r\n                {typeof more === \"function\" ? more(tabs) : more}\r\n            </Tabs>\r\n        </NavigationContent>\r\n    );\r\n};\r\n\r\nexport const createTabNavigator = createNavigatorFactory(TabNavigator);\r\n\r\nconst styles = StyleSheet.create({\r\n    content: {\r\n        flex: 1,\r\n    },\r\n    tab: {\r\n        flex: 1,\r\n    },\r\n});\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { StyleSheet, TouchableOpacity, View, ViewProps, ViewStyle } from \"react-native\";\r\n\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { Label } from \"../Atoms/Label\";\r\n\r\nconst iconSize = 20;\r\n\r\n/**\r\n * Arguments to the page.\r\n */\r\nexport type PageProps = {\r\n    /**\r\n     * The icon of the page.\r\n     */\r\n    icon?: IconNames;\r\n\r\n    /**\r\n     * The caption of the page.\r\n     */\r\n    text?: string;\r\n\r\n    /**\r\n     * True if to be rendered as active.\r\n     */\r\n    active?: boolean;\r\n\r\n    /**\r\n     * True if this page should be highlighted.\r\n     */\r\n    highlight?: boolean;\r\n\r\n    /**\r\n     * If given, invoked when the tab is pressed.\r\n     */\r\n    onPress?: () => void;\r\n\r\n    /**\r\n     * Called on layout.\r\n     */\r\n    onLayout?: ViewProps[\"onLayout\"];\r\n};\r\n\r\n/**\r\n * Page is an icon or caption view intended for use in the top-navigation control.\r\n * @constructor\r\n */\r\nexport const Page: FC<PageProps> = ({ icon, text, active = false, highlight = false, onPress, onLayout }) => {\r\n    const theme = useTheme();\r\n\r\n    // The color to use for icon or text, i.e., foreground.\r\n    const colorContent = useMemo(() => (highlight ? (active ? theme.invImportant : theme.invText) : active ? theme.secondary : theme.text), [theme, active, highlight]);\r\n\r\n    // The style of the container and the item.\r\n    const styleContainer = useMemo<ViewStyle>(() => (icon ? styles.containerStatic : styles.containerGrow), [icon]);\r\n    const styleItem = useMemo<ViewStyle>(() => ({ backgroundColor: highlight ? theme.secondary : undefined }), [theme, highlight]);\r\n\r\n    return (\r\n        <View style={styleContainer} onLayout={onLayout}>\r\n            <TouchableOpacity style={styleContainer} onPress={onPress}>\r\n                {icon ? (\r\n                    <View style={[styles.item, styleItem]}>\r\n                        <Icon name={icon} size={iconSize} color={colorContent} />\r\n                    </View>\r\n                ) : (\r\n                    <View style={[styles.item, styleItem]}>\r\n                        <Label style={styles.text} color={colorContent}>\r\n                            {text ?? \" \"}\r\n                        </Label>\r\n                    </View>\r\n                )}\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n};\r\nconst styles = StyleSheet.create({\r\n    containerStatic: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        paddingVertical: 6,\r\n    },\r\n    containerGrow: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        paddingVertical: 6,\r\n        flexGrow: 1,\r\n    },\r\n    border: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n    },\r\n    item: {\r\n        alignSelf: \"stretch\",\r\n        alignItems: \"center\",\r\n        height: iconSize + 12,\r\n        justifyContent: \"center\",\r\n        padding: 6,\r\n        paddingHorizontal: 10,\r\n        borderRadius: 6,\r\n    },\r\n    text: {\r\n        fontWeight: \"bold\",\r\n    },\r\n});\r\n","import React, { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from \"react\";\r\nimport { LayoutRectangle, StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport Animated, { SharedValue, useAnimatedStyle } from \"react-native-reanimated\";\r\n\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { Page } from \"./Page\";\r\n\r\n/**\r\n * Arguments to the pages.\r\n */\r\nexport type PagesProps = {\r\n    /**\r\n     * Style used on the container of the pages.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * If given, page that are laid out.\r\n     */\r\n    pages: {\r\n        /**\r\n         * The icon to display.\r\n         */\r\n        icon?: IconNames;\r\n\r\n        /**\r\n         * The name of the page.\r\n         */\r\n        text: string;\r\n\r\n        /**\r\n         * True if to be rendered as active.\r\n         */\r\n        active?: boolean;\r\n\r\n        /**\r\n         * True if to be rendered as highlighted.\r\n         */\r\n        highlight?: boolean;\r\n\r\n        /**\r\n         * If given, invoked when the page is pressed.\r\n         */\r\n        onPress?: () => void;\r\n    }[];\r\n\r\n    /**\r\n     * Index of the page to display as active. Can be a real-valued shared value.\r\n     */\r\n    indicatorIndex?: number | SharedValue<number>;\r\n\r\n    /**\r\n     * Height of the active indicators.\r\n     */\r\n    indicatorHeight?: number;\r\n};\r\n\r\nexport type PagesRef = {\r\n    /**\r\n     * Scroll to the page index.\r\n     * @param index\r\n     */\r\n    scrollTo: (index: number) => void;\r\n};\r\n\r\n/**\r\n * A row of pages.\r\n */\r\nexport const Pages = forwardRef<PagesRef, PagesProps>(({ style, pages, indicatorIndex = -1, indicatorHeight = 4 }, ref) => {\r\n    // Computed styles.\r\n    const theme = useTheme();\r\n    const styleIndicator = useMemo<ViewStyle>(() => ({ backgroundColor: theme.secondary, height: indicatorHeight }), [theme, indicatorHeight]);\r\n    const styleBackground = useMemo<ViewStyle>(() => ({ backgroundColor: theme.background }), [theme]);\r\n    const styleDarken = useMemo<ViewStyle>(() => ({ borderColor: theme.darken }), [theme]);\r\n\r\n    // Width of all pages. Anchors (locations and widths of the individual top tabs, the anchors start out at the given length).\r\n    const [totalWidth, setTotalWidth] = useState(-1);\r\n    const [anchors, setAnchors] = useState<{ x: number; width: number }[]>([]);\r\n\r\n    // Updates the anchors.\r\n    const updateAnchors = useCallback(\r\n        (i: number, layout: LayoutRectangle & { left?: number }) => {\r\n            setAnchors((current) => {\r\n                const copy = current.slice();\r\n                copy.length = pages.length;\r\n                copy[i] = { x: layout.left ?? layout.x, width: layout.width };\r\n                return copy;\r\n            });\r\n        },\r\n        [pages]\r\n    );\r\n\r\n    const dynamicIndicator = useAnimatedStyle(() => {\r\n        // Get base values for interpolation.\r\n        const value = typeof indicatorIndex === \"number\" ? indicatorIndex : indicatorIndex.value;\r\n        const lower = Math.floor(value);\r\n        const upper = Math.ceil(value);\r\n        const anchorLower = anchors[lower];\r\n        const anchorUpper = anchors[upper];\r\n        const inf = value - lower;\r\n\r\n        // Interpolate between the valid points, use a single one if equal or at an end.\r\n        let left, width;\r\n        if (!anchorLower && !anchorUpper) [left, width] = [0, 0];\r\n        else if (!anchorUpper || anchorLower === anchorUpper) [left, width] = [anchorLower.x, anchorLower.width];\r\n        else if (!anchorLower) [left, width] = [anchorUpper.x, anchorUpper.width];\r\n        else [left, width] = [(1 - inf) * anchorLower.x + inf * anchorUpper.x, (1 - inf) * anchorLower.width + inf * anchorUpper.width];\r\n\r\n        // Transform to center, then scale by width, then translate to adequate position.\r\n        return {\r\n            transform: [{ translateX: left }, { scaleX: width }, { translateX: 0.5 }],\r\n        };\r\n    }, [anchors, indicatorIndex]);\r\n\r\n    // Reference for scrolling to tab.\r\n    const scrollView = useRef<ScrollView>(null);\r\n\r\n    // Provide handle for scrolling to the index.\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            scrollTo: (index: number) => {\r\n                // Get anchor. If not present, ignore.\r\n                const anchor = anchors[index];\r\n                if (!anchor) return;\r\n\r\n                // Scroll to it but leave space to the left of it.\r\n                const { x, width } = anchor;\r\n                scrollView.current?.scrollTo({\r\n                    x: x - (totalWidth - width) / 2,\r\n                });\r\n            },\r\n        }),\r\n        [anchors, scrollView, totalWidth]\r\n    );\r\n\r\n    return (\r\n        <View style={[styles.pages, styleDarken, styleBackground, style]}>\r\n            <ScrollView\r\n                ref={scrollView}\r\n                contentContainerStyle={styles.content}\r\n                horizontal={true}\r\n                showsHorizontalScrollIndicator={false}\r\n                onLayout={(e) => setTotalWidth(e.nativeEvent.layout.width)}\r\n            >\r\n                <Animated.View style={[styles.indicator, styleIndicator, dynamicIndicator]} />\r\n                {pages?.map((page, i) => (\r\n                    <Page\r\n                        key={i}\r\n                        icon={page.icon}\r\n                        text={page.text}\r\n                        active={page.active}\r\n                        highlight={page.highlight}\r\n                        onPress={page.onPress}\r\n                        onLayout={(e) => updateAnchors(i, e.nativeEvent.layout)}\r\n                    />\r\n                )) ?? null}\r\n            </ScrollView>\r\n        </View>\r\n    );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    pages: {\r\n        flexDirection: \"row\",\r\n        borderTopWidth: 1,\r\n        borderBottomWidth: 1,\r\n    },\r\n    content: {\r\n        minWidth: \"100%\",\r\n    },\r\n    indicator: {\r\n        position: \"absolute\",\r\n        bottom: 0,\r\n        left: 0,\r\n        width: 1,\r\n    },\r\n});\r\n","import { createNavigatorFactory, NavigationProp, ParamListBase, RouteProp, TabActionHelpers, TabNavigationState, TabRouter, useNavigationBuilder } from \"@react-navigation/native\";\r\nimport { FC, ReactNode, useEffect, useMemo, useRef, useState } from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport { Gesture, GestureDetector } from \"react-native-gesture-handler\";\r\nimport Animated, { cancelAnimation, Easing, runOnJS, useAnimatedReaction, useAnimatedStyle, useSharedValue, withTiming } from \"react-native-reanimated\";\r\n\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { Pages, PagesRef } from \"../Containers/Pages\";\r\nimport { navigateTab } from \"./Common\";\r\n\r\n/**\r\n * Options for a pages-screen.\r\n */\r\nexport type PagesNavigationOptions = {\r\n    /**\r\n     * True if this page should be highlighted.\r\n     */\r\n    highlight?: boolean;\r\n    /**\r\n     * The icon to use.\r\n     */\r\n    icon: IconNames;\r\n\r\n    /**\r\n     * The title of the screen.\r\n     */\r\n    title: string;\r\n\r\n    /**\r\n     * True if this screen should be prioritized.\r\n     */\r\n    prioritize?: boolean;\r\n};\r\n\r\n/**\r\n * Props to the pages navigator.\r\n */\r\nexport type PagesNavigatorProps = {\r\n    /**\r\n     * Style of the content. This is the container around all pages.\r\n     */\r\n    contentStyle?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * Style of a page. This is on the page's individual container.\r\n     */\r\n    pagesStyle?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * The initial route.\r\n     */\r\n    initialRouteName: string;\r\n\r\n    /**\r\n     * True if screens should be hidden when not viewed.\r\n     */\r\n    detach?: boolean;\r\n\r\n    /**\r\n     * The amount of vertical pan travel that is still allowed for swipe.\r\n     */\r\n    panSlack?: number;\r\n\r\n    /**\r\n     * The screens.\r\n     */\r\n    children: ReactNode;\r\n\r\n    /**\r\n     * The default screen options.\r\n     */\r\n    screenOptions: PagesNavigationOptions;\r\n};\r\n\r\n/**\r\n * Events handled by the pages emitter.\r\n */\r\nexport type PagesNavigationEventMap = {\r\n    /**\r\n     * A page was pressed.\r\n     */\r\n    tabPress: {\r\n        data: undefined;\r\n        canPreventDefault: true;\r\n    };\r\n};\r\n\r\n/**\r\n * Type of navigation when using a screen inside a pages navigator.\r\n */\r\nexport type PagesNavigationProp<\r\n    ParamList extends ParamListBase,\r\n    RouteName extends keyof ParamList = keyof ParamList,\r\n    NavigatorID extends string | undefined = undefined\r\n> = NavigationProp<ParamList, RouteName, NavigatorID, TabNavigationState<ParamList>, PagesNavigationOptions, PagesNavigationEventMap> & TabActionHelpers<ParamList>;\r\n\r\n/**\r\n * Props to a pages-screen.\r\n */\r\nexport type PagesScreenProps<ParamList extends ParamListBase, RouteName extends keyof ParamList = keyof ParamList, NavigatorID extends string | undefined = undefined> = {\r\n    navigation: PagesNavigationProp<ParamList, RouteName, NavigatorID>;\r\n    route: RouteProp<ParamList, RouteName>;\r\n};\r\n\r\nexport const PagesNavigator: FC<PagesNavigatorProps> = ({ contentStyle, pagesStyle, initialRouteName, detach = true, panSlack = 15, children, screenOptions }) => {\r\n    // Make builder from passed arguments.\r\n    const { state, navigation, descriptors, NavigationContent } = useNavigationBuilder(TabRouter, {\r\n        children,\r\n        screenOptions,\r\n        initialRouteName,\r\n    });\r\n\r\n    // Reference, used for scrolling to selected page in tabs.\r\n    const pages = useRef<PagesRef>(null);\r\n\r\n    // Width of the pages in total.\r\n    const [width, setWidth] = useState(-1);\r\n    const [viewing, setViewing] = useState(state.index);\r\n\r\n    // Style for arranger's width, fitting all given pages.\r\n    const arrangerWidth = useMemo(() => ({ width: `${state.routes.length * 100}%` }), [state.routes.length]);\r\n\r\n    // Target and offset used for differentially determining if set from navigation or set from pan or button press.\r\n    const offset = useSharedValue(state.index);\r\n    const start = useSharedValue(0);\r\n\r\n    // React to state and current target.\r\n    useEffect(() => {\r\n        cancelAnimation(offset);\r\n        offset.value = state.index;\r\n    }, [offset, state.index]);\r\n\r\n    // Convert translation into viewed page, which can be reacted to as a state.\r\n    useAnimatedReaction(\r\n        () => Math.max(0, Math.min(Math.round(offset.value), state.routes.length - 1)),\r\n        (index) => runOnJS(setViewing)(index),\r\n        [navigation, offset, state.routes.length]\r\n    );\r\n\r\n    // React to viewed page change by scrolling to the page in the top tabs.\r\n    useEffect(() => {\r\n        pages.current?.scrollTo(viewing);\r\n    }, [pages, viewing]);\r\n\r\n    // Style that translates the arranger, so it shows the page.\r\n    const translation = useAnimatedStyle(\r\n        () => ({\r\n            transform: [{ translateX: -width * offset.value }],\r\n        }),\r\n        [width, offset]\r\n    );\r\n\r\n    // Swipe page gesture.\r\n    const gesture = Gesture.Pan()\r\n        .activeOffsetX([-panSlack, panSlack])\r\n        .onBegin(() => {\r\n            start.value = offset.value;\r\n            cancelAnimation(offset);\r\n        })\r\n        .onUpdate((e) => {\r\n            // Update from translation.\r\n            offset.value = Math.max(0, Math.min(-e.translationX / width + start.value, state.routes.length - 1));\r\n        })\r\n        .onEnd((e) => {\r\n            const shift = e.translationX > 0 ? -0.4 : 0.4;\r\n            const index = Math.max(0, Math.min(Math.round(offset.value + shift), state.routes.length - 1));\r\n\r\n            // Animate to the end position. If able to finish, sync navigation.\r\n            offset.value = withTiming(index, { duration: 234, easing: Easing.out(Easing.cubic) }, (finished, current) => {\r\n                if (finished) {\r\n                    // The callback apparently does not work as per spec, or the closure is not capturing the proper index. Therefore\r\n                    // we want to navigate to the actual endpoint rather than the index.\r\n                    runOnJS(navigateTab)(navigation, Math.round(current as number));\r\n                }\r\n            });\r\n        });\r\n\r\n    return (\r\n        <NavigationContent>\r\n            {/* Page bar. */}\r\n            <Pages\r\n                ref={pages}\r\n                style={pagesStyle}\r\n                indicatorIndex={offset}\r\n                pages={state.routes.map((route, i) => ({\r\n                    active: viewing === i,\r\n                    highlight: descriptors[route.key].options.highlight,\r\n                    icon: descriptors[route.key].options.icon,\r\n                    text: descriptors[route.key].options.title,\r\n                    onPress: () => {\r\n                        offset.value = i;\r\n                        navigateTab(navigation, i);\r\n                    },\r\n                }))}\r\n            />\r\n\r\n            {/* Pages content. */}\r\n            <View style={[styles.content, contentStyle]} onLayout={(e) => setWidth(e.nativeEvent.layout.width || width)}>\r\n                <GestureDetector gesture={gesture}>\r\n                    <Animated.View style={[styles.arranger, arrangerWidth, translation]}>\r\n                        {state.routes.map((route, i) => (\r\n                            <View key={route.key} style={styles.page}>\r\n                                {shouldSkipChild(viewing, i, detach) ? null : descriptors[route.key].render()}\r\n                            </View>\r\n                        ))}\r\n                    </Animated.View>\r\n                </GestureDetector>\r\n            </View>\r\n        </NavigationContent>\r\n    );\r\n};\r\n\r\nexport const createPagesNavigator = createNavigatorFactory(PagesNavigator);\r\n\r\nconst styles = StyleSheet.create({\r\n    content: {\r\n        flex: 1,\r\n        overflow: \"hidden\",\r\n    },\r\n    arranger: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        flexDirection: \"row\",\r\n        alignItems: \"stretch\",\r\n    },\r\n    page: {\r\n        flex: 1,\r\n    },\r\n});\r\n\r\nconst shouldSkipChild = (index: number, i: number, detach: boolean) => {\r\n    if (!detach) return false;\r\n    switch (i) {\r\n        case index - 1:\r\n        case index:\r\n        case index + 1:\r\n            return false;\r\n        default:\r\n            return true;\r\n    }\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport { Section, SectionProps } from \"../../components/Atoms/Section\";\r\n\r\nexport type DealerSectionProps = SectionProps;\r\n\r\nexport const DealerSection: FC<DealerSectionProps> = ({ title, subtitle, icon }) => {\r\n    return <Section title={title} subtitle={subtitle} icon={icon} />;\r\n};\r\n","import { FC, ReactNode, useCallback } from \"react\";\r\nimport { SectionList, StyleSheet, View } from \"react-native\";\r\n\r\nimport { useSynchronizer } from \"../../components/Synchronization/SynchronizationProvider\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { DealerDetails } from \"../../store/eurofurence.types\";\r\nimport { DealerCard } from \"./DealerCard\";\r\nimport { DealerSection, DealerSectionProps } from \"./DealerSection\";\r\n\r\nexport type DealersSectionedListItem = DealerSectionProps & {\r\n    data: DealerDetails[];\r\n};\r\n\r\n/**\r\n * The properties to the component.\r\n */\r\nexport type DealersSectionedListGenericProps = {\r\n    leader?: ReactNode;\r\n    dealersGroups: DealersSectionedListItem[];\r\n    trailer?: ReactNode;\r\n};\r\n\r\nexport const DealersSectionedListGeneric: FC<DealersSectionedListGenericProps> = ({ leader, dealersGroups, trailer }) => {\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    const navigateTo = useCallback((dealer) => navigation.push(\"Dealer\", { id: dealer.Id }), [navigation]);\r\n    const synchronizer = useSynchronizer();\r\n    return (\r\n        <View style={StyleSheet.absoluteFill}>\r\n            <SectionList\r\n                refreshing={synchronizer.isSynchronizing}\r\n                onRefresh={synchronizer.synchronize}\r\n                style={styles.list}\r\n                contentContainerStyle={styles.container}\r\n                scrollEnabled={true}\r\n                ListHeaderComponent={<>{leader}</>}\r\n                ListFooterComponent={<>{trailer}</>}\r\n                sections={dealersGroups}\r\n                keyExtractor={(item) => item.Id}\r\n                initialNumToRender={5}\r\n                maxToRenderPerBatch={5}\r\n                renderSectionHeader={({ section }) => <DealerSection title={section.title} subtitle={section.subtitle} icon={section.icon} />}\r\n                renderItem={(entry: { item: DealerDetails }) => <DealerCard key={entry.item.Id} dealer={entry.item} onPress={() => navigateTo(entry.item)} />}\r\n            />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    list: {\r\n        flex: 1,\r\n    },\r\n    container: {\r\n        paddingHorizontal: 20,\r\n        paddingBottom: 100,\r\n    },\r\n});\r\n","import { CompositeScreenProps } from \"@react-navigation/core\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { chain } from \"lodash\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { PagesScreenProps } from \"../../components/Navigators/PagesNavigator\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { conName } from \"../../configuration\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { dealersSelectors } from \"../../store/eurofurence.selectors\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { DealersSectionedListGeneric } from \"./DealersSectionedListGeneric\";\r\nimport { DealersTabsScreenParamsList } from \"./DealersTabsScreen\";\r\n\r\n/**\r\n * Params handled by the screen in route.\r\n */\r\nexport type DealersListAllScreenParams = object;\r\n\r\n/**\r\n * The properties to the screen as a component.\r\n */\r\nexport type DealersListAllScreenProps =\r\n    // Route carrying from dealers tabs screen at \"All\", own navigation via own parameter list.\r\n    CompositeScreenProps<\r\n        PagesScreenProps<DealersTabsScreenParamsList, \"All\">,\r\n        PagesScreenProps<DealersTabsScreenParamsList> & TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>\r\n    >;\r\n\r\nexport const DealersListAllScreen: FC<DealersListAllScreenProps> = () => {\r\n    const { t } = useTranslation(\"Dealers\");\r\n\r\n    // Get the day. Use it to resolve events to display.\r\n    const dealers = useAppSelector(dealersSelectors.selectAll);\r\n    const dealersGroups = useMemo(() => {\r\n        return chain(dealers)\r\n            .orderBy(\"FullName\")\r\n            .groupBy((dealer) => dealer.FullName.substring(0, 1).toUpperCase())\r\n            .entries()\r\n            .map(([firstLetter, events]) => ({\r\n                title: firstLetter,\r\n                icon: \"bookmark\" as IconNames,\r\n                data: events,\r\n            }))\r\n            .value();\r\n    }, [t, dealers]);\r\n\r\n    return (\r\n        <DealersSectionedListGeneric\r\n            dealersGroups={dealersGroups}\r\n            leader={\r\n                <Label type=\"h1\" variant=\"middle\" mt={30}>\r\n                    {t(\"dealers_at_convention\", { convention: conName })}\r\n                </Label>\r\n            }\r\n        />\r\n    );\r\n};\r\n","import { CompositeScreenProps } from \"@react-navigation/core\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { chain } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { PagesScreenProps } from \"../../components/Navigators/PagesNavigator\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectDealersByDayName } from \"../../store/eurofurence.selectors\";\r\nimport { AttendanceDay } from \"../../store/eurofurence.types\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { DealersSectionedListGeneric } from \"./DealersSectionedListGeneric\";\r\nimport { DealersTabsScreenParamsList } from \"./DealersTabsScreen\";\r\n\r\n/**\r\n * Params handled by the screen in route.\r\n */\r\nexport type DealersListByDayScreenParams = object;\r\n\r\n/**\r\n * The properties to the screen as a component.\r\n */\r\nexport type DealersListByDayScreenProps =\r\n    // Route carrying from dealers tabs screen at any of the day names, own navigation via own parameter list.\r\n    CompositeScreenProps<\r\n        PagesScreenProps<DealersTabsScreenParamsList, \"Thu\" | \"Fri\" | \"Sat\">,\r\n        PagesScreenProps<DealersTabsScreenParamsList> & TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>\r\n    >;\r\n\r\nexport const DealersListByDayScreen: FC<DealersListByDayScreenProps> = ({ route }) => {\r\n    const { t } = useTranslation(\"Dealers\");\r\n\r\n    // Get the day. Use it to resolve events to display.\r\n    // TODO: @lukashaertel pls fix\r\n    const day = route.name.toLowerCase() as AttendanceDay;\r\n    const dealers = useAppSelector((state) => selectDealersByDayName(state, day));\r\n    const dealersGroups = useMemo(() => {\r\n        return chain(dealers)\r\n            .orderBy(\"FullName\")\r\n            .groupBy((dealer) => dealer.FullName.substring(0, 1).toUpperCase())\r\n            .entries()\r\n            .map(([firstLetter, events]) => ({\r\n                title: firstLetter,\r\n                icon: \"bookmark\" as IconNames,\r\n                data: events,\r\n            }))\r\n            .value();\r\n    }, [t, dealers]);\r\n\r\n    // Formatted lead content.\r\n    const lead = useMemo(\r\n        () =>\r\n            // Match thursday.\r\n            (day === \"thu\" && t(\"dealers_on_day\", { day: moment().day(4).format(\"dddd\") })) ||\r\n            // Match friday.\r\n            (day === \"fri\" && t(\"dealers_on_day\", { day: moment().day(5).format(\"dddd\") })) ||\r\n            // Match saturday.\r\n            (day === \"sat\" && t(\"dealers_on_day\", { day: moment().day(6).format(\"dddd\") })) ||\r\n            // Match saturday.\r\n            t(\"dealers_on_this_day\"),\r\n        [t, day]\r\n    );\r\n\r\n    return (\r\n        <DealersSectionedListGeneric\r\n            dealersGroups={dealersGroups}\r\n            leader={\r\n                <Label type=\"h1\" variant=\"middle\" mt={30}>\r\n                    {lead}\r\n                </Label>\r\n            }\r\n        />\r\n    );\r\n};\r\n","import { CompositeScreenProps } from \"@react-navigation/core\";\r\nimport { NavigatorScreenParams } from \"@react-navigation/native\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport moment from \"moment\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { createPagesNavigator, PagesScreenProps } from \"../../components/Navigators/PagesNavigator\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { eventDaysSelectors } from \"../../store/eurofurence.selectors\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { DealersListAllScreen, DealersListAllScreenParams } from \"./DealersListAllScreen\";\r\nimport { DealersListByDayScreen, DealersListByDayScreenParams } from \"./DealersListByDayScreen\";\r\n\r\n/**\r\n * Available routes.\r\n */\r\nexport type DealersTabsScreenParamsList = {\r\n    All: DealersListAllScreenParams;\r\n    Thu: DealersListByDayScreenParams;\r\n    Fri: DealersListByDayScreenParams;\r\n    Sat: DealersListByDayScreenParams;\r\n};\r\n\r\n/**\r\n * Create an instance of the pages-navigator with the provided routes.\r\n */\r\nconst DealersTabsScreenNavigator = createPagesNavigator<DealersTabsScreenParamsList>();\r\n\r\n/**\r\n * Params handled by the screen in route. Delegated parameters for the days. TODO: Verify.\r\n */\r\nexport type DealersTabsScreenParams = NavigatorScreenParams<DealersTabsScreenParamsList>;\r\n\r\n/**\r\n * The properties to the screen as a component.\r\n */\r\nexport type DealersTabsScreenProps = CompositeScreenProps<TabScreenProps<ScreenAreasParamsList, \"Events\">, StackScreenProps<ScreenStartParamsList>>;\r\n\r\n/**\r\n * The properties to the screen as a component.\r\n */\r\nexport type EventsTabsScreenProps =\r\n    // Route carrying from area screen at \"Dealers\", own navigation via own parameter list.\r\n    CompositeScreenProps<\r\n        TabScreenProps<ScreenAreasParamsList, \"Dealers\">,\r\n        PagesScreenProps<DealersTabsScreenParamsList> & TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>\r\n    >;\r\n\r\nexport const DealersTabsScreen: FC<DealersTabsScreenProps> = () => {\r\n    const { t } = useTranslation(\"Dealers\");\r\n    const [now] = useNow();\r\n\r\n    // Use days to resolve actual dates.\r\n    const days = useAppSelector(eventDaysSelectors.selectAll);\r\n\r\n    // Formatted names.\r\n    const { thu, fri, sat } = useMemo(\r\n        () => ({\r\n            thu: moment().day(4).format(\"ddd\"),\r\n            fri: moment().day(5).format(\"ddd\"),\r\n            sat: moment().day(6).format(\"ddd\"),\r\n        }),\r\n        [t]\r\n    );\r\n\r\n    // Returns the flags if this is the current day.\r\n    const { isThu, isFri, isSat } = useMemo(() => {\r\n        const thuDate = days.map((day) => moment(day.Date)).find((moment) => moment.day() === 4);\r\n        const friDate = days.map((day) => moment(day.Date)).find((moment) => moment.day() === 5);\r\n        const satDate = days.map((day) => moment(day.Date)).find((moment) => moment.day() === 6);\r\n\r\n        return {\r\n            isThu: thuDate?.isSame(now, \"day\") ?? false,\r\n            isFri: friDate?.isSame(now, \"day\") ?? false,\r\n            isSat: satDate?.isSame(now, \"day\") ?? false,\r\n        };\r\n    }, [now]);\r\n\r\n    // Compute the safe area.\r\n    const top = useSafeAreaInsets()?.top;\r\n    const pagesStyle = useMemo(() => ({ paddingTop: top }), [top]);\r\n\r\n    // If the screens require too much performance we should set detach to true again.\r\n    return (\r\n        <DealersTabsScreenNavigator.Navigator pagesStyle={pagesStyle} initialRouteName=\"All\">\r\n            <DealersTabsScreenNavigator.Screen name=\"All\" options={{ title: t(\"all\") }} component={DealersListAllScreen} />\r\n            <DealersTabsScreenNavigator.Screen name=\"Thu\" options={{ title: thu, highlight: isThu }} component={DealersListByDayScreen} />\r\n            <DealersTabsScreenNavigator.Screen name=\"Fri\" options={{ title: fri, highlight: isFri }} component={DealersListByDayScreen} />\r\n            <DealersTabsScreenNavigator.Screen name=\"Sat\" options={{ title: sat, highlight: isSat }} component={DealersListByDayScreen} />\r\n        </DealersTabsScreenNavigator.Navigator>\r\n    );\r\n};\r\n","import BottomSheet, { BottomSheetScrollView } from \"@gorhom/bottom-sheet\";\r\nimport { debounce } from \"lodash\";\r\nimport { FC, useEffect, useMemo, useRef } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nimport { useThemeBackground } from \"../../context/Theme\";\r\nimport { EventDetails } from \"../../store/eurofurence.types\";\r\nimport { EventContent } from \"./EventContent\";\r\n\r\ntype EventActionsSheetProps = {\r\n    event: EventDetails | null;\r\n    onClose?: () => void;\r\n};\r\n\r\nexport const EventActionsSheet: FC<EventActionsSheetProps> = ({ event, onClose }) => {\r\n    const sheetRef = useRef<BottomSheet>(null);\r\n    const styleBackground = useThemeBackground(\"background\");\r\n    const styleHandle = useThemeBackground(\"inverted\");\r\n\r\n    const close = useMemo(() => (onClose ? debounce(onClose, 100) : undefined), [onClose]);\r\n\r\n    useEffect(() => {\r\n        if (event) {\r\n            sheetRef.current?.snapToIndex(0);\r\n        } else {\r\n            sheetRef.current?.close();\r\n        }\r\n    }, [sheetRef, event]);\r\n\r\n    return (\r\n        <BottomSheet\r\n            backgroundStyle={styleBackground}\r\n            handleStyle={styles.handle}\r\n            handleIndicatorStyle={styleHandle}\r\n            ref={sheetRef}\r\n            snapPoints={[\"25%\", \"50%\", \"75%\"]}\r\n            index={-1}\r\n            enablePanDownToClose\r\n            onClose={close}\r\n        >\r\n            <BottomSheetScrollView style={styles.content}>{!event ? null : <EventContent event={event} />}</BottomSheetScrollView>\r\n        </BottomSheet>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    handle: {\r\n        borderTopLeftRadius: 15,\r\n        borderTopRightRadius: 15,\r\n    },\r\n    content: {\r\n        paddingHorizontal: 30,\r\n        paddingBottom: 100,\r\n    },\r\n});\r\n","import { useCallback, useMemo } from \"react\";\r\n\r\nimport { EventRecord } from \"../store/eurofurence.types\";\r\nimport { useNow } from \"./useNow\";\r\n\r\n/**\r\n * Uses a boolean that is true if the passed event is happening.\r\n * @param event The event, start and end need to be present.\r\n */\r\nexport const useEventIsHappening = (event: Pick<EventRecord, \"StartDateTimeUtc\" | \"EndDateTimeUtc\">) => {\r\n    const [now] = useNow();\r\n    return useMemo(() => now.isBetween(event.StartDateTimeUtc, event.EndDateTimeUtc), [now, event]);\r\n};\r\n\r\n/**\r\n * Uses a boolean that is true if the passed event is done.\r\n * @param event The event, start and end need to be present.\r\n */\r\nexport const useEventIsDone = (event: Pick<EventRecord, \"EndDateTimeUtc\">) => {\r\n    const [now] = useNow();\r\n    return useMemo(() => now.isAfter(event.EndDateTimeUtc), [now, event]);\r\n};\r\n\r\n/**\r\n * Returns a function that can check if a passed event is happening. This can be\r\n * used for example as a filter.\r\n */\r\nexport const useIsEventHappening = () => {\r\n    const [now] = useNow();\r\n    return useCallback((event: Pick<EventRecord, \"StartDateTimeUtc\" | \"EndDateTimeUtc\">) => now.isBetween(event.StartDateTimeUtc, event.EndDateTimeUtc), [now]);\r\n};\r\n\r\n/**\r\n * Returns a function that can check if a passed event is done. This can be used\r\n * for example as a filter.\r\n */\r\nexport const useIsEventDone = () => {\r\n    const [now] = useNow();\r\n    return useCallback((event: Pick<EventRecord, \"StartDateTimeUtc\" | \"EndDateTimeUtc\">) => now.isAfter(event.EndDateTimeUtc), [now]);\r\n};\r\n","import { FC, useEffect, useMemo } from \"react\";\r\nimport { ColorValue, StyleSheet, ViewStyle } from \"react-native\";\r\nimport Animated, { cancelAnimation, useAnimatedStyle, useSharedValue, withDelay, withRepeat, withSequence, withTiming } from \"react-native-reanimated\";\r\n\r\nimport { useTheme } from \"../../context/Theme\";\r\n\r\nexport type IndicatorProps = {\r\n    color: ColorValue;\r\n};\r\n\r\nexport const Indicator: FC<IndicatorProps> = ({ color }) => {\r\n    const theme = useTheme();\r\n    const at = useSharedValue(0);\r\n\r\n    useEffect(() => {\r\n        at.value = 0;\r\n        at.value = withRepeat(\r\n            withSequence(\r\n                // Animate in.\r\n                withDelay(1000, withTiming(1, { duration: 1000 })),\r\n                // Animate out.\r\n                withDelay(1000, withTiming(0, { duration: 1000 }))\r\n            ),\r\n            -1\r\n        );\r\n\r\n        return () => cancelAnimation(at);\r\n    }, []);\r\n\r\n    const styleIndicator = useMemo<ViewStyle>(() => ({ backgroundColor: color }), [theme]);\r\n\r\n    const dynamicIndicator = useAnimatedStyle(\r\n        () => ({\r\n            opacity: at.value,\r\n        }),\r\n        [at]\r\n    );\r\n\r\n    return <Animated.View style={[styles.indicator, styleIndicator, dynamicIndicator]} />;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    indicator: {\r\n        width: 4,\r\n        height: 4,\r\n        borderRadius: 4,\r\n    },\r\n});\r\n","import Icon from \"@expo/vector-icons/MaterialCommunityIcons\";\r\nimport React, { FC, memo, ReactNode, useMemo } from \"react\";\r\nimport { ColorValue, ImageBackground, ImageSourcePropType, StyleSheet, TouchableOpacity, View, ViewStyle } from \"react-native\";\r\n\r\nimport { Indicator } from \"../../components/Atoms/Indicator\";\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Row } from \"../../components/Containers/Row\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { appStyles } from \"../AppStyles\";\r\n\r\nconst glyphIconSize = 90;\r\nconst badgeIconSize = 20;\r\n\r\nexport type EventCardProps = {\r\n    badges?: IconNames[];\r\n    glyph?: IconNames;\r\n    pre: ReactNode;\r\n    poster?: ImageSourcePropType;\r\n    title?: string;\r\n    subtitle?: string;\r\n    tag?: string;\r\n    happening: boolean;\r\n    done: boolean;\r\n    onPress?: () => void;\r\n    onLongPress?: () => void;\r\n};\r\n\r\nexport const EventCardContent: FC<EventCardProps> = memo(({ badges, glyph, pre, poster, title, subtitle, tag, happening, done, onPress, onLongPress }) => {\r\n    const theme = useTheme();\r\n    const styleContainer = useMemo<ViewStyle>(() => ({ backgroundColor: theme.background }), [theme]);\r\n    const stylePre = useMemo<ViewStyle>(() => ({ backgroundColor: done ? theme.darken : theme.primary }), [done, theme]);\r\n    const styleBadgeFrame = useMemo<ViewStyle>(() => ({ backgroundColor: theme.secondary }), [theme]);\r\n    const colorBadge = useMemo<ColorValue>(() => theme.white, [theme]);\r\n    const colorGlyph = useMemo<ColorValue>(() => theme.lighten, [theme]);\r\n    return (\r\n        <TouchableOpacity style={[styles.container, appStyles.shadow, styleContainer]} onPress={onPress} onLongPress={onLongPress}>\r\n            <View style={[styles.pre, stylePre]}>\r\n                {!glyph ? null : (\r\n                    <View style={styles.glyphContainer}>\r\n                        <Icon style={styles.glyph} name={glyph} size={glyphIconSize} color={colorGlyph} />\r\n                    </View>\r\n                )}\r\n                {pre}\r\n            </View>\r\n\r\n            {poster ? (\r\n                <View style={styles.mainPoster}>\r\n                    <ImageBackground source={poster} resizeMode={\"cover\"} style={StyleSheet.absoluteFill}>\r\n                        <View style={styles.tagArea2}>\r\n                            <View style={styles.tagAreaInner}>\r\n                                <Label style={styles.tag} type=\"regular\" color=\"white\" ellipsizeMode=\"head\" numberOfLines={1}>\r\n                                    {title} {subtitle}\r\n                                </Label>\r\n                                {tag && (\r\n                                    <Label style={styles.tag} type=\"regular\" color=\"white\" ellipsizeMode=\"head\" numberOfLines={1}>\r\n                                        {tag}\r\n                                    </Label>\r\n                                )}\r\n                            </View>\r\n                        </View>\r\n                    </ImageBackground>\r\n                </View>\r\n            ) : (\r\n                <View style={styles.mainText}>\r\n                    <Row>\r\n                        <Label style={styles.title} type=\"h3\">\r\n                            {title}\r\n                        </Label>\r\n\r\n                        {badges?.map((icon) => (\r\n                            <View key={icon} style={[styles.badgeFrame, styleBadgeFrame]}>\r\n                                <Icon name={icon} color={colorBadge} size={badgeIconSize} />\r\n                            </View>\r\n                        )) ?? null}\r\n                    </Row>\r\n                    <Label type=\"h4\" variant=\"narrow\">\r\n                        {subtitle}\r\n                    </Label>\r\n                    <Label style={styles.tag} type=\"regular\" ellipsizeMode=\"head\" numberOfLines={1}>\r\n                        {tag}\r\n                    </Label>\r\n                </View>\r\n            )}\r\n\r\n            {!happening ? null : (\r\n                <View style={styles.indicator}>\r\n                    <Indicator color={theme.white} />\r\n                </View>\r\n            )}\r\n        </TouchableOpacity>\r\n    );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        minHeight: 80,\r\n        marginVertical: 15,\r\n        borderRadius: 16,\r\n        overflow: \"hidden\",\r\n        flexDirection: \"row\",\r\n    },\r\n    glyphContainer: {\r\n        position: \"absolute\",\r\n        left: -20,\r\n        top: -20,\r\n        right: -20,\r\n        bottom: -20,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    glyph: {\r\n        opacity: 0.25,\r\n        transform: [{ rotate: \"-15deg\" }],\r\n    },\r\n    badgeFrame: {\r\n        borderRadius: 20,\r\n        aspectRatio: 1,\r\n        padding: 4,\r\n        marginLeft: 8,\r\n    },\r\n    pre: {\r\n        overflow: \"hidden\",\r\n        width: 70,\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    mainPoster: {\r\n        height: 120,\r\n        flex: 1,\r\n        padding: 16,\r\n    },\r\n    mainText: {\r\n        flex: 1,\r\n        padding: 16,\r\n    },\r\n    title: {\r\n        flex: 1,\r\n    },\r\n    subtitleArea: {\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n    },\r\n    tag: {\r\n        textAlign: \"right\",\r\n    },\r\n    tagArea: {\r\n        position: \"absolute\",\r\n        left: 0,\r\n        bottom: 0,\r\n        right: 0,\r\n        backgroundColor: \"#000000A0\",\r\n        paddingLeft: 16,\r\n        paddingBottom: 16,\r\n        paddingRight: 16,\r\n        paddingTop: 32,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"flex-end\",\r\n    },\r\n    tagArea2: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"flex-end\",\r\n        alignContent: \"flex-start\",\r\n        alignItems: \"stretch\",\r\n\r\n        height: \"100%\",\r\n    },\r\n    tagAreaInner: {\r\n        backgroundColor: \"#000000A0\",\r\n        padding: 8,\r\n        justifyContent: \"space-between\",\r\n        flexDirection: \"row\",\r\n        flexWrap: \"wrap\",\r\n    },\r\n    indicator: {\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        padding: 14,\r\n    },\r\n});\r\n","import moment from \"moment\";\r\nimport React, { FC, ReactNode, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Col } from \"../../components/Containers/Col\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { useEventIsDone, useEventIsHappening } from \"../../hooks/useEventProperties\";\r\nimport { EventDetails } from \"../../store/eurofurence.types\";\r\nimport { EventCardContent } from \"./EventCardContent\";\r\n\r\nexport type EventCardProps = {\r\n    type?: \"duration\" | \"time\";\r\n    event: EventDetails;\r\n    onPress?: () => void;\r\n    onLongPress?: () => void;\r\n};\r\n\r\nexport const EventCard: FC<EventCardProps> = ({ type = \"duration\", event, onPress, onLongPress }) => {\r\n    const { t } = useTranslation(\"Event\");\r\n    const theme = useTheme();\r\n\r\n    // Resolve event statuses.\r\n    const happening = useEventIsHappening(event);\r\n    const done = useEventIsDone(event);\r\n\r\n    // Renders the override or default. The override will receive if it needs to\r\n    // render on inverted color, i.e., background.\r\n    const pre = useMemo<ReactNode>(() => {\r\n        // Convert event start and duration to readable.\r\n        const start = moment(event.StartDateTimeUtc);\r\n        const duration = moment.duration(event.Duration);\r\n\r\n        const day = start.format(\"ddd\");\r\n        const time = start.format(\"LT\");\r\n        const runtime = duration.asMinutes() > 59 ? duration.asHours() + \"h\" : duration.asMinutes() + \"m\";\r\n\r\n        if (type === \"duration\") {\r\n            // Return simple label with duration text.\r\n            return (\r\n                <Col type=\"center\">\r\n                    <Label type=\"caption\" color={done ? \"important\" : \"white\"}>\r\n                        {time}\r\n                    </Label>\r\n                    <Label color={done ? \"important\" : \"white\"}>{runtime}</Label>\r\n                </Col>\r\n            );\r\n        } else {\r\n            return (\r\n                <Col type=\"center\">\r\n                    <Label type=\"caption\" color={done ? \"important\" : \"white\"}>\r\n                        {time}\r\n                    </Label>\r\n                    <Label color={done ? \"important\" : \"white\"}>{day}</Label>\r\n                </Col>\r\n            );\r\n        }\r\n    }, [t, type, event, done, theme]);\r\n\r\n    return (\r\n        <EventCardContent\r\n            badges={event.Badges}\r\n            glyph={event.Glyph}\r\n            pre={pre}\r\n            poster={event.Banner ? { uri: event.Banner.FullUrl } : undefined}\r\n            title={event.Title}\r\n            subtitle={event.SubTitle}\r\n            tag={event.ConferenceRoom?.ShortName ?? event.ConferenceRoom?.Name}\r\n            happening={happening}\r\n            done={done}\r\n            onPress={onPress}\r\n            onLongPress={onLongPress}\r\n        />\r\n    );\r\n};\r\n","import { FC } from \"react\";\r\n\r\nimport { Section, SectionProps } from \"../../components/Atoms/Section\";\r\n\r\nexport type EventSectionProps = SectionProps;\r\n\r\nexport const EventSection: FC<EventSectionProps> = ({ title, subtitle, icon }) => {\r\n    return <Section title={title} subtitle={subtitle} icon={icon} />;\r\n};\r\n","import { FC, ReactNode, useCallback } from \"react\";\r\nimport { SectionList, StyleSheet, Vibration } from \"react-native\";\r\n\r\nimport { useSynchronizer } from \"../../components/Synchronization/SynchronizationProvider\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { EventDetails } from \"../../store/eurofurence.types\";\r\nimport { EventCard } from \"./EventCard\";\r\nimport { EventSection, EventSectionProps } from \"./EventSection\";\r\n\r\nexport type EventsSectionedListItem = EventSectionProps & {\r\n    data: EventDetails[];\r\n};\r\n\r\n/**\r\n * The properties to the component.\r\n */\r\nexport type EventsSectionedListGenericProps = {\r\n    leader?: ReactNode;\r\n    eventsGroups: EventsSectionedListItem[];\r\n    select?: (event: EventDetails) => void;\r\n    empty?: ReactNode;\r\n    trailer?: ReactNode;\r\n    cardType?: \"duration\" | \"time\";\r\n};\r\n\r\nexport const EventsSectionedListGeneric: FC<EventsSectionedListGenericProps> = ({ leader, eventsGroups, select, empty, trailer, cardType = \"duration\" }) => {\r\n    const navigation = useAppNavigation(\"Areas\");\r\n\r\n    // Prepare navigation callback. This clones the respective parameters, as otherwise illegal mutation will occur.\r\n    const navigateTo = useCallback((event) => navigation.push(\"Event\", { id: event.Id }), [navigation]);\r\n    const synchronizer = useSynchronizer();\r\n\r\n    return (\r\n        <SectionList\r\n            refreshing={synchronizer.isSynchronizing}\r\n            onRefresh={synchronizer.synchronize}\r\n            style={styles.list}\r\n            contentContainerStyle={styles.container}\r\n            scrollEnabled={true}\r\n            ListHeaderComponent={<>{leader}</>}\r\n            ListFooterComponent={<>{trailer}</>}\r\n            ListEmptyComponent={<>{empty}</>}\r\n            sections={eventsGroups}\r\n            keyExtractor={(item) => item.Id}\r\n            initialNumToRender={5}\r\n            maxToRenderPerBatch={5}\r\n            renderSectionHeader={({ section }) => <EventSection title={section.title} subtitle={section.subtitle} icon={section.icon} />}\r\n            renderItem={(entry: { item: EventDetails }) => (\r\n                <EventCard\r\n                    key={entry.item.Id}\r\n                    event={entry.item}\r\n                    type={cardType}\r\n                    onPress={() => navigateTo(entry.item)}\r\n                    onLongPress={() => {\r\n                        Vibration.vibrate(50);\r\n                        select && select(entry.item);\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    list: {\r\n        flex: 1,\r\n    },\r\n    container: {\r\n        paddingHorizontal: 20,\r\n        paddingBottom: 100,\r\n    },\r\n});\r\n","import { createContext, FC, useContext, useEffect, useMemo, useState } from \"react\";\r\n\r\nimport { useAppSelector } from \"../../store\";\r\nimport { eventsSelector } from \"../../store/eurofurence.selectors\";\r\nimport { EventDetails } from \"../../store/eurofurence.types\";\r\n\r\nexport type EventsTabsContextType = {\r\n    selected: null | EventDetails;\r\n    setSelected: (event: null | EventDetails) => void;\r\n    search: string;\r\n    setSearch: (results: string) => void;\r\n    results: null | EventDetails[];\r\n    hasResults: boolean;\r\n};\r\n\r\nexport const EventsTabsContext = createContext<EventsTabsContextType>({\r\n    selected: null,\r\n    setSelected: () => undefined,\r\n    search: \"\",\r\n    setSearch: () => undefined,\r\n    results: null,\r\n    hasResults: false,\r\n});\r\n\r\nexport const EventsTabsContextProvider: FC = ({ children }) => {\r\n    // Source of all events.\r\n    const events = useAppSelector(eventsSelector.selectAll);\r\n\r\n    // State of detail view selection.\r\n    const [selected, setSelected] = useState<null | EventDetails>(null);\r\n\r\n    // State of query and results.\r\n    const [search, setSearch] = useState<string>(\"\");\r\n    const [results, setResults] = useState<null | EventDetails[]>(null);\r\n\r\n    // Check if results are not empty.\r\n    const hasResults = useMemo(() => (results?.length ?? 0) > 0, [results?.length]);\r\n\r\n    // Perform search.\r\n    useEffect(() => {\r\n        if (search.length < 3) {\r\n            setResults(null);\r\n            return;\r\n        }\r\n\r\n        const handle = setTimeout(() => {\r\n            const searchActual = search.toLowerCase().trim();\r\n            const results = events.filter(\r\n                (event) =>\r\n                    event.Title.toLowerCase().includes(searchActual) ||\r\n                    event.SubTitle?.toLowerCase()?.includes(searchActual) ||\r\n                    event.Abstract?.toLowerCase()?.includes(searchActual) ||\r\n                    event.PanelHosts?.toLowerCase()?.includes(searchActual)\r\n            );\r\n            setResults(results);\r\n        }, 100);\r\n\r\n        return () => clearTimeout(handle);\r\n    }, [events, search]);\r\n\r\n    const context = useMemo<EventsTabsContextType>(\r\n        () => ({\r\n            selected,\r\n            setSelected,\r\n            search,\r\n            setSearch,\r\n            results,\r\n            hasResults,\r\n        }),\r\n        [selected, setSelected, search, setSearch, results, hasResults]\r\n    );\r\n\r\n    return <EventsTabsContext.Provider value={context}>{children}</EventsTabsContext.Provider>;\r\n};\r\n\r\nexport const useEventsTabsContext = () => useContext(EventsTabsContext);\r\n","import { CompositeScreenProps } from \"@react-navigation/core\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { chain, partition } from \"lodash\";\r\nimport { FC, memo, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { PagesScreenProps } from \"../../components/Navigators/PagesNavigator\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { eventDaysSelectors, selectEventsByDay } from \"../../store/eurofurence.selectors\";\r\nimport { EventDetails, PartOfDay } from \"../../store/eurofurence.types\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { EventsSectionedListGeneric } from \"./EventsSectionedListGeneric\";\r\nimport { useEventsTabsContext } from \"./EventsTabsContext\";\r\nimport { EventsTabsScreenParamsList } from \"./EventsTabsScreen\";\r\n\r\n/**\r\n * Params handled by the screen in route.\r\n */\r\nexport type EventsListByDayScreenParams = object;\r\n\r\n/**\r\n * The properties to the screen as a component.\r\n */\r\nexport type EventsListByDayScreenProps =\r\n    // Route carrying from events tabs screen at \"Day\", own navigation via own parameter list.\r\n    CompositeScreenProps<\r\n        PagesScreenProps<EventsTabsScreenParamsList, string>,\r\n        PagesScreenProps<EventsTabsScreenParamsList> & TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>\r\n    >;\r\n\r\nexport const EventsListByDayScreen: FC<EventsListByDayScreenProps> = memo(({ route }) => {\r\n    const { t } = useTranslation(\"Events\");\r\n    const [now] = useNow();\r\n\r\n    const { setSelected } = useEventsTabsContext();\r\n\r\n    // Get the day. Use it to resolve events to display.\r\n    // TODO: @lukashaertel pls fix\r\n    const day = useAppSelector((state) => eventDaysSelectors.selectById(state, route.name));\r\n    const eventsByDay: EventDetails[] = useAppSelector((state) => selectEventsByDay(state, day?.Id ?? \"\"));\r\n    const eventsGroups = useMemo(() => {\r\n        const [upcoming, passed] = partition(eventsByDay, (it) => (now.isSame(it.StartDateTimeUtc, \"days\") ? now.isBefore(it.EndDateTimeUtc) : true));\r\n\r\n        const stillUpcomingSections = chain(upcoming)\r\n            .orderBy(\"StartDateTimeUtc\")\r\n            .groupBy(\"PartOfDay\")\r\n            .entries()\r\n            .map(([partOfDay, events]) => ({\r\n                title: t(partOfDay as PartOfDay),\r\n                subtitle: t(\"events_count\", { count: events.length }),\r\n                icon: ((partOfDay === \"morning\" && \"weather-sunset-up\") ||\r\n                    (partOfDay === \"afternoon\" && \"weather-sunny\") ||\r\n                    (partOfDay === \"evening\" && \"weather-sunset-down\") ||\r\n                    (partOfDay === \"night\" && \"weather-night\") ||\r\n                    \"weather-sunny\") as IconNames,\r\n                data: events,\r\n            }))\r\n            .value();\r\n\r\n        const passedSections =\r\n            passed.length > 0\r\n                ? [\r\n                      {\r\n                          title: t(\"finished\"),\r\n                          subtitle: t(\"events_count\", { count: passed.length }),\r\n                          icon: \"history\" as IconNames,\r\n                          data: passed,\r\n                      },\r\n                  ]\r\n                : [];\r\n\r\n        return stillUpcomingSections.concat(...passedSections);\r\n    }, [t, eventsByDay, now]);\r\n\r\n    return (\r\n        <EventsSectionedListGeneric\r\n            eventsGroups={eventsGroups}\r\n            select={setSelected}\r\n            leader={\r\n                <Label type=\"h1\" variant=\"middle\" mt={30}>\r\n                    {day?.Name ?? \"\"}\r\n                </Label>\r\n            }\r\n        />\r\n    );\r\n});\r\n","import { CompositeScreenProps } from \"@react-navigation/core\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { chain } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { PagesScreenProps } from \"../../components/Navigators/PagesNavigator\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { useIsEventDone } from \"../../hooks/useEventProperties\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { eventRoomsSelectors, selectEventsByRoom } from \"../../store/eurofurence.selectors\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { EventsSectionedListGeneric } from \"./EventsSectionedListGeneric\";\r\nimport { useEventsTabsContext } from \"./EventsTabsContext\";\r\nimport { EventsTabsScreenParamsList } from \"./EventsTabsScreen\";\r\n\r\n/**\r\n * Params handled by the screen in route.\r\n */\r\nexport type EventsListByRoomScreenParams = object;\r\n\r\n/**\r\n * The properties to the screen as a component. TODO: Unify and verify types.\r\n */\r\nexport type EventsListByRoomScreenProps =\r\n    // Route carrying from events tabs screen at \"Room\", own navigation via own parameter list.\r\n    CompositeScreenProps<\r\n        PagesScreenProps<EventsTabsScreenParamsList, string>,\r\n        PagesScreenProps<EventsTabsScreenParamsList> & TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>\r\n    >;\r\n\r\nexport const EventsListByRoomScreen: FC<EventsListByRoomScreenProps> = ({ route }) => {\r\n    const { t } = useTranslation(\"Events\");\r\n    const isEventDone = useIsEventDone();\r\n\r\n    const { setSelected } = useEventsTabsContext();\r\n\r\n    // Get the room. Use it to resolve events to display.\r\n    const room = useAppSelector((state) => eventRoomsSelectors.selectById(state, route.name));\r\n    const eventsByRoom = useAppSelector((state) => selectEventsByRoom(state, room?.Id ?? \"\"));\r\n    const eventsGroups = useMemo(() => {\r\n        const done = chain(eventsByRoom)\r\n            .filter((event) => isEventDone(event))\r\n            .orderBy([\"StartDateTimeUtc\", (event) => isEventDone(event)])\r\n            .value();\r\n\r\n        return chain(eventsByRoom)\r\n            .filter((event) => !isEventDone(event))\r\n            .orderBy(\"StartDateTimeUtc\")\r\n            .groupBy((event) => event.ConferenceDay?.Date)\r\n            .entries()\r\n            .map(([date, events]) => ({\r\n                title: moment(date).format(\"dddd\"),\r\n                subtitle: t(\"events_count\", { count: events.length }),\r\n                icon: \"calendar-outline\" as IconNames,\r\n                data: events,\r\n            }))\r\n            .thru((chain) =>\r\n                done.length === 0\r\n                    ? chain\r\n                    : chain.concat({\r\n                          title: t(\"events_done\"),\r\n                          subtitle: t(\"events_count\", { count: done.length }),\r\n                          icon: \"calendar-clock-outline\" as IconNames,\r\n                          data: done,\r\n                      })\r\n            )\r\n            .value();\r\n    }, [t, eventsByRoom, isEventDone]);\r\n\r\n    return (\r\n        <EventsSectionedListGeneric\r\n            eventsGroups={eventsGroups}\r\n            select={setSelected}\r\n            leader={\r\n                <Label type=\"h1\" variant=\"middle\" mt={30}>\r\n                    {room?.Name ?? \"\"}\r\n                </Label>\r\n            }\r\n            cardType=\"time\"\r\n        />\r\n    );\r\n};\r\n","import { CompositeScreenProps } from \"@react-navigation/core\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { chain } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { PagesScreenProps } from \"../../components/Navigators/PagesNavigator\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { useIsEventDone } from \"../../hooks/useEventProperties\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { eventTracksSelectors, selectEventsByTrack } from \"../../store/eurofurence.selectors\";\r\nimport { IconNames } from \"../../types/IconNames\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { EventsSectionedListGeneric } from \"./EventsSectionedListGeneric\";\r\nimport { useEventsTabsContext } from \"./EventsTabsContext\";\r\nimport { EventsTabsScreenParamsList } from \"./EventsTabsScreen\";\r\n\r\n/**\r\n * Params handled by the screen in route.\r\n */\r\nexport type EventsListByTrackScreenParams = object;\r\n\r\n/**\r\n * The properties to the screen as a component. TODO: Unify and verify types.\r\n */\r\nexport type EventsListByTrackScreenProps =\r\n    // Route carrying from events tabs screen at \"Track\", own navigation via own parameter list.\r\n    CompositeScreenProps<\r\n        PagesScreenProps<EventsTabsScreenParamsList, string>,\r\n        PagesScreenProps<EventsTabsScreenParamsList> & TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>\r\n    >;\r\n\r\nexport const EventsListByTrackScreen: FC<EventsListByTrackScreenProps> = ({ route }) => {\r\n    const { t } = useTranslation(\"Events\");\r\n    const isEventDone = useIsEventDone();\r\n\r\n    const { setSelected } = useEventsTabsContext();\r\n\r\n    // Get the track. Use it to resolve events to display.\r\n    const track = useAppSelector((state) => eventTracksSelectors.selectById(state, route.name));\r\n    const eventsByTrack = useAppSelector((state) => selectEventsByTrack(state, track?.Id ?? \"\"));\r\n    const eventsGroups = useMemo(() => {\r\n        const done = chain(eventsByTrack)\r\n            .filter((event) => isEventDone(event))\r\n            .orderBy([\"StartDateTimeUtc\", (event) => isEventDone(event)])\r\n            .value();\r\n\r\n        return chain(eventsByTrack)\r\n            .filter((event) => !isEventDone(event))\r\n            .orderBy(\"StartDateTimeUtc\")\r\n            .groupBy((event) => event.ConferenceDay?.Date)\r\n            .entries()\r\n            .map(([date, events]) => ({\r\n                title: moment(date).format(\"dddd\"),\r\n                subtitle: t(\"events_count\", { count: events.length }),\r\n                icon: \"calendar-outline\" as IconNames,\r\n                data: events,\r\n            }))\r\n            .thru((chain) =>\r\n                done.length === 0\r\n                    ? chain\r\n                    : chain.concat({\r\n                          title: t(\"events_done\"),\r\n                          subtitle: t(\"events_count\", { count: done.length }),\r\n                          icon: \"calendar-clock-outline\" as IconNames,\r\n                          data: done,\r\n                      })\r\n            )\r\n            .value();\r\n    }, [t, eventsByTrack, isEventDone]);\r\n\r\n    return (\r\n        <EventsSectionedListGeneric\r\n            eventsGroups={eventsGroups}\r\n            select={setSelected}\r\n            leader={\r\n                <Label type=\"h1\" variant=\"middle\" mt={30}>\r\n                    {track?.Name ?? \"\"}\r\n                </Label>\r\n            }\r\n            cardType=\"time\"\r\n        />\r\n    );\r\n};\r\n","import { FC, ReactNode, useCallback } from \"react\";\r\nimport { FlatList, StyleSheet, Vibration } from \"react-native\";\r\n\r\nimport { EventDetails } from \"../../store/eurofurence.types\";\r\nimport { EventCard } from \"./EventCard\";\r\nimport { EventsListByDayScreenProps } from \"./EventsListByDayScreen\";\r\nimport { EventsListByRoomScreenProps } from \"./EventsListByRoomScreen\";\r\nimport { EventsListByTrackScreenProps } from \"./EventsListByTrackScreen\";\r\nimport { EventsListSearchResultsScreenProps } from \"./EventsListSearchResultsScreen\";\r\nimport { EventsSearchScreenProps } from \"./EventsSearchScreen\";\r\n\r\n/**\r\n * The properties to the component.\r\n */\r\nexport type EventsListGenericProps = {\r\n    /**\r\n     * Navigation type. Copied from the screens rendering this component.\r\n     */\r\n    navigation:\r\n        | EventsSearchScreenProps[\"navigation\"]\r\n        | EventsListSearchResultsScreenProps[\"navigation\"]\r\n        | EventsListByDayScreenProps[\"navigation\"]\r\n        | EventsListByRoomScreenProps[\"navigation\"]\r\n        | EventsListByTrackScreenProps[\"navigation\"];\r\n    leader?: ReactNode;\r\n    events: EventDetails[];\r\n    select?: (event: EventDetails) => void;\r\n    empty?: ReactNode;\r\n    trailer?: ReactNode;\r\n    cardType?: \"duration\" | \"time\";\r\n};\r\n\r\nexport const EventsListGeneric: FC<EventsListGenericProps> = ({ navigation, leader, events, select, empty, trailer, cardType = \"duration\" }) => {\r\n    // Prepare navigation callback. This clones the respective parameters, as otherwise illegal mutation will occur.\r\n    const navigateTo = useCallback(\r\n        (event: EventDetails) =>\r\n            navigation.push(\"Event\", {\r\n                id: event.Id,\r\n            }),\r\n        [navigation]\r\n    );\r\n\r\n    return (\r\n        <FlatList\r\n            style={styles.list}\r\n            contentContainerStyle={styles.container}\r\n            scrollEnabled={true}\r\n            ListHeaderComponent={<>{leader}</>}\r\n            ListFooterComponent={<>{trailer}</>}\r\n            ListEmptyComponent={<>{empty}</>}\r\n            data={events}\r\n            keyExtractor={(item) => item.Id}\r\n            initialNumToRender={5}\r\n            maxToRenderPerBatch={5}\r\n            renderItem={(entry: { item: EventDetails }) => (\r\n                <EventCard\r\n                    key={entry.item.Id}\r\n                    event={entry.item}\r\n                    type={cardType}\r\n                    onPress={() => navigateTo(entry.item)}\r\n                    onLongPress={() => {\r\n                        Vibration.vibrate(50);\r\n                        select && select(entry.item);\r\n                    }}\r\n                />\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    list: {\r\n        flex: 1,\r\n    },\r\n    container: {\r\n        paddingHorizontal: 20,\r\n        paddingBottom: 100,\r\n    },\r\n});\r\n","import { CompositeScreenProps } from \"@react-navigation/core\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport { chain } from \"lodash\";\r\nimport { FC, useCallback, useMemo } from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { PagesScreenProps } from \"../../components/Navigators/PagesNavigator\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { EventsListGeneric } from \"./EventsListGeneric\";\r\nimport { useEventsTabsContext } from \"./EventsTabsContext\";\r\nimport { EventsTabsScreenParamsList } from \"./EventsTabsScreen\";\r\n\r\n/**\r\n * Params handled by the screen in route.\r\n */\r\nexport type EventsListSearchResultsScreenParams = undefined;\r\n\r\n/**\r\n * The properties to the screen as a component.\r\n */\r\nexport type EventsListSearchResultsScreenProps =\r\n    // Route carrying from events tabs screen at \"Results\", own navigation via own parameter list.\r\n    CompositeScreenProps<\r\n        PagesScreenProps<EventsTabsScreenParamsList, \"Results\">,\r\n        PagesScreenProps<EventsTabsScreenParamsList> & TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>\r\n    >;\r\n\r\nexport const EventsListSearchResultsScreen: FC<EventsListSearchResultsScreenProps> = ({ navigation }) => {\r\n    const { search, setSearch, results, setSelected } = useEventsTabsContext();\r\n\r\n    const onClear = useCallback(() => {\r\n        setSearch(\"\");\r\n        navigation.jumpTo(\"Search\");\r\n    }, [setSearch, navigation]);\r\n\r\n    const events = useMemo(() => chain(results).orderBy(\"StartDateTimeUtc\").value(), []);\r\n\r\n    return (\r\n        <EventsListGeneric\r\n            navigation={navigation}\r\n            events={events}\r\n            select={setSelected}\r\n            cardType=\"time\"\r\n            leader={\r\n                <View style={{ paddingBottom: 30 }}>\r\n                    <Section icon=\"view-list\" title={search} subtitle={`${results?.length} results in total`} />\r\n                    <Button icon=\"chevron-left\" onPress={onClear}>\r\n                        Clear search\r\n                    </Button>\r\n                </View>\r\n            }\r\n        />\r\n    );\r\n};\r\n","import { CompositeScreenProps, useIsFocused } from \"@react-navigation/core\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport React, { FC, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Keyboard, StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { Floater } from \"../../components/Containers/Floater\";\r\nimport { Row } from \"../../components/Containers/Row\";\r\nimport { Tab } from \"../../components/Containers/Tab\";\r\nimport { PagesScreenProps } from \"../../components/Navigators/PagesNavigator\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { useEventsTabsContext } from \"./EventsTabsContext\";\r\nimport { EventsTabsScreenParamsList } from \"./EventsTabsScreen\";\r\n\r\n/**\r\n * Params handled by the screen in route.\r\n */\r\nexport type EventsSearchScreenParams = undefined;\r\n\r\n/**\r\n * The properties to the screen as a component.\r\n */\r\nexport type EventsSearchScreenProps =\r\n    // Route carrying from events tabs screen at \"Search\", own navigation via own parameter list.\r\n    CompositeScreenProps<\r\n        PagesScreenProps<EventsTabsScreenParamsList, \"Search\">,\r\n        PagesScreenProps<EventsTabsScreenParamsList> & TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>\r\n    >;\r\n\r\nexport const EventsSearchScreen: FC<EventsSearchScreenProps> = ({ navigation }) => {\r\n    const { t } = useTranslation(\"Events\");\r\n    const { search, setSearch, results } = useEventsTabsContext();\r\n\r\n    // Hide keyboard on navigating away from this page.\r\n    const isFocused = useIsFocused();\r\n    useEffect(() => {\r\n        if (!isFocused) Keyboard.dismiss();\r\n    }, [isFocused]);\r\n\r\n    const onDay = useCallback(() => navigation.getParent()?.setParams({ filterType: \"days\" }), [navigation]);\r\n    const onRoom = useCallback(() => navigation.getParent()?.setParams({ filterType: \"rooms\" }), [navigation]);\r\n    const onTrack = useCallback(() => navigation.getParent()?.setParams({ filterType: \"tracks\" }), [navigation]);\r\n\r\n    const theme = useTheme();\r\n    const searchStyle = useMemo<ViewStyle>(() => ({ color: theme.text, borderBottomColor: theme.text }), [theme]);\r\n    const roundedStyle = useMemo<ViewStyle>(() => ({ backgroundColor: theme.secondary }), [theme]);\r\n    return (\r\n        <Floater>\r\n            <View style={styles.end}>\r\n                <View style={styles.searchArea}>\r\n                    <Label type=\"caption\">Enter your query</Label>\r\n                    <TextInput style={[styles.searchField, searchStyle]} value={search} onChangeText={setSearch} placeholder=\"Enter query\" />\r\n\r\n                    {!results ? null : <Button onPress={() => navigation.jumpTo(\"Results\")}>View all {results.length} results</Button>}\r\n                </View>\r\n                <Row style={styles.categories} type=\"stretch\" variant=\"spaced\">\r\n                    <Tab style={[styles.rounded, roundedStyle]} inverted icon=\"calendar-outline\" text={t(\"filter_by_day\")} onPress={onDay} />\r\n                    <Tab style={[styles.rounded, styles.rowCenter, roundedStyle]} inverted icon=\"bus-stop\" text={t(\"filter_by_track\")} onPress={onTrack} />\r\n                    <Tab style={[styles.rounded, roundedStyle]} inverted icon=\"office-building\" text={t(\"filter_by_room\")} onPress={onRoom} />\r\n                </Row>\r\n            </View>\r\n        </Floater>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    end: {\r\n        justifyContent: \"flex-end\",\r\n        flex: 1,\r\n    },\r\n    categories: {\r\n        paddingBottom: 20,\r\n        marginBottom: 30,\r\n    },\r\n    searchArea: {\r\n        height: 160,\r\n    },\r\n    searchField: {\r\n        paddingVertical: 5,\r\n        borderBottomWidth: 1,\r\n        marginVertical: 25,\r\n    },\r\n    rounded: {\r\n        margin: 10,\r\n        borderRadius: 10,\r\n    },\r\n    rowCenter: {\r\n        marginHorizontal: 8,\r\n    },\r\n});\r\n","import _ from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectFavoriteEvents } from \"../../store/eurofurence.selectors\";\r\nimport { EventsSectionedListGeneric } from \"./EventsSectionedListGeneric\";\r\n\r\nexport const PersonalScheduleList = () => {\r\n    const { t } = useTranslation(\"Events\");\r\n    const [now] = useNow();\r\n    const events = useAppSelector(selectFavoriteEvents);\r\n\r\n    const sections = useMemo(() => {\r\n        const [past, upcoming] = _.partition(events, (it) => now.isAfter(it.EndDateTimeUtc, \"minutes\"));\r\n\r\n        const upcomingSections = _.chain(upcoming)\r\n            .orderBy((it) => moment(it.StartDateTimeUtc).valueOf(), \"asc\")\r\n            .groupBy((it) => it.ConferenceDay?.Name)\r\n            .map((items, day) => ({\r\n                title: day,\r\n                data: items,\r\n            }))\r\n            .value();\r\n\r\n        if (past.length > 0) {\r\n            upcomingSections.push({\r\n                title: t(\"finished\"),\r\n                data: past,\r\n            });\r\n        }\r\n\r\n        return upcomingSections;\r\n    }, [events]);\r\n\r\n    return (\r\n        <EventsSectionedListGeneric\r\n            eventsGroups={sections}\r\n            cardType={\"time\"}\r\n            leader={\r\n                <Label type=\"h1\" variant=\"middle\" mt={30}>\r\n                    {t(\"schedule_title\")}\r\n                </Label>\r\n            }\r\n            empty={\r\n                <Label type=\"para\" variant=\"middle\" mt={30}>\r\n                    {t(\"schedule_empty\")}\r\n                </Label>\r\n            }\r\n        />\r\n    );\r\n};\r\n","import { CompositeScreenProps, useIsFocused } from \"@react-navigation/core\";\r\nimport { NavigatorScreenParams } from \"@react-navigation/native\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport moment from \"moment\";\r\nimport { FC, useCallback, useEffect, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { createPagesNavigator, PagesScreenProps } from \"../../components/Navigators/PagesNavigator\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { eventDaysSelectors, eventRoomsSelectors, eventTracksSelectors } from \"../../store/eurofurence.selectors\";\r\nimport { EventDayRecord } from \"../../store/eurofurence.types\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { EventActionsSheet } from \"./EventActionsSheet\";\r\nimport { EventsListByDayScreen, EventsListByDayScreenParams } from \"./EventsListByDayScreen\";\r\nimport { EventsListByRoomScreen, EventsListByRoomScreenParams } from \"./EventsListByRoomScreen\";\r\nimport { EventsListByTrackScreen, EventsListByTrackScreenParams } from \"./EventsListByTrackScreen\";\r\nimport { EventsListSearchResultsScreen, EventsListSearchResultsScreenParams } from \"./EventsListSearchResultsScreen\";\r\nimport { EventsSearchScreen, EventsSearchScreenParams } from \"./EventsSearchScreen\";\r\nimport { EventsTabsContextProvider, useEventsTabsContext } from \"./EventsTabsContext\";\r\nimport { PersonalScheduleList } from \"./PersonalScheduleList\";\r\n\r\n// TODO: Might have an distinction between days, tracks, rooms as param.\r\n\r\n/**\r\n * Available routes.\r\n */\r\nexport type EventsTabsScreenParamsList = {\r\n    Favorites: object;\r\n    Search: EventsSearchScreenParams;\r\n\r\n    Results: EventsListSearchResultsScreenParams;\r\n} & {\r\n    /**\r\n     * All names (days) want events-day parameters.\r\n     */\r\n    [name: string]: EventsListByDayScreenParams | EventsListByTrackScreenParams | EventsListByRoomScreenParams;\r\n};\r\n\r\n/**\r\n * Create an instance of the pages-navigator with the provided routes.\r\n */\r\nconst EventsTabsScreenNavigator = createPagesNavigator<EventsTabsScreenParamsList>();\r\n\r\n/**\r\n * Params handled by the screen in route. Delegated parameters for the days. TODO: Verify.\r\n */\r\nexport type EventsTabsScreenParams = NavigatorScreenParams<EventsTabsScreenParamsList> & {\r\n    filterType?: \"days\" | \"tracks\" | \"rooms\";\r\n};\r\n\r\n/**\r\n * The properties to the screen as a component.\r\n */\r\nexport type EventsTabsScreenProps =\r\n    // Route carrying from area screen at \"Events\", navigation via own parameter list and parents.\r\n    CompositeScreenProps<\r\n        TabScreenProps<ScreenAreasParamsList, \"Events\">,\r\n        PagesScreenProps<EventsTabsScreenParamsList> & TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>\r\n    >;\r\n\r\nconst EventsTabsScreenContent: FC<EventsTabsScreenProps> = ({ route }) => {\r\n    const { t } = useTranslation(\"Events\");\r\n    const formatDay = useCallback((day: EventDayRecord) => moment(day.Date).format(\"ddd\"), [t]);\r\n\r\n    // Use now with optional time travel.\r\n    const [now] = useNow();\r\n\r\n    // Use event days.\r\n    const days = useAppSelector(eventDaysSelectors.selectAll);\r\n    const tracks = useAppSelector(eventTracksSelectors.selectAll);\r\n    const rooms = useAppSelector(eventRoomsSelectors.selectAll);\r\n\r\n    // Get context and resolve if results present and the current selection state..\r\n    const { hasResults, selected, setSelected } = useEventsTabsContext();\r\n\r\n    // Deselect on unfocus.\r\n    const isFocused = useIsFocused();\r\n    useEffect(() => {\r\n        if (!isFocused) setSelected(null);\r\n    }, [isFocused]);\r\n\r\n    // Convert given optional type to actual filter type.\r\n    const actualType = useMemo(() => {\r\n        if (hasResults) return \"results\";\r\n        // TODO: @lukashaertel pls fix\r\n        return route.params?.filterType ?? \"days\";\r\n        // TODO: @lukashaertel pls fix\r\n    }, [hasResults, route.params?.filterType]);\r\n\r\n    // Get the current day ID.\r\n    const currentDayId = useMemo(() => days.find((day) => moment(day.Date).isSame(now, \"day\"))?.Id, [days, now]);\r\n\r\n    // Find initial name for selected type.\r\n    const initialId = useMemo(() => {\r\n        if (actualType === \"results\") return \"Results\";\r\n        if (actualType === \"days\") return currentDayId ?? days[0]?.Id;\r\n        if (actualType === \"tracks\") return tracks[0]?.Id;\r\n        if (actualType === \"rooms\") return rooms[0]?.Id;\r\n    }, [days, currentDayId, tracks, rooms, now, actualType]);\r\n\r\n    // Compute the safe area.\r\n    const top = useSafeAreaInsets()?.top;\r\n    const pagesStyle = useMemo(() => ({ paddingTop: top }), [top]);\r\n\r\n    // Ignore rendering if data is not loaded to prevent jumping on initialization.\r\n    if (actualType === \"days\" && !days?.length) return null;\r\n    if (actualType === \"tracks\" && !tracks?.length) return null;\r\n    if (actualType === \"rooms\" && !rooms?.length) return null;\r\n\r\n    // If the screens require too much performance we should set detach to true again.\r\n    return (\r\n        <View style={StyleSheet.absoluteFill}>\r\n            <EventsTabsScreenNavigator.Navigator pagesStyle={pagesStyle} initialRouteName={initialId}>\r\n                {/*Tab for searching and filtering*/}\r\n                <EventsTabsScreenNavigator.Screen name=\"Search\" options={{ icon: \"table-search\" }} component={EventsSearchScreen} />\r\n\r\n                <EventsTabsScreenNavigator.Screen name={\"Your Schedule\"} options={{ icon: \"calendar\" }} component={PersonalScheduleList} />\r\n\r\n                {actualType !== \"results\" ? null : <EventsTabsScreenNavigator.Screen name=\"Results\" options={{ icon: \"view-list\" }} component={EventsListSearchResultsScreen} />}\r\n\r\n                {actualType !== \"days\"\r\n                    ? null\r\n                    : days.map((day) => (\r\n                          <EventsTabsScreenNavigator.Screen\r\n                              key={day.Id}\r\n                              name={day.Id}\r\n                              component={EventsListByDayScreen}\r\n                              options={{ title: formatDay(day), highlight: day.Name === currentDayId }}\r\n                          />\r\n                      ))}\r\n\r\n                {actualType !== \"tracks\"\r\n                    ? null\r\n                    : tracks.map((track) => (\r\n                          <EventsTabsScreenNavigator.Screen key={track.Id} name={track.Id} component={EventsListByTrackScreen} options={{ title: track.Name }} />\r\n                      ))}\r\n\r\n                {actualType !== \"rooms\"\r\n                    ? null\r\n                    : rooms.map((room) => (\r\n                          <EventsTabsScreenNavigator.Screen key={room.Id} name={room.Id} component={EventsListByRoomScreen} options={{ title: room.ShortName ?? room.Name }} />\r\n                      ))}\r\n            </EventsTabsScreenNavigator.Navigator>\r\n            <EventActionsSheet event={selected} onClose={() => setSelected(null)} />\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const EventsTabsScreen: FC<EventsTabsScreenProps> = ({ navigation, route }) => (\r\n    <EventsTabsContextProvider>\r\n        <EventsTabsScreenContent navigation={navigation} route={route} />\r\n    </EventsTabsContextProvider>\r\n);\r\n","import { FC } from \"react\";\r\nimport { Image, View } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { MarkdownContent } from \"../../components/Atoms/MarkdownContent\";\r\nimport { Card } from \"../../components/Containers/Card\";\r\nimport { AnnouncementDetails } from \"../../store/eurofurence.types\";\r\n\r\nexport const AnnouncementItem: FC<{ announcement: AnnouncementDetails }> = ({ announcement }) => {\r\n    return (\r\n        <Card>\r\n            <View style={{ marginBottom: 5 }}>\r\n                <Label type={\"h3\"}>{announcement.Title}</Label>\r\n                <Label type={\"caption\"}>\r\n                    {announcement.Area} - {announcement.Author}\r\n                </Label>\r\n            </View>\r\n\r\n            <MarkdownContent>{announcement.Content}</MarkdownContent>\r\n\r\n            {announcement.Image && <Image source={{ uri: announcement.Image.FullUrl }} style={{ width: \"100%\", height: \"auto\" }} />}\r\n        </Card>\r\n    );\r\n};\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectActiveAnnouncements } from \"../../store/eurofurence.selectors\";\r\nimport { AnnouncementItem } from \"./AnnouncementItem\";\r\n\r\nexport const AnnouncementList = () => {\r\n    const { t } = useTranslation(\"Announcements\");\r\n    const [now] = useNow();\r\n    const announcements = useAppSelector((state) => selectActiveAnnouncements(state, now));\r\n\r\n    return (\r\n        <>\r\n            <Section title={t(\"sectionTitle\")} subtitle={t(\"sectionSubtitle\")} icon={\"newspaper\"} />\r\n\r\n            {announcements.length === 0 ? <Label mb={15}>{t(\"noAnnouncements\")}</Label> : announcements.map((it) => <AnnouncementItem announcement={it} key={it.Id} />)}\r\n        </>\r\n    );\r\n};\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectCurrentEvents } from \"../../store/eurofurence.selectors\";\r\nimport { EventCard } from \"./EventCard\";\r\n\r\nexport const CurrentEventList = () => {\r\n    const { t } = useTranslation(\"Events\");\r\n\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    const [now] = useNow();\r\n    const events = useAppSelector((state) => selectCurrentEvents(state, now));\r\n\r\n    if (events.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Section title={t(\"current_title\")} subtitle={t(\"current_subtitle\")} icon={\"clock\"} />\r\n            {events.map((event) => (\r\n                <EventCard\r\n                    key={event.Id}\r\n                    event={event}\r\n                    type={\"time\"}\r\n                    onPress={() =>\r\n                        navigation.navigate(\"Event\", {\r\n                            id: event.Id,\r\n                        })\r\n                    }\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectUpcomingFavoriteEvents } from \"../../store/eurofurence.selectors\";\r\nimport { EventCard } from \"./EventCard\";\r\n\r\nexport const TodayScheduleList = () => {\r\n    const { t } = useTranslation(\"Events\");\r\n\r\n    const [now] = useNow();\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    const events = useAppSelector((state) => selectUpcomingFavoriteEvents(state, now));\r\n\r\n    if (events.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Section title={t(\"today_schedule_title\")} subtitle={t(\"today_schedule_subtitle\")} icon={\"book-marker\"} />\r\n            {events.map((event) => (\r\n                <EventCard\r\n                    key={event.Id}\r\n                    event={event}\r\n                    type={\"time\"}\r\n                    onPress={() =>\r\n                        navigation.navigate(\"Event\", {\r\n                            id: event.Id,\r\n                        })\r\n                    }\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n","import { useTranslation } from \"react-i18next\";\r\n\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectUpcomingEvents } from \"../../store/eurofurence.selectors\";\r\nimport { EventCard } from \"./EventCard\";\r\n\r\nexport const UpcomingEventsList = () => {\r\n    const { t } = useTranslation(\"Events\");\r\n\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    const [now] = useNow();\r\n    const events = useAppSelector((state) => selectUpcomingEvents(state, now));\r\n\r\n    if (events.length === 0) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Section title={t(\"upcoming_title\")} subtitle={t(\"upcoming_subtitle\")} icon={\"clock\"} />\r\n            {events.map((event) => (\r\n                <EventCard\r\n                    key={event.Id}\r\n                    event={event}\r\n                    type={\"time\"}\r\n                    onPress={() =>\r\n                        navigation.navigate(\"Event\", {\r\n                            id: event.Id,\r\n                        })\r\n                    }\r\n                />\r\n            ))}\r\n        </>\r\n    );\r\n};\r\n","import { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ImageBackground, StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\n\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { conId } from \"../../configuration\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectCountdownTitle } from \"../../store/eurofurence.selectors\";\r\n\r\nexport type CountdownHeaderProps = {\r\n    style?: StyleProp<ViewStyle>;\r\n};\r\n\r\nexport const CountdownHeader: FC<CountdownHeaderProps> = ({ style }) => {\r\n    const { t } = useTranslation(\"Countdown\");\r\n    const [now] = useNow();\r\n\r\n    const subtitle = useAppSelector((state) => selectCountdownTitle(state, now, t));\r\n    return (\r\n        <View style={[styles.container, style]}>\r\n            <ImageBackground style={StyleSheet.absoluteFill} source={require(\"../../../assets/images/banner_2022_no_logo.png\")} resizeMode=\"cover\" />\r\n\r\n            <Section title={conId} icon=\"alarm\" subtitle={subtitle} titleColor=\"white\" subtitleColor=\"white\" titleVariant=\"shadow\" subtitleVariant=\"shadow\" />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        height: 180,\r\n        paddingTop: 15,\r\n        paddingHorizontal: 15,\r\n        flexDirection: \"column-reverse\",\r\n    },\r\n});\r\n","import * as Device from \"expo-device\";\r\nimport { useMemo, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Platform } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\n\r\nexport const DeviceSpecificWarnings = () => {\r\n    const { t } = useTranslation(\"Home\");\r\n    const [scheduledNotifications] = useState(() => Platform.OS === \"android\" || Platform.OS === \"ios\");\r\n    const [cacheImages] = useState(() => Platform.OS === \"android\" || Platform.OS === \"ios\");\r\n    const pushNotifications = useMemo(() => scheduledNotifications && Device.isDevice, [scheduledNotifications]);\r\n\r\n    if (scheduledNotifications && pushNotifications && cacheImages) {\r\n        // If we can do all things, do not return any warnings\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Section title={t(\"warnings.title\")} subtitle={t(\"warnings.subtitle\")} icon={\"information\"} />\r\n\r\n            {!scheduledNotifications && <Label mt={10}>{t(\"warnings.no_notifications\")}</Label>}\r\n            {!pushNotifications && <Label mt={10}>{t(\"warnings.no_push_notifications\")}</Label>}\r\n            {!cacheImages && <Label mt={10}>{t(\"warnings.no_image_caching\")}</Label>}\r\n        </>\r\n    );\r\n};\r\n","import React, { FC, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nimport { BadgeInvPad } from \"../../components/Containers/BadgeInvPad\";\r\nimport { useTheme } from \"../../context/Theme\";\r\n\r\nexport type LanguageWarningsProps = {\r\n    /**\r\n     * The padding used by the parent horizontally.\r\n     */\r\n    parentPad?: number;\r\n};\r\n\r\nexport const LanguageWarnings: FC<LanguageWarningsProps> = ({ parentPad = 0 }) => {\r\n    const { t } = useTranslation(\"Home\");\r\n    const theme = useTheme();\r\n    const notice = useMemo(() => t(\"content_untranslated\"), [t]);\r\n\r\n    if (notice === \"\") {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <BadgeInvPad padding={parentPad} badgeColor={theme.background} textColor={theme.text} textType=\"para\" icon=\"translate\">\r\n            {notice}\r\n        </BadgeInvPad>\r\n    );\r\n};\r\n","import { CompositeScreenProps } from \"@react-navigation/core\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport React, { FC } from \"react\";\r\nimport { RefreshControl, ScrollView } from \"react-native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { Floater, padFloater } from \"../../components/Containers/Floater\";\r\nimport { TabScreenProps } from \"../../components/Navigators/TabsNavigator\";\r\nimport { useSynchronizer } from \"../../components/Synchronization/SynchronizationProvider\";\r\nimport { AnnouncementList } from \"../Announcements/AnnouncementList\";\r\nimport { appStyles } from \"../AppStyles\";\r\nimport { CurrentEventList } from \"../Events/CurrentEventsList\";\r\nimport { TodayScheduleList } from \"../Events/TodayScheduleList\";\r\nimport { UpcomingEventsList } from \"../Events/UpcomingEventsList\";\r\nimport { ScreenAreasParamsList } from \"../ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../ScreenStart\";\r\nimport { CountdownHeader } from \"./CountdownHeader\";\r\nimport { DeviceSpecificWarnings } from \"./DeviceSpecificWarnings\";\r\nimport { LanguageWarnings } from \"./LanguageWarnings\";\r\n\r\n/**\r\n * Params handled by the screen in route, nothing so far.\r\n */\r\nexport type ScreenHomeParams = undefined;\r\n\r\n/**\r\n * The properties to the screen as a component.\r\n */\r\nexport type ScreenHomeProps = CompositeScreenProps<TabScreenProps<ScreenAreasParamsList, \"Home\">, StackScreenProps<ScreenStartParamsList>>;\r\n\r\nexport const HomeScreen: FC<ScreenHomeProps> = () => {\r\n    const safe = useSafeAreaInsets();\r\n\r\n    const { synchronize, isSynchronizing } = useSynchronizer();\r\n    return (\r\n        <ScrollView style={[appStyles.abs, safe]} refreshControl={<RefreshControl refreshing={isSynchronizing} onRefresh={synchronize} />}>\r\n            <CountdownHeader />\r\n\r\n            <Floater contentStyle={appStyles.trailer}>\r\n                <LanguageWarnings parentPad={padFloater} />\r\n                <DeviceSpecificWarnings />\r\n                <AnnouncementList />\r\n                <UpcomingEventsList />\r\n                <TodayScheduleList />\r\n                <CurrentEventList />\r\n            </Floater>\r\n        </ScrollView>\r\n    );\r\n};\r\n","import { forwardRef, ReactNode, useEffect, useImperativeHandle, useState } from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport Animated, { Easing, useAnimatedStyle, useSharedValue, withTiming } from \"react-native-reanimated\";\r\n\r\n/**\r\n * Arguments to the pager.\r\n */\r\nexport type PagerProps = {\r\n    /**\r\n     * Main view style.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n\r\n    /**\r\n     * Left content.\r\n     */\r\n    left?: ReactNode;\r\n\r\n    /**\r\n     * Right content.\r\n     */\r\n    right?: ReactNode;\r\n};\r\n\r\n/**\r\n * Operations provided by the pager.\r\n */\r\nexport type PagerRef = {\r\n    /**\r\n     * Moves to the left page with animations.\r\n     */\r\n    toLeft(): void;\r\n\r\n    /**\r\n     * Moves to the right page with animations.\r\n     */\r\n    toRight(): void;\r\n\r\n    /**\r\n     * Moves to the left page immediately.\r\n     */\r\n    toLeftImmediately(): void;\r\n\r\n    /**\r\n     * Moves to the right page immediately.\r\n     */\r\n    toRightImmediately(): void;\r\n};\r\n\r\nexport const Pager = forwardRef<PagerRef, PagerProps>(({ style, left, right }, ref) => {\r\n    // Maintain internal state where the page is.\r\n    const [isRight, setIsRight] = useState(false);\r\n\r\n    // Use layout width.\r\n    const [width, setWidth] = useState(100);\r\n\r\n    // Use to flip the pages.\r\n    const offset = useSharedValue(0);\r\n\r\n    // React to desired right-ness.\r\n    useEffect(() => {\r\n        if (isRight && offset.value < 1) offset.value = withTiming(1, { duration: 234, easing: Easing.out(Easing.cubic) });\r\n        else if (!isRight && offset.value > 0) offset.value = withTiming(0, { duration: 234, easing: Easing.out(Easing.cubic) });\r\n    }, [isRight, offset]);\r\n\r\n    // Animate transformation for page flipping (half of total width).\r\n    const dynamicContainer = useAnimatedStyle(\r\n        () => ({\r\n            transform: [{ translateX: -0.5 * width * offset.value }],\r\n        }),\r\n        [width, offset]\r\n    );\r\n\r\n    // Handle to invoke internal mutations from outside if needed.\r\n    useImperativeHandle(\r\n        ref,\r\n        () => ({\r\n            toLeft: () => setIsRight(false),\r\n            toRight: () => setIsRight(true),\r\n            toLeftImmediately: () => {\r\n                offset.value = 0;\r\n                setIsRight(false);\r\n            },\r\n            toRightImmediately: () => {\r\n                offset.value = 1;\r\n                setIsRight(true);\r\n            },\r\n        }),\r\n        [offset]\r\n    );\r\n\r\n    // Double width row that starts on the left. Translates the right part via status.\r\n    return (\r\n        <Animated.View style={[styles.pages, style, dynamicContainer]} onLayout={(e) => setWidth(e.nativeEvent.layout.width || width)}>\r\n            <View style={styles.equal}>{left}</View>\r\n            <View style={styles.equal}>{right}</View>\r\n        </Animated.View>\r\n    );\r\n});\r\n\r\nconst styles = StyleSheet.create({\r\n    pages: {\r\n        flexDirection: \"row\",\r\n        left: 0,\r\n        width: \"200%\",\r\n        alignItems: \"flex-end\",\r\n    },\r\n    equal: {\r\n        flex: 1,\r\n    },\r\n});\r\n","import { zodResolver } from \"@hookform/resolvers/zod\";\r\nimport { FC, useEffect } from \"react\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet, View, ViewStyle } from \"react-native\";\r\nimport { TextInput } from \"react-native-gesture-handler\";\r\nimport { z } from \"zod\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { Row } from \"../../components/Containers/Row\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { useSentryProfiler } from \"../../sentryHelpers\";\r\nimport { usePostTokenMutation } from \"../../store/authorization.service\";\r\n\r\nconst loginSchema = z.object({\r\n    regno: z.preprocess((a) => parseInt(z.string().parse(a), 10), z.number().positive()),\r\n    username: z.string().min(1),\r\n    password: z.string().min(1),\r\n});\r\n\r\ntype LoginSchema = z.infer<typeof loginSchema>;\r\n\r\nexport type LoginFormProps = {\r\n    style?: ViewStyle;\r\n    close?: () => void;\r\n};\r\n\r\nexport const LoginForm: FC<LoginFormProps> = ({ style, close }) => {\r\n    const { t } = useTranslation(\"Settings\", { keyPrefix: \"login\" });\r\n    const theme = useTheme();\r\n    useSentryProfiler(\"LoginForm\");\r\n\r\n    const {\r\n        control,\r\n        handleSubmit,\r\n        formState: { errors },\r\n    } = useForm<LoginSchema>({\r\n        resolver: zodResolver(loginSchema),\r\n    });\r\n    const [login, result] = usePostTokenMutation();\r\n\r\n    const onSubmit = (data: LoginSchema) => {\r\n        login({\r\n            // TODO: Fix types here.\r\n            RegNo: data.regno,\r\n            Username: data.username,\r\n            Password: data.password,\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (result.isSuccess && close) {\r\n            close();\r\n        }\r\n    }, [result, close]);\r\n\r\n    return (\r\n        <View style={style}>\r\n            <Label type=\"caption\">{t(\"enter_username\")}</Label>\r\n            {errors.username?.message && (\r\n                <Label type=\"minor\" color=\"warning\">\r\n                    {errors.username?.message}\r\n                </Label>\r\n            )}\r\n            <Controller\r\n                control={control}\r\n                name={\"username\"}\r\n                rules={{\r\n                    required: true,\r\n                }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        style={[styles.marginAfter, styles.input]}\r\n                        placeholder={t(\"hint_username\")}\r\n                        placeholderTextColor={theme.soften}\r\n                        onChangeText={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                        autoCapitalize={\"none\"}\r\n                    />\r\n                )}\r\n            />\r\n\r\n            <Label type=\"caption\">{t(\"enter_reg\")}</Label>\r\n            {errors.regno?.message && (\r\n                <Label type=\"minor\" color=\"warning\">\r\n                    {errors.regno?.message}\r\n                </Label>\r\n            )}\r\n\r\n            <Controller\r\n                control={control}\r\n                name={\"regno\"}\r\n                rules={{\r\n                    required: true,\r\n                }}\r\n                render={({ field: { onChange, onBlur, value } }) => (\r\n                    <TextInput\r\n                        style={[styles.marginAfter, styles.input]}\r\n                        placeholder={t(\"hint_reg\")}\r\n                        placeholderTextColor={theme.soften}\r\n                        onChangeText={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value?.toString()}\r\n                        autoComplete={\"username\"}\r\n                        autoCapitalize={\"none\"}\r\n                        textContentType={\"username\"}\r\n                        keyboardType={\"numeric\"}\r\n                    />\r\n                )}\r\n            />\r\n            <Label type=\"caption\">{t(\"enter_password\")}</Label>\r\n            {errors.password?.message && (\r\n                <Label type=\"minor\" color=\"warning\">\r\n                    {errors.password?.message}\r\n                </Label>\r\n            )}\r\n\r\n            <Controller\r\n                control={control}\r\n                name={\"password\"}\r\n                rules={{\r\n                    required: true,\r\n                }}\r\n                render={({ field: { onChange, onBlur, value, ...field } }) => (\r\n                    <TextInput\r\n                        {...field}\r\n                        style={[styles.marginAfter, styles.input]}\r\n                        selectTextOnFocus\r\n                        placeholder={t(\"hint_password\")}\r\n                        placeholderTextColor={theme.soften}\r\n                        onChangeText={onChange}\r\n                        onBlur={onBlur}\r\n                        value={value}\r\n                        autoComplete={\"password\"}\r\n                        secureTextEntry\r\n                        autoCapitalize={\"none\"}\r\n                        textContentType={\"password\"}\r\n                        contextMenuHidden={false}\r\n                    />\r\n                )}\r\n            />\r\n            {result.error && (\r\n                <Label type=\"minor\" color=\"warning\">\r\n                    {t(\"login_error\")}\r\n                </Label>\r\n            )}\r\n            {result.isLoading && <Label>{t(\"logging_in\")}</Label>}\r\n            <Row style={styles.marginBefore}>\r\n                {close && (\r\n                    <Button style={styles.rowLeft} outline icon=\"chevron-left\" onPress={close}>\r\n                        {t(\"back_button\")}\r\n                    </Button>\r\n                )}\r\n                <Button style={styles.rowRight} outline={false} icon=\"login\" onPress={handleSubmit(onSubmit)}>\r\n                    {t(\"login_button\")}\r\n                </Button>\r\n            </Row>\r\n            <Label mt={15} variant=\"narrow\">\r\n                {t(\"login_hint\")}\r\n            </Label>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const PagerLogin: FC<{ close: () => void }> = ({ close }) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <LoginForm close={close} />\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        padding: 30,\r\n    },\r\n    marginAfter: {\r\n        marginBottom: 16,\r\n    },\r\n    input: {\r\n        width: \"100%\",\r\n        borderBottomColor: \"black\",\r\n        borderBottomWidth: 1,\r\n        paddingVertical: 8,\r\n    },\r\n    marginBefore: {\r\n        marginTop: 16,\r\n    },\r\n    rowLeft: {\r\n        flex: 1,\r\n        marginRight: 8,\r\n    },\r\n    rowRight: {\r\n        flex: 1,\r\n        marginLeft: 8,\r\n    },\r\n});\r\n","import { chunk } from \"lodash\";\r\nimport { FC, useMemo } from \"react\";\r\nimport { StyleProp, StyleSheet, View, ViewStyle } from \"react-native\";\r\n\r\nimport { Col } from \"./Col\";\r\nimport { Row } from \"./Row\";\r\n\r\n/**\r\n * Arguments to the grid.\r\n */\r\nexport type GridProps = {\r\n    /**\r\n     * The style passed to the root column.\r\n     */\r\n    style?: StyleProp<ViewStyle>;\r\n    /**\r\n     * The number of columns to distribute as.\r\n     */\r\n    cols?: number;\r\n};\r\n\r\nexport const Grid: FC<GridProps> = ({ style, cols = 2, children }) => {\r\n    // Get an array of children, padded for necessary chunks.\r\n    const childrenArray = useMemo(() => {\r\n        const result = Array.isArray(children) ? [...children] : [children];\r\n        while (result.length % cols !== 0) result.push(null);\r\n        return result;\r\n    }, [children]);\r\n\r\n    return (\r\n        <Col style={style} type=\"stretch\">\r\n            {chunk(childrenArray, cols).map((row, y) => (\r\n                <Row key={y} style={styles.distributed} type=\"stretch\">\r\n                    {row.map((item, y) => (\r\n                        <View key={y} style={styles.distributed}>\r\n                            {item}\r\n                        </View>\r\n                    ))}\r\n                </Row>\r\n            ))}\r\n        </Col>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    distributed: {\r\n        flex: 1,\r\n    },\r\n});\r\n","import { FC, useEffect, useRef } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet, View } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { useGetCommunicationsQuery } from \"../../store/eurofurence.service\";\r\n\r\ntype PrivateMessageLinkerProps = {\r\n    open?: boolean;\r\n    onOpenMessages?: () => void;\r\n};\r\n\r\n/**\r\n * Creates a link to the private messages screen\r\n * @constructor\r\n */\r\nexport const PrivateMessageLinker: FC<PrivateMessageLinkerProps> = ({ onOpenMessages, open }) => {\r\n    const prevOpen = useRef(open);\r\n    const { t } = useTranslation(\"Menu\");\r\n    const { unread, refetch } = useGetCommunicationsQuery(undefined, {\r\n        selectFromResult: (query) => ({\r\n            ...query,\r\n            unread: query.data?.filter((it) => it.ReadDateTimeUtc === null),\r\n        }),\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (open === true && prevOpen.current !== open) {\r\n            console.debug(\"Fetching new private messages\");\r\n            refetch();\r\n        }\r\n        prevOpen.current = open;\r\n        console.debug(\"Tab open has changed status\", open);\r\n    }, [open]);\r\n\r\n    return (\r\n        <View style={{ padding: 30 }}>\r\n            <Label variant={unread?.length ? \"bold\" : undefined}>{t(\"messages\", { count: unread?.length ?? 0 })}</Label>\r\n            <Button style={styles.marginBefore} icon={unread?.length ? \"email-multiple-outline\" : \"email-open-multiple-outline\"} onPress={onOpenMessages}>\r\n                {t(\"open_messages\")}\r\n            </Button>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    marginAfter: {\r\n        marginBottom: 16,\r\n    },\r\n    marginBefore: {\r\n        marginTop: 16,\r\n    },\r\n    rowLeft: {\r\n        flex: 1,\r\n        marginRight: 8,\r\n    },\r\n    rowRight: {\r\n        flex: 1,\r\n        marginLeft: 8,\r\n    },\r\n});\r\n","import { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet, View } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { Col } from \"../../components/Containers/Col\";\r\nimport { Grid } from \"../../components/Containers/Grid\";\r\nimport { Tab } from \"../../components/Containers/Tab\";\r\nimport { useTabs } from \"../../components/Containers/Tabs\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { selectBrowseableMaps } from \"../../store/eurofurence.selectors\";\r\nimport { RecordId } from \"../../store/eurofurence.types\";\r\nimport { PrivateMessageLinker } from \"../PrivateMessages/PrivateMessageLinker\";\r\n\r\n/**\r\n * Props to the pager.\r\n */\r\nexport type PagerMenuProps = {\r\n    onMessages?: () => void;\r\n    onLogin?: () => void;\r\n    onInfo?: () => void;\r\n    onCatchEmAll?: () => void;\r\n    onServices?: () => void;\r\n    onAbout?: () => void;\r\n    onSettings?: () => void;\r\n    onMap?: (id: RecordId) => void;\r\n};\r\n\r\nexport const PagerPrimary: FC<PagerMenuProps> = ({ onMessages, onLogin, onInfo, onCatchEmAll, onServices, onAbout, onSettings, onMap, children }) => {\r\n    const { t } = useTranslation(\"Menu\");\r\n    const loggedIn = useAppSelector((state) => state.authorization.isLoggedIn);\r\n    const maps = useAppSelector(selectBrowseableMaps);\r\n    const tabs = useTabs();\r\n\r\n    return (\r\n        <Col type=\"stretch\">\r\n            {loggedIn ? (\r\n                <PrivateMessageLinker onOpenMessages={onMessages} open={tabs.isOpen} />\r\n            ) : (\r\n                <View style={{ padding: 30 }}>\r\n                    <Label style={styles.marginBefore} type=\"caption\">\r\n                        {t(\"not_logged_in\")}\r\n                    </Label>\r\n                    <Button style={styles.marginBefore} icon=\"login\" onPress={onLogin}>\r\n                        {t(\"logged_in_now\")}\r\n                    </Button>\r\n                </View>\r\n            )}\r\n            <Grid cols={3} style={{ alignSelf: \"stretch\" }}>\r\n                <Tab icon=\"information-outline\" text={t(\"info\")} onPress={onInfo} />\r\n                <Tab icon=\"paw\" text={t(\"catch_em\")} onPress={onCatchEmAll} />\r\n                <Tab icon=\"book-outline\" text={t(\"services\")} onPress={onServices} />\r\n                <Tab icon=\"card-account-details-outline\" text={t(\"about\")} onPress={onAbout} />\r\n                <Tab icon=\"cog\" text={t(\"settings\")} onPress={onSettings} />\r\n                {children}\r\n            </Grid>\r\n            <Col style={{ padding: 30, alignItems: \"stretch\" }}>\r\n                {maps.map((it) => (\r\n                    <Button key={it.Id} style={{ marginVertical: 10 }} icon={\"map\"} onPress={() => onMap && onMap(it.Id)}>\r\n                        {it.Description}\r\n                    </Button>\r\n                ))}\r\n            </Col>\r\n        </Col>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    marginAfter: {\r\n        marginBottom: 16,\r\n    },\r\n    marginBefore: {\r\n        marginTop: 16,\r\n    },\r\n    rowLeft: {\r\n        flex: 1,\r\n        marginRight: 8,\r\n    },\r\n    rowRight: {\r\n        flex: 1,\r\n        marginLeft: 8,\r\n    },\r\n});\r\n","import { FC, RefObject, useMemo, useRef } from \"react\";\r\nimport { Linking } from \"react-native\";\r\n\r\nimport { Pager, PagerRef } from \"../../components/Containers/Pager\";\r\nimport { Tab } from \"../../components/Containers/Tab\";\r\nimport { TabsRef } from \"../../components/Containers/Tabs\";\r\nimport { useAdditionalServices } from \"../../hooks/useAdditionalServices\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\nimport { useFursuitGames } from \"../../hooks/useFursuitGames\";\r\nimport { RecordId } from \"../../store/eurofurence.types\";\r\nimport { PagerLogin } from \"./PagerLogin\";\r\nimport { PagerPrimary } from \"./PagerPrimary\";\r\n\r\nexport type MainMenuProps = {\r\n    tabs: RefObject<TabsRef>;\r\n};\r\n\r\nexport const MainMenu: FC<MainMenuProps> = ({ tabs }) => {\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    const pager = useRef<PagerRef>(null);\r\n    const openFursuitGames = useFursuitGames();\r\n    const openAdditionalServices = useAdditionalServices();\r\n    const on = useMemo(\r\n        () => ({\r\n            login: () => pager.current?.toRight(),\r\n            loginBack: () => pager.current?.toLeft(),\r\n            messages: () => {\r\n                navigation.navigate(\"PrivateMessageList\");\r\n                return tabs.current?.close();\r\n            },\r\n            info: () => {\r\n                navigation.navigate(\"KnowledgeGroups\", {});\r\n                tabs.current?.close();\r\n            },\r\n            catchEmAll: () => {\r\n                openFursuitGames();\r\n                tabs.current?.close();\r\n            },\r\n            services: () => {\r\n                openAdditionalServices();\r\n                return tabs.current?.close();\r\n            },\r\n            settings: () => {\r\n                navigation.navigate(\"Settings\");\r\n                tabs.current?.close();\r\n            },\r\n            about: () => {\r\n                navigation.navigate(\"About\");\r\n                tabs.current?.close();\r\n            },\r\n            map: (target: RecordId) => {\r\n                navigation.navigate(\"Map\", { id: target });\r\n                tabs.current?.close();\r\n            },\r\n        }),\r\n        [tabs, pager, openFursuitGames, openAdditionalServices]\r\n    );\r\n\r\n    return (\r\n        <Pager\r\n            ref={pager}\r\n            left={\r\n                <PagerPrimary\r\n                    onMessages={on.messages}\r\n                    onLogin={on.login}\r\n                    onInfo={on.info}\r\n                    onCatchEmAll={on.catchEmAll}\r\n                    onServices={on.services}\r\n                    onSettings={on.settings}\r\n                    onAbout={on.about}\r\n                    onMap={on.map}\r\n                >\r\n                    <Tab icon={\"twitter\"} text={\"Twitter\"} onPress={() => Linking.openURL(\"https://twitter.com/eurofurence\")} />\r\n                </PagerPrimary>\r\n            }\r\n            right={<PagerLogin close={on.loginBack} />}\r\n        />\r\n    );\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { Linking } from \"react-native\";\r\n\r\nimport { appBase } from \"../configuration\";\r\nimport { useAppSelector } from \"../store\";\r\n\r\nexport const useFursuitGames = () => {\r\n    const token = useAppSelector((state) => state.authorization.token);\r\n    return useCallback(() => {\r\n        if (token === undefined) {\r\n            alert(\"You are not logged in.\");\r\n            return;\r\n        }\r\n        Linking.openURL(`${appBase}/companion/#/login?embedded=false&returnPath=/collect&token=${token}`).catch(console.error);\r\n    }, [token]);\r\n};\r\n","import { useCallback } from \"react\";\r\nimport { Linking } from \"react-native\";\r\n\r\nimport { appBase } from \"../configuration\";\r\nimport { useAppSelector } from \"../store\";\r\n\r\nexport const useAdditionalServices = () => {\r\n    const token = useAppSelector((state) => state.authorization.token);\r\n\r\n    return useCallback(() => {\r\n        if (token === undefined) {\r\n            alert(\"You are not logged in.\");\r\n            return;\r\n        }\r\n        Linking.openURL(`${appBase}/companion/#/login?embedded=false&returnPath=/&token=${token}`).catch(console.error);\r\n    }, [token]);\r\n};\r\n","import { CompositeScreenProps } from \"@react-navigation/core\";\r\nimport { NavigatorScreenParams } from \"@react-navigation/native\";\r\nimport { StackScreenProps } from \"@react-navigation/stack\";\r\nimport React, { FC, RefObject, useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet, View } from \"react-native\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { TabsRef } from \"../components/Containers/Tabs\";\r\nimport { createTabNavigator, TabScreenProps } from \"../components/Navigators/TabsNavigator\";\r\nimport { DealersTabsScreen, DealersTabsScreenParams } from \"./Dealers/DealersTabsScreen\";\r\nimport { EventsTabsScreen, EventsTabsScreenParams } from \"./Events/EventsTabsScreen\";\r\nimport { HomeScreen, ScreenHomeParams } from \"./Home/HomeScreen\";\r\nimport { MainMenu } from \"./MainMenu/MainMenu\";\r\nimport { ScreenStartParamsList } from \"./ScreenStart\";\r\n\r\n/**\r\n * Available routes.\r\n */\r\nexport type ScreenAreasParamsList = {\r\n    /**\r\n     * Area home screen, should show announcements and personalized content.\r\n     */\r\n    Home: ScreenHomeParams;\r\n\r\n    /**\r\n     * Events list.\r\n     */\r\n    Events: EventsTabsScreenParams;\r\n\r\n    /**\r\n     * Dealers list.\r\n     */\r\n    Dealers: DealersTabsScreenParams;\r\n};\r\n\r\n/**\r\n * Create an instance of the tabs-navigator with the provided routes.\r\n */\r\nexport const AreasNavigator = createTabNavigator<ScreenAreasParamsList>();\r\n\r\n/**\r\n * Params handled by the screen in route. Delegated parameters for the areas.\r\n */\r\nexport type ScreenAreasParams = NavigatorScreenParams<ScreenAreasParamsList>;\r\n\r\n/**\r\n * The properties to the screen as a component. Delegated parameters for the areas. TODO: Verify.\r\n */\r\nexport type ScreenAreasProps =\r\n    // Route carrying from start screen at \"Areas\", navigation via own parameter list and parent.\r\n    CompositeScreenProps<StackScreenProps<ScreenStartParamsList, \"Areas\">, TabScreenProps<ScreenAreasParamsList> & StackScreenProps<ScreenStartParamsList>>;\r\n\r\nexport const ScreenAreas: FC<ScreenAreasProps> = React.memo(() => {\r\n    const { t } = useTranslation(\"Menu\");\r\n\r\n    // Compute safe inset at the bottom and convert to style.\r\n    const bottom = useSafeAreaInsets()?.bottom;\r\n    const tabsStyle = useMemo(() => ({ paddingBottom: Math.max(bottom, 30) }), [bottom]);\r\n\r\n    return (\r\n        <View style={StyleSheet.absoluteFill}>\r\n            <AreasNavigator.Navigator tabsStyle={tabsStyle} textMore={t(\"more\")} textLess={t(\"less\")} more={(tabs: RefObject<TabsRef>) => <MainMenu tabs={tabs} />}>\r\n                <AreasNavigator.Screen name=\"Home\" options={{ title: t(\"home\"), icon: \"home\" }} component={HomeScreen} />\r\n                <AreasNavigator.Screen name=\"Events\" options={{ title: t(\"events\"), icon: \"calendar\" }} component={EventsTabsScreen} />\r\n                <AreasNavigator.Screen name=\"Dealers\" options={{ title: t(\"dealers\"), icon: \"cart-outline\" }} component={DealersTabsScreen} />\r\n            </AreasNavigator.Navigator>\r\n        </View>\r\n    );\r\n});\r\n","import moment from \"moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet, View } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { Row } from \"../../components/Containers/Row\";\r\nimport { useSynchronizer } from \"../../components/Synchronization/SynchronizationProvider\";\r\nimport { useAppSelector } from \"../../store\";\r\n\r\nexport const CacheStats = () => {\r\n    const { t } = useTranslation(\"Settings\");\r\n    const sync = useSynchronizer();\r\n    const cache = useAppSelector((state) => state.eurofurenceCache);\r\n    return (\r\n        <View testID={\"CacheStats\"}>\r\n            <Section title={t(\"cache.title\")} subtitle={t(\"cache.subtitle\", { time: moment(cache.lastSynchronised).format(\"lll\") })} />\r\n\r\n            <Label mb={5}>{t(\"cache.cache_state\", { state: cache.state })}</Label>\r\n\r\n            <Label>{t(\"cache.cache_item\", { count: cache.events.ids.length, type: \"event\" })}</Label>\r\n            <Label>{t(\"cache.cache_item\", { count: cache.eventRooms.ids.length, type: \"room\" })}</Label>\r\n            <Label>{t(\"cache.cache_item\", { count: cache.eventDays.ids.length, type: \"day\" })}</Label>\r\n            <Label>{t(\"cache.cache_item\", { count: cache.eventTracks.ids.length, type: \"track\" })}</Label>\r\n            <Label>{t(\"cache.cache_item\", { count: cache.knowledgeGroups.ids.length, type: \"knowledge group\" })}</Label>\r\n            <Label>{t(\"cache.cache_item\", { count: cache.knowledgeEntries.ids.length, type: \"knowledge entry\" })}</Label>\r\n            <Label>{t(\"cache.cache_item\", { count: cache.dealers.ids.length, type: \"dealer\" })}</Label>\r\n            <Label>{t(\"cache.cache_item\", { count: cache.maps.ids.length, type: \"map\" })}</Label>\r\n            <Label>{t(\"cache.cache_item\", { count: cache.images.ids.length, type: \"image\" })}</Label>\r\n\r\n            <Row style={styles.container}>\r\n                <Button onPress={sync.synchronize} icon={\"sync\"} style={styles.button}>\r\n                    {t(\"cache.synchronize\")}\r\n                </Button>\r\n                <Button icon=\"trash-can-outline\" style={styles.button} onPress={() => alert(t(\"cache.reset_alert\"))} onLongPress={sync.clear}>\r\n                    {t(\"cache.reset\")}\r\n                </Button>\r\n            </Row>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        marginVertical: 10,\r\n    },\r\n    button: {\r\n        flex: 1,\r\n        marginHorizontal: 5,\r\n    },\r\n});\r\n","import { useCallback } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet, Vibration, View } from \"react-native\";\r\n\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store\";\r\nimport { useCreateSyncRequestMutation, useSendPrivateMessageMutation } from \"../../store/authorization.service\";\r\nimport { logout } from \"../../store/authorization.slice\";\r\n\r\nexport const DevButtons = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { t } = useTranslation(\"Settings\", { keyPrefix: \"dev_buttons\" });\r\n    const [createSync, syncResult] = useCreateSyncRequestMutation();\r\n    const [sendMessage, messageResult] = useSendPrivateMessageMutation();\r\n    const me = useAppSelector((state) => state.authorization.uid);\r\n\r\n    const onSendMessage = useCallback(() => {\r\n        if (me === undefined) {\r\n            alert(t(\"no_auth_alert\"));\r\n            return;\r\n        }\r\n\r\n        sendMessage({\r\n            RecipientUid: me,\r\n            AuthorName: `tester`,\r\n            Subject: t(\"test_message_subject\"),\r\n            Message: t(\"test_message_content\"),\r\n        });\r\n\r\n        alert(`Sent a message to ${me}`);\r\n    }, [me]);\r\n    const onLogout = useCallback(() => {\r\n        dispatch(logout());\r\n    }, []);\r\n    return (\r\n        <View>\r\n            <Section title={t(\"title\")} subtitle={t(\"subtitle\")} />\r\n\r\n            <Button\r\n                style={styles.button}\r\n                icon=\"alert\"\r\n                onPress={() => alert(t(\"sync_alert_error\"))}\r\n                onLongPress={() => {\r\n                    console.log(\"Forcing  FCM sync devices\");\r\n                    Vibration.vibrate(400);\r\n                    createSync(undefined);\r\n                    alert(t(\"sync_alert_done\"));\r\n                }}\r\n            >\r\n                {t(\"sync\", { status: syncResult.status })}\r\n            </Button>\r\n\r\n            <Button\r\n                style={styles.button}\r\n                icon=\"message-alert\"\r\n                onPress={() => {\r\n                    onSendMessage();\r\n                }}\r\n            >\r\n                {t(\"send_private_message\", { status: messageResult.status })}\r\n            </Button>\r\n\r\n            {/* TODO: We should have a proper button for this. */}\r\n            <Button\r\n                style={styles.button}\r\n                onPress={() => {\r\n                    onLogout();\r\n                }}\r\n            >\r\n                Logout\r\n            </Button>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        marginVertical: 5,\r\n    },\r\n});\r\n","import moment from \"moment\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { useAppSelector } from \"../../store\";\r\n\r\nexport const RemoteMessages = () => {\r\n    const { t } = useTranslation(\"Settings\", { keyPrefix: \"remote_messages\" });\r\n    const messages = useAppSelector((state) => state.background.fcmMessages);\r\n\r\n    return (\r\n        <View>\r\n            <Section title={t(\"title\")} subtitle={t(\"subtitle\")} icon=\"message-flash\" />\r\n\r\n            {messages.length === 0 && <Label mb={15}>{t(\"no_messages\")}</Label>}\r\n\r\n            {messages.map((message) => (\r\n                <Label mb={15} key={message.dateReceived}>{`${moment(message.dateReceived).format(\"llll\")} - ${JSON.stringify(message.content)}`}</Label>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n","import { isDevice } from \"expo-device\";\r\nimport { getAllScheduledNotificationsAsync, NotificationRequest } from \"expo-notifications\";\r\nimport moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { withPlatform } from \"../../hoc/withPlatform\";\r\n\r\n/**\r\n * Shows all scheduled notifications\r\n * @constructor\r\n */\r\nexport const ScheduledNotifications = () => {\r\n    const { t } = useTranslation(\"Settings\", { keyPrefix: \"notifications\" });\r\n    const [notifications, setNotifications] = useState<NotificationRequest[]>([]);\r\n\r\n    useEffect(() => {\r\n        if (!isDevice) {\r\n            return;\r\n        }\r\n        getAllScheduledNotificationsAsync().then((n) => setNotifications(n));\r\n    }, []);\r\n\r\n    return (\r\n        <View>\r\n            <Section title={t(\"title\")} subtitle={t(\"subtitle\")} icon=\"notification-clear-all\" />\r\n            {!notifications.length && <Label mb={15}>{t(\"no_notifications\")}</Label>}\r\n\r\n            {notifications.map((item) => (\r\n                <Label key={item.identifier} mb={15}>\r\n                    {/* @ts-expect-error Value does not really exist yet */}\r\n                    {t(\"notification_item\", { identifier: item.identifier, time: moment(item.trigger?.value).format(\"llll\") })}\r\n                </Label>\r\n            ))}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport const PlatformScheduledNotifications = withPlatform(ScheduledNotifications, [\"android\", \"ios\"]);\r\n","import moment from \"moment\";\r\nimport { useMemo } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet, View } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { Col } from \"../../components/Containers/Col\";\r\nimport { Row } from \"../../components/Containers/Row\";\r\nimport { conName } from \"../../configuration\";\r\nimport { useNow } from \"../../hooks/useNow\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store\";\r\nimport { eventDaysSelectors } from \"../../store/eurofurence.selectors\";\r\nimport { enableTimeTravel, ONE_HOUR, ONE_MINUTE, resetTravel, travelBackward, travelForward, travelToDate } from \"../../store/timetravel.slice\";\r\n\r\n/**\r\n * A self-contained component to adjust time travel settings. Useful for development.\r\n */\r\nexport const TimeTravel = () => {\r\n    const dispatch = useAppDispatch();\r\n    const { t } = useTranslation(\"TimeTravel\");\r\n    const [now] = useNow();\r\n    const { amount, enabled } = useAppSelector((state) => state.timetravel);\r\n    const days = useAppSelector(eventDaysSelectors.selectAll);\r\n    const [weekBefore, weekAfter] = useMemo(\r\n        () =>\r\n            !days.length\r\n                ? [null, null]\r\n                : [\r\n                      moment(days[0].Date).subtract(1, \"week\").toISOString(),\r\n                      moment(days[days.length - 1].Date)\r\n                          .add(1, \"week\")\r\n                          .toISOString(),\r\n                  ],\r\n        [days]\r\n    );\r\n\r\n    return (\r\n        <View testID={\"TimeTravel\"}>\r\n            <Section title={t(\"title\")} icon={\"airplane\"} subtitle={t(\"subtitle\")} />\r\n            <Label mb={5}>{t(\"originalTime\", { time: moment().format(\"llll\") })}</Label>\r\n            <Label mb={5}>{t(\"currentTime\", { time: now.format(\"llll\") })}</Label>\r\n            <Label mb={5}>{t(\"difference\", { diff: moment.duration(amount, \"millisecond\").humanize() })}</Label>\r\n            <Row style={styles.row}>\r\n                <Button style={styles.button} outline={enabled} onPress={() => dispatch(enableTimeTravel(!enabled))}>\r\n                    {enabled ? t(\"disable\") : t(\"enable\")}\r\n                </Button>\r\n                <Button style={styles.button} onPress={() => dispatch(resetTravel())}>\r\n                    {t(\"reset\")}\r\n                </Button>\r\n            </Row>\r\n            <Row style={styles.row}>\r\n                <Button style={styles.button} icon=\"chevron-left\" onPress={() => dispatch(travelBackward(ONE_HOUR))}>\r\n                    1h\r\n                </Button>\r\n                <Button style={styles.button} icon=\"chevron-left\" onPress={() => dispatch(travelBackward(ONE_MINUTE))}>\r\n                    1m\r\n                </Button>\r\n                <Button style={styles.button} iconRight=\"chevron-right\" onPress={() => dispatch(travelForward(ONE_MINUTE))}>\r\n                    1m\r\n                </Button>\r\n                <Button style={styles.button} iconRight=\"chevron-right\" onPress={() => dispatch(travelForward(ONE_HOUR))}>\r\n                    1h\r\n                </Button>\r\n            </Row>\r\n            <Col style={styles.row} type=\"stretch\">\r\n                {!weekBefore ? null : (\r\n                    <Button style={styles.button} icon=\"calendar-arrow-left\" onPress={() => dispatch(travelToDate(weekBefore))}>\r\n                        {t(\"week_before\", { conName })}\r\n                    </Button>\r\n                )}\r\n                {!days\r\n                    ? null\r\n                    : days.map((day) => (\r\n                          <Button key={day.Id} style={styles.button} icon=\"calendar-cursor\" onPress={() => dispatch(travelToDate(moment(day.Date).toISOString()))}>\r\n                              {day.Name}\r\n                          </Button>\r\n                      ))}\r\n                {!weekAfter ? null : (\r\n                    <Button style={styles.button} icon=\"calendar-arrow-right\" onPress={() => dispatch(travelToDate(weekAfter))}>\r\n                        {t(\"week_after\", { conName })}\r\n                    </Button>\r\n                )}\r\n            </Col>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    button: {\r\n        flex: 1,\r\n        margin: 5,\r\n        flexGrow: 1,\r\n    },\r\n    row: {\r\n        marginTop: 15,\r\n    },\r\n});\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport * as Localization from \"expo-localization\";\r\nimport i18next from \"i18next\";\r\nimport { noop, partial } from \"lodash\";\r\nimport moment from \"moment\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport { match, P } from \"ts-pattern\";\r\n\r\n// Polyfill for Plural Rules\r\nimport \"intl-pluralrules\";\r\n\r\n// Translation files\r\nimport da from \"./translations.da.json\";\r\nimport de from \"./translations.de.json\";\r\nimport en from \"./translations.en.json\";\r\nimport it from \"./translations.it.json\";\r\nimport nl from \"./translations.nl.json\";\r\nimport pl from \"./translations.pl.json\";\r\n\r\n// Moment Locale\r\nimport \"moment/locale/pl\";\r\nimport \"moment/locale/it\";\r\nimport \"moment/locale/da\";\r\nimport \"moment/locale/de\";\r\nimport \"moment/locale/en-gb\";\r\nimport \"moment/locale/nl\";\r\n\r\n/**\r\n * The translations we provide.\r\n */\r\nexport type Translations = \"en\" | \"nl\" | \"pl\" | \"it\" | \"da\" | \"de\";\r\n\r\n/**\r\n * Set the locale in a managed way.\r\n *\r\n * Provided translations resolve. English is set to en-gb and all other values are always en-gb\r\n */\r\nexport const setMomentLocale = (language: Translations | string) =>\r\n    match(language)\r\n        .with(\"it\", \"nl\", \"da\", \"de\", \"pl\", (it) => moment.locale(it))\r\n        .with(\"en\", () => moment.locale(\"en-gb\"))\r\n        .with(P.string, () => moment.locale(\"en-gb\"))\r\n        .exhaustive();\r\n\r\nsetMomentLocale(Localization.locale);\r\n\r\nconst logger = partial(console.log, \"i18next\");\r\n\r\nconst I18NEXT_LANGAGUE_KEY = \"i18next\";\r\n\r\n/**\r\n * Initialized promise to the i18next translate function.\r\n */\r\nexport const i18t = i18next\r\n    .use(initReactI18next)\r\n    .use({\r\n        type: \"languageDetector\",\r\n        async: true,\r\n        init: noop,\r\n        detect: async (callback: (language: string) => void) => {\r\n            // Get fallback and selected from localization and storage.\r\n            const fallback = Localization.locale.split(\"-\")[0];\r\n            const persisted = await AsyncStorage.getItem(I18NEXT_LANGAGUE_KEY);\r\n\r\n            // Log what was detected and stored.\r\n            logger(`Detecting languages, saved: ${persisted}, fallback ${fallback}`);\r\n\r\n            // Set moment locale with applied reasonable defaults, run callback with actual.\r\n            setMomentLocale(persisted ?? fallback);\r\n            return callback(persisted ?? fallback);\r\n        },\r\n        cacheUserLanguage: async (lng: string) =>\r\n            AsyncStorage.setItem(I18NEXT_LANGAGUE_KEY, lng)\r\n                .then(() => logger(\"Saving langauge for next time\", lng))\r\n                .catch((e) => logger(\"Failed to save language\", lng, e)),\r\n    })\r\n    .init({\r\n        fallbackLng: \"en\",\r\n        initImmediate: true,\r\n        defaultNS: \"Home\",\r\n        resources: {\r\n            en,\r\n            nl,\r\n            de,\r\n            it,\r\n            pl,\r\n            da,\r\n        },\r\n        react: {\r\n            useSuspense: false,\r\n        },\r\n        parseMissingKeyHandler: (key) => {\r\n            console.warn(\"react-i18next\", \"Key not found.\", key);\r\n            return key;\r\n        },\r\n    });\r\n\r\n/**\r\n * Re-export i18next.\r\n */\r\nexport default i18next;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StyleSheet } from \"react-native\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { Col } from \"../../components/Containers/Col\";\r\nimport { Row } from \"../../components/Containers/Row\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store\";\r\nimport { setTheme } from \"../../store/settings.slice\";\r\n\r\nconst useableThemes = [undefined, \"light\", \"dark\"];\r\nexport const ThemePicker = () => {\r\n    const { t } = useTranslation(\"Settings\", { keyPrefix: \"theme\" });\r\n    const dispatch = useAppDispatch();\r\n    const theme = useAppSelector((state) => state.settingsSlice.theme);\r\n\r\n    return (\r\n        <Col type={\"stretch\"}>\r\n            <Label variant={\"bold\"}>{t(\"title\")}</Label>\r\n            <Label variant={\"narrow\"}>{t(\"description\")}</Label>\r\n\r\n            <Row type={\"center\"} variant={\"center\"} style={styles.selector}>\r\n                <Button style={[styles.button, styles.left]} outline={theme === undefined} onPress={() => dispatch(setTheme(undefined))}>\r\n                    {t(\"system\")}\r\n                </Button>\r\n                {!useableThemes.includes(theme) && (\r\n                    <Button style={styles.button} outline onPress={() => setTheme(theme)}>\r\n                        {_.capitalize(theme)}\r\n                    </Button>\r\n                )}\r\n                <Button style={styles.button} outline={theme === \"light\"} onPress={() => dispatch(setTheme(\"light\"))}>\r\n                    {t(\"light\")}\r\n                </Button>\r\n                <Button style={[styles.button, styles.right]} outline={theme === \"dark\"} onPress={() => dispatch(setTheme(\"dark\"))}>\r\n                    {t(\"dark\")}\r\n                </Button>\r\n            </Row>\r\n        </Col>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    selector: {\r\n        marginTop: 16,\r\n    },\r\n    button: {\r\n        flexGrow: 1,\r\n        borderRadius: 0,\r\n    },\r\n    left: {\r\n        borderBottomLeftRadius: 16,\r\n        borderTopLeftRadius: 16,\r\n    },\r\n    right: {\r\n        borderTopRightRadius: 16,\r\n        borderBottomRightRadius: 16,\r\n    },\r\n});\r\n","import { Picker } from \"@react-native-picker/picker\";\r\nimport Checkbox from \"expo-checkbox\";\r\nimport { capitalize, noop, orderBy } from \"lodash\";\r\nimport { FC } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Alert, View } from \"react-native\";\r\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\r\n\r\nimport { Label } from \"../../components/Atoms/Label\";\r\nimport { Section } from \"../../components/Atoms/Section\";\r\nimport { Button } from \"../../components/Containers/Button\";\r\nimport { Col } from \"../../components/Containers/Col\";\r\nimport { conName } from \"../../configuration\";\r\nimport { useTheme } from \"../../context/Theme\";\r\nimport { setMomentLocale, Translations } from \"../../i18n\";\r\nimport { captureException } from \"../../sentryHelpers\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store\";\r\nimport { logout } from \"../../store/authorization.slice\";\r\nimport { setAnalytics, toggleDevMenu } from \"../../store/settings.slice\";\r\nimport { LoginForm } from \"../MainMenu/PagerLogin\";\r\nimport { ThemePicker } from \"./ThemePicker\";\r\n\r\ntype Language = {\r\n    code: Translations;\r\n    name: string;\r\n};\r\n\r\nconst languages = orderBy(\r\n    [\r\n        { code: \"en\", name: \"🇬🇧 English\" },\r\n        { code: \"de\", name: \"🇩🇪 Deutsch\" },\r\n        { code: \"nl\", name: \"🇳🇱 Nederlands\" },\r\n        { code: \"it\", name: \"🇮🇹 Italiano\" },\r\n        { code: \"pl\", name: \"🇵🇱 Polski\" },\r\n        { code: \"da\", name: \"🇩🇰 Dansk\" },\r\n    ] as Language[],\r\n    (value) => value.code,\r\n    \"asc\"\r\n);\r\n\r\nconst LoginSettings = () => {\r\n    const { t } = useTranslation(\"Settings\", { keyPrefix: \"login\" });\r\n    const auth = useAppSelector((state) => state.authorization);\r\n    const dispatch = useAppDispatch();\r\n\r\n    if (!auth.isLoggedIn) {\r\n        return (\r\n            <>\r\n                <Label variant={\"bold\"}>{t(\"login\")}</Label>\r\n                <LoginForm />\r\n            </>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Label variant={\"bold\"}>{t(\"logged_in_as\", { username: capitalize(auth.username) })}</Label>\r\n            <Label variant={\"narrow\"}>{t(\"login_description\", { conName })}</Label>\r\n            <Button icon=\"logout\" onPress={() => dispatch(logout())} style={{ marginTop: 15 }}>\r\n                {t(\"logout\")}\r\n            </Button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport const UserSettings = () => {\r\n    const { t, i18n } = useTranslation(\"Settings\");\r\n    const theme = useTheme();\r\n    const dispatch = useAppDispatch();\r\n    const analyticsEnabled = useAppSelector((state) => state.settingsSlice.analytics.enabled);\r\n\r\n    return (\r\n        <View>\r\n            <Section title={t(\"settingsSection\")} icon={\"cog\"} />\r\n            <SettingItem>\r\n                <ThemePicker />\r\n            </SettingItem>\r\n            <SettingItem>\r\n                <TouchableOpacity\r\n                    style={{ flexDirection: \"row\", alignItems: \"center\" }}\r\n                    onPress={() => dispatch(setAnalytics(!analyticsEnabled))}\r\n                    onLongPress={() =>\r\n                        Alert.alert(t(\"developer_settings_alert.title\"), t(\"developer_settings_alert.body\"), [\r\n                            {\r\n                                text: t(\"developer_settings_alert.cancel\"),\r\n                                onPress: noop,\r\n                                style: \"cancel\",\r\n                            },\r\n                            {\r\n                                text: t(\"developer_settings_alert.disable\"),\r\n                                onPress: () => dispatch(toggleDevMenu(false)),\r\n                                style: \"default\",\r\n                            },\r\n                            {\r\n                                text: t(\"developer_settings_alert.enable\"),\r\n                                onPress: () => dispatch(toggleDevMenu(true)),\r\n                                style: \"destructive\",\r\n                            },\r\n                        ])\r\n                    }\r\n                    delayLongPress={1000}\r\n                >\r\n                    <Col style={{ flex: 1 }}>\r\n                        <Label variant={\"bold\"}>{t(\"allowAnalytics\")}</Label>\r\n                        <Label variant={\"narrow\"}>{t(\"allowAnalyticsSubtitle\")}</Label>\r\n                    </Col>\r\n\r\n                    <Checkbox value={analyticsEnabled} />\r\n                </TouchableOpacity>\r\n            </SettingItem>\r\n            <SettingItem>\r\n                <Label variant={\"bold\"}>{t(\"changeLanguage\")}</Label>\r\n                <Label variant={\"narrow\"}>{t(\"currentLanguage\")}</Label>\r\n                <Picker<string>\r\n                    selectedValue={i18n.language}\r\n                    style={{ color: theme.text }}\r\n                    prompt={t(\"changeLanguage\")}\r\n                    onValueChange={(it: string) => {\r\n                        i18n.changeLanguage(it).catch(captureException);\r\n                        setMomentLocale(it);\r\n                    }}\r\n                >\r\n                    {languages.map((it) => (\r\n                        <Picker.Item label={it.name} value={it.code} key={it.code} />\r\n                    ))}\r\n                </Picker>\r\n            </SettingItem>\r\n            <SettingItem>\r\n                <LoginSettings />\r\n            </SettingItem>\r\n        </View>\r\n    );\r\n};\r\n\r\nconst SettingItem: FC = ({ children }) => <View style={{ marginVertical: 10 }}>{children}</View>;\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { Floater } from \"../../components/Containers/Floater\";\r\nimport { Header } from \"../../components/Containers/Header\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { appStyles } from \"../AppStyles\";\r\nimport { CacheStats } from \"./CacheStats\";\r\nimport { DevButtons } from \"./DevButtons\";\r\nimport { RemoteMessages } from \"./RemoteMessages\";\r\nimport { PlatformScheduledNotifications } from \"./ScheduledNotifications\";\r\nimport { TimeTravel } from \"./TimeTravel\";\r\nimport { UserSettings } from \"./UserSettings\";\r\n\r\nexport const SettingsScreen = () => {\r\n    const { t } = useTranslation(\"Settings\");\r\n    const safe = useSafeAreaInsets();\r\n    const showDevMenu = useAppSelector((state): boolean => state.settingsSlice.showDevMenu ?? false);\r\n\r\n    return (\r\n        <ScrollView style={[appStyles.abs, safe]} stickyHeaderIndices={[0]} stickyHeaderHiddenOnScroll>\r\n            <Header>{t(\"header\")}</Header>\r\n            <Floater contentStyle={appStyles.trailer}>\r\n                <UserSettings />\r\n\r\n                {showDevMenu && (\r\n                    <>\r\n                        <CacheStats />\r\n                        <TimeTravel />\r\n                        <PlatformScheduledNotifications />\r\n                        <RemoteMessages />\r\n                        <DevButtons />\r\n                    </>\r\n                )}\r\n            </Floater>\r\n        </ScrollView>\r\n    );\r\n};\r\n","import { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport React, { FC } from \"react\";\r\nimport { StyleSheet, View } from \"react-native\";\r\n\r\nimport { useTheme, useThemeType } from \"../context/Theme\";\r\nimport { CommunicationRecord, RecordId } from \"../store/eurofurence.types\";\r\nimport { AboutScreen } from \"./About\";\r\nimport { ScreenEmptyParams } from \"./Common/ScreenEmpty\";\r\nimport { DealerScreen, DealerScreenParams } from \"./Dealers/DealerScreen\";\r\nimport { EventScreen } from \"./Events/EventScreen\";\r\nimport { FeedbackScreen } from \"./Events/FeedbackScreen\";\r\nimport { KnowledgeEntryScreen } from \"./Knowledge/KnowledgeEntryScreen\";\r\nimport { KnowledgeGroupsScreen } from \"./Knowledge/KnowledgeGroupsScreen\";\r\nimport { MapScreen } from \"./Maps/MapScreen\";\r\nimport { PrivateMessageItemScreen } from \"./PrivateMessages/PrivateMessageItemScreen\";\r\nimport { PrivateMessageListScreen } from \"./PrivateMessages/PrivateMessageListScreen\";\r\nimport { ScreenAreas, ScreenAreasParams } from \"./ScreenAreas\";\r\nimport { SettingsScreen } from \"./Settings/SettingsScreen\";\r\n\r\n/**\r\n * Available routes.\r\n */\r\nexport type ScreenStartParamsList = {\r\n    /**\r\n     * Primary areas.\r\n     */\r\n    Areas: ScreenAreasParams;\r\n\r\n    /**\r\n     * Detail screen for events.\r\n     */\r\n    Event: {\r\n        id: string;\r\n    };\r\n\r\n    EventFeedback: {\r\n        id: string;\r\n    };\r\n\r\n    /**\r\n     * Detail screen for dealer.\r\n     */\r\n    Dealer: DealerScreenParams;\r\n    Settings: ScreenEmptyParams;\r\n    PrivateMessageList: ScreenEmptyParams;\r\n    PrivateMessageItem: {\r\n        id: RecordId;\r\n        message: CommunicationRecord;\r\n    };\r\n    KnowledgeGroups: object;\r\n    KnowledgeEntry: {\r\n        id: RecordId;\r\n    };\r\n    Map: {\r\n        id: RecordId;\r\n        entryId?: RecordId;\r\n        linkId?: number;\r\n    };\r\n    About: undefined;\r\n};\r\n\r\nconst ScreenStartNavigator = createStackNavigator<ScreenStartParamsList>();\r\n\r\n/**\r\n * The properties to the screen as a component. This does not have navigator properties, as it\r\n * is the node initially providing the navigation container.\r\n */\r\nexport type ScreenStartProps = object;\r\n\r\nexport const ScreenStart: FC<ScreenStartProps> = React.memo(() => {\r\n    // Get the theme type for status bar configuration.\r\n    const theme = useTheme();\r\n    const themeType = useThemeType();\r\n\r\n    return (\r\n        <View style={StyleSheet.absoluteFill}>\r\n            <StatusBar backgroundColor={theme.background} style={themeType === \"light\" ? \"dark\" : \"light\"} />\r\n            <ScreenStartNavigator.Navigator screenOptions={{ headerShown: false }}>\r\n                <ScreenStartNavigator.Screen name=\"Areas\" component={ScreenAreas} />\r\n                <ScreenStartNavigator.Screen name=\"Event\" component={EventScreen} />\r\n                <ScreenStartNavigator.Screen name=\"Dealer\" component={DealerScreen} />\r\n                <ScreenStartNavigator.Screen name=\"Settings\" component={SettingsScreen} />\r\n                <ScreenStartNavigator.Screen name=\"PrivateMessageList\" component={PrivateMessageListScreen} />\r\n                <ScreenStartNavigator.Screen name=\"PrivateMessageItem\" component={PrivateMessageItemScreen} />\r\n                <ScreenStartNavigator.Screen name=\"KnowledgeGroups\" component={KnowledgeGroupsScreen} />\r\n                <ScreenStartNavigator.Screen name=\"KnowledgeEntry\" component={KnowledgeEntryScreen} />\r\n                <ScreenStartNavigator.Screen name=\"Map\" component={MapScreen} />\r\n                <ScreenStartNavigator.Screen name=\"About\" component={AboutScreen} />\r\n                <ScreenStartNavigator.Screen name=\"EventFeedback\" component={FeedbackScreen} />\r\n            </ScreenStartNavigator.Navigator>\r\n        </View>\r\n    );\r\n});\r\n","import Constants from \"expo-constants\";\r\nimport * as Analytics from \"expo-firebase-analytics\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { PlatformSentry, captureException } from \"../../sentryHelpers\";\r\nimport { useAppSelector } from \"../../store\";\r\n\r\nexport const AnalyticsManager = () => {\r\n    const user = useAppSelector((state) => state.authorization);\r\n    const enabled = useAppSelector((state) => state.settingsSlice.analytics.enabled);\r\n\r\n    useEffect(() => {\r\n        Analytics.setAnalyticsCollectionEnabled(enabled).catch(captureException);\r\n    }, [enabled]);\r\n\r\n    useEffect(() => {\r\n        PlatformSentry.setUser(\r\n            user\r\n                ? {\r\n                      id: user.uid,\r\n                      username: user.username,\r\n                  }\r\n                : null\r\n        );\r\n        PlatformSentry.setTag(\"appVersionCode\", Constants.manifest?.android?.versionCode);\r\n\r\n        Analytics.setUserId(user?.uid ?? null).catch(captureException);\r\n        Analytics.setUserProperty(\"username\", user?.username ?? null).catch(captureException);\r\n    }, [user]);\r\n\r\n    return null;\r\n};\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { useEffect } from \"react\";\r\nimport { AppState } from \"react-native\";\r\n\r\nimport { withPlatform } from \"../../hoc/withPlatform\";\r\nimport { captureNotificationException } from \"../../sentryHelpers\";\r\nimport { useSynchronizer } from \"../Synchronization/SynchronizationProvider\";\r\n\r\nconst STORAGE_TAG_NAME = \"background_sync_requested\";\r\n\r\n/**\r\n * Requests synchronization at the next possible time. Can be used in non-react\r\n * locations.\r\n */\r\nexport const requestSyncFromBackground = () => AsyncStorage.setItem(STORAGE_TAG_NAME, \"true\");\r\n\r\n/**\r\n * On initialization, checks if a sync was requested from a non-react\r\n * location, such as background tasks.\r\n * @constructor\r\n */\r\nexport const BackgroundSyncManager = () => {\r\n    // Use synchronizer for performing data refresh.\r\n    const { synchronize } = useSynchronizer();\r\n\r\n    // Connect to app state events, check on active.\r\n    useEffect(() => {\r\n        const changed = AppState.addEventListener(\"change\", (appState) => {\r\n            // Not in foreground, skip.\r\n            if (appState !== \"active\") return;\r\n\r\n            // Handle background sync requests.\r\n            (async () => {\r\n                // Get from async storage, the background task will write this as\r\n                // true when a sync request is sent.\r\n                const data = await AsyncStorage.getItem(STORAGE_TAG_NAME);\r\n\r\n                // If was not true, return false, otherwise synchronize, reset, and return true.\r\n                if (data !== \"true\") {\r\n                    return false;\r\n                } else {\r\n                    synchronize();\r\n                    await AsyncStorage.removeItem(STORAGE_TAG_NAME);\r\n                    return true;\r\n                }\r\n            })().then(\r\n                (r) => console.log(\"Sync request checked, requested:\", r),\r\n                (e) => captureNotificationException(\"Sync request could not be checked\", e)\r\n            );\r\n        });\r\n\r\n        return () => {\r\n            // Remove app state subscription.\r\n            changed.remove();\r\n        };\r\n    }, []);\r\n\r\n    return null;\r\n};\r\n\r\nexport const PlatformBackgroundSyncManager = withPlatform(BackgroundSyncManager, [\"android\", \"ios\"]);\r\n","import { FirebaseRemoteMessage, NotificationTrigger, PushNotificationTrigger } from \"expo-notifications\";\r\n\r\n/**\r\n * Notification type message trigger coming in as an FCM remote message.\r\n */\r\nexport type FirebaseMessageTrigger = PushNotificationTrigger & { remoteMessage: FirebaseRemoteMessage };\r\n/**\r\n * FCM remote message with a notification payload.\r\n */\r\nexport type FirebaseNotificationTrigger = FirebaseMessageTrigger & { remoteMessage: { notification: Exclude<FirebaseRemoteMessage[\"notification\"], null> } };\r\n\r\n/**\r\n * FCM remote message with a data payload.\r\n */\r\nexport type FirebaseDataTrigger = FirebaseMessageTrigger & { remoteMessage: { data: Exclude<FirebaseRemoteMessage[\"data\"], null> } };\r\n\r\n/**\r\n * Asserts object is a trigger.\r\n * @param object The object to assert.\r\n */\r\nexport const isTrigger = (object: any): object is NotificationTrigger => typeof object?.type === \"string\";\r\n\r\n/**\r\n * Asserts remote message is notification, checks that type is push and\r\n * that trigger.remoteMessage.notification is a non-null object.\r\n * @param trigger The trigger to assert.\r\n */\r\nexport const isTriggerWithNotification = (trigger: NotificationTrigger): trigger is FirebaseNotificationTrigger =>\r\n    // Is push trigger.\r\n    trigger.type === \"push\" &&\r\n    // Is for android.\r\n    \"remoteMessage\" in trigger &&\r\n    // Has non-null notification.\r\n    typeof trigger.remoteMessage.notification === \"object\" &&\r\n    trigger.remoteMessage.notification !== null;\r\n\r\n/**\r\n * Asserts remote message is data, checks that type is push and\r\n * that trigger.remoteMessage.data is a non-null object.\r\n * @param trigger The trigger to assert.\r\n */\r\nexport const isTriggerWithData = (trigger: NotificationTrigger): trigger is FirebaseDataTrigger =>\r\n    // Is push trigger.\r\n    trigger.type === \"push\" &&\r\n    // Is for android.\r\n    \"remoteMessage\" in trigger &&\r\n    // Has non-null data.\r\n    typeof trigger.remoteMessage.data === \"object\" &&\r\n    trigger.remoteMessage.data !== null;\r\n","import { addNotificationReceivedListener, Notification, removeNotificationSubscription, scheduleNotificationAsync } from \"expo-notifications\";\r\nimport moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { conId } from \"../../configuration\";\r\nimport { withPlatform } from \"../../hoc/withPlatform\";\r\nimport { captureNotificationException } from \"../../sentryHelpers\";\r\nimport { useAppDispatch } from \"../../store\";\r\nimport { logFCMMessage } from \"../../store/background.slice\";\r\nimport { FirebaseNotificationTrigger, isTrigger, isTriggerWithData, isTriggerWithNotification } from \"../../types/NotificationTrigger\";\r\nimport { useSynchronizer } from \"../Synchronization/SynchronizationProvider\";\r\nimport { NotificationChannels } from \"./NotificationChannel\";\r\n\r\nconst scheduleNotificationFromTrigger = (source: FirebaseNotificationTrigger, channelId: NotificationChannels = \"default\") =>\r\n    scheduleNotificationAsync({\r\n        identifier: source.remoteMessage.messageId ?? undefined,\r\n        content: {\r\n            title: source.remoteMessage.notification.title ?? undefined,\r\n            body: source.remoteMessage.notification.body ?? undefined,\r\n            data: source.remoteMessage.data,\r\n        },\r\n        trigger: {\r\n            channelId,\r\n        },\r\n    });\r\n\r\n/**\r\n * Manages the foreground part of notification handling, as well as handling sync requests\r\n * originating from a background notification.\r\n * @constructor\r\n */\r\nexport const NotificationReceivedManager = () => {\r\n    // Use dispatch to handle logging of notifications.\r\n    const dispatch = useAppDispatch();\r\n\r\n    // Use synchronizer for performing data refresh.\r\n    const { synchronize } = useSynchronizer();\r\n\r\n    // Setup notification received handler.\r\n    useEffect(() => {\r\n        const receive = addNotificationReceivedListener(({ request: { content, trigger, identifier } }: Notification) => {\r\n            // Prevent reentrant error when scheduling a notification locally from a remote message.\r\n            if (!isTrigger(trigger)) {\r\n                console.log(\"Skipping empty message from remote\");\r\n                return;\r\n            }\r\n\r\n            // Track immediately when the message came in.\r\n            const dateReceived = moment().toISOString();\r\n\r\n            // Always log receiving of the message.\r\n            console.log(`Received at ${dateReceived}:`, trigger);\r\n\r\n            // Always dispatch a state update tracking the message.\r\n            dispatch(logFCMMessage({ dateReceived, content, trigger, identifier }));\r\n\r\n            // Check if data trigger. Otherwise, not actionable.\r\n            if (isTriggerWithData(trigger)) {\r\n                // Get CID and event type.\r\n                const cid = trigger.remoteMessage.data.CID;\r\n                const event = trigger.remoteMessage.data.Event;\r\n\r\n                // Skip if not for this convention.\r\n                if (cid !== conId) return;\r\n\r\n                // Handle for sync, announcement, and notification.\r\n                if (event === \"Sync\") {\r\n                    // Is sync, do synchronization silently.\r\n                    synchronize(false);\r\n\r\n                    // Log sync.\r\n                    console.log(\"Synchronized for remote Sync request\");\r\n                } else if (event === \"Announcement\" && isTriggerWithNotification(trigger)) {\r\n                    // Schedule it.\r\n                    scheduleNotificationFromTrigger(trigger, \"announcements\").then(\r\n                        () => console.log(\"Announcement scheduled\"),\r\n                        (e) => captureNotificationException(\"Unable to schedule announcement\", e)\r\n                    );\r\n                } else if (event === \"Notification\" && isTriggerWithNotification(trigger)) {\r\n                    // Schedule it.\r\n                    scheduleNotificationFromTrigger(trigger, \"private_messages\").then(\r\n                        () => console.log(\"Personal message scheduled\"),\r\n                        (e) => captureNotificationException(\"Unable to schedule personal message\", e)\r\n                    );\r\n                }\r\n            }\r\n        });\r\n\r\n        // Return removal of subscription.\r\n        return () => {\r\n            removeNotificationSubscription(receive);\r\n        };\r\n    }, []);\r\n\r\n    return null;\r\n};\r\n\r\nexport const PlatformNotificationReceivedManager = withPlatform(NotificationReceivedManager, [\"android\", \"ios\"]);\r\n","import { useLastNotificationResponse } from \"expo-notifications\";\r\nimport moment from \"moment\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport { conId } from \"../../configuration\";\r\nimport { withPlatform } from \"../../hoc/withPlatform\";\r\nimport { useAppNavigation } from \"../../hooks/useAppNavigation\";\r\n\r\n/**\r\n * Manages the foreground part notification response handling.\r\n * @constructor\r\n */\r\nexport const NotificationRespondedManager = () => {\r\n    const navigation = useAppNavigation(\"Areas\");\r\n    const response = useLastNotificationResponse();\r\n\r\n    // Setup handler for notification response.\r\n    useEffect(() => {\r\n        // Track when the response was observed.\r\n        const dateResponded = moment().toISOString();\r\n\r\n        // Always log receiving of the message.\r\n        console.log(`Response observed at ${dateResponded}:`, response);\r\n\r\n        // Get the data object. Resolve CID, type, and related ID.\r\n        const data = response?.notification?.request?.content?.data;\r\n        const cid = data?.CID;\r\n        const event = data?.Event;\r\n        const relatedId = data?.RelatedId;\r\n\r\n        // Check ID match.\r\n        if (cid !== conId) return;\r\n\r\n        // Event is for an announcement.\r\n        if (event === \"Announcement\") {\r\n            // Log navigation.\r\n            console.log(`Navigating to announcement ${relatedId}`);\r\n\r\n            // Go to home screen. TODO: Opening the item not implemented.\r\n            return navigation.navigate(\"Areas\", { screen: \"Home\" });\r\n        }\r\n\r\n        // Event is for a personal message.\r\n        if (event === \"Notification\") {\r\n            // Log navigation.\r\n            console.log(`Navigating to private message ${relatedId}`);\r\n\r\n            // Go to private messages. TODO: Opening the item not implemented.\r\n            return navigation.navigate(\"PrivateMessageList\");\r\n        }\r\n    }, [navigation, response]);\r\n\r\n    return null;\r\n};\r\n\r\nexport const PlatformNotificationRespondedManager = withPlatform(NotificationRespondedManager, [\"android\", \"ios\"]);\r\n","import * as Device from \"expo-device\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport { useEffect } from \"react\";\r\nimport { Platform } from \"react-native\";\r\n\r\nimport { conId } from \"../../configuration\";\r\nimport { withPlatform } from \"../../hoc/withPlatform\";\r\nimport { captureNotificationException } from \"../../sentryHelpers\";\r\nimport { useAppSelector } from \"../../store\";\r\nimport { usePostDeviceRegistrationMutation, usePostSubscribeToTopicMutation } from \"../../store/authorization.service\";\r\n\r\n/**\r\n * List of topics for this device.\r\n */\r\nconst TOPICS = [`${conId}-${Platform.OS}`, `${conId}-expo`, `${conId}`];\r\n\r\n/**\r\n * Makes sure we can request a token. We must be on a device and have permissions. If\r\n * permissions are not  given and can be asked for, try to get permission.\r\n */\r\nconst prepareToken = async () => {\r\n    // Not a device, useless.\r\n    if (!Device.isDevice) return false;\r\n\r\n    // Permission either given or cannot be asked for again, return here with appropriate status.\r\n    const initial = await Notifications.getPermissionsAsync();\r\n    if (initial.granted) return true;\r\n    if (!initial.canAskAgain) return false;\r\n\r\n    // Request again. Return if granted now.\r\n    const request = await Notifications.requestPermissionsAsync();\r\n    return request.granted;\r\n};\r\n\r\n/**\r\n * Retrieves the appropriate device token.\r\n */\r\nconst retrieveToken = async () => {\r\n    // Get the *device* token. We are using native FCM, therefore we need the device token.\r\n    const response = await Notifications.getDevicePushTokenAsync();\r\n    return response.data;\r\n};\r\n\r\n/**\r\n * Manages the foreground part of notification handling, as well as handling sync requests\r\n * originating from a background notification.\r\n * @constructor\r\n */\r\nexport const TokenManager = () => {\r\n    // Use token state to trigger effect updates when login state changed.\r\n    const authToken = useAppSelector((state) => state.authorization.token);\r\n\r\n    // Use device registration and subscription.\r\n    const [registerDevice] = usePostDeviceRegistrationMutation();\r\n    const [subscribeToTopic] = usePostSubscribeToTopicMutation();\r\n\r\n    // Connect device itself via it's token to the backend and the topics. This\r\n    // effect specifies token as a dependency, as a change of the token results\r\n    // in different behavior of the remote method.\r\n    useEffect(() => {\r\n        (async () => {\r\n            // Prepare it. If not available, do not continue.\r\n            const ok = await prepareToken();\r\n            if (!ok) return false;\r\n\r\n            // Acquire the proper token.\r\n            const token = await retrieveToken();\r\n\r\n            console.log(\"FCM TOKEN:\", token);\r\n\r\n            // Register token as device with all topics.\r\n            await registerDevice({\r\n                DeviceId: token,\r\n                Topics: TOPICS,\r\n            });\r\n\r\n            // Register token individually for FCM compat.\r\n            for (const topic of TOPICS) {\r\n                await subscribeToTopic({\r\n                    DeviceId: token,\r\n                    Topic: topic,\r\n                });\r\n            }\r\n\r\n            // Return actionable true.\r\n            return true;\r\n        })().then(\r\n            (r) => console.log(\"Registration and subscription, performed:\", r),\r\n            (e) => captureNotificationException(\"Could not register and subscribe\", e)\r\n        );\r\n    }, [authToken /* Remote methods depend on token implicitly. */]);\r\n\r\n    return null;\r\n};\r\n\r\nexport const PlatformTokenManager = withPlatform(TokenManager, [\"android\", \"ios\"]);\r\n","import { LinkingOptions, NavigationContainer, NavigationContainerRef } from \"@react-navigation/native\";\r\nimport { NavigationState } from \"@react-navigation/routers\";\r\nimport * as Linking from \"expo-linking\";\r\nimport { FC, useCallback, useMemo, useRef } from \"react\";\r\n\r\nimport { DealersTabsScreenParamsList } from \"../app/Dealers/DealersTabsScreen\";\r\nimport { EventsTabsScreenParamsList } from \"../app/Events/EventsTabsScreen\";\r\nimport { ScreenAreasParamsList } from \"../app/ScreenAreas\";\r\nimport { ScreenStartParamsList } from \"../app/ScreenStart\";\r\nimport { conId } from \"../configuration\";\r\nimport { useAnalytics } from \"../hooks/useAnalytics\";\r\nimport { useNavigationStatePersistence } from \"../hooks/useNavigationStatePersistence\";\r\nimport { captureException, PlatformSentry } from \"../sentryHelpers\";\r\nimport { useAppSelector } from \"../store\";\r\nimport { eventDaysSelectors, eventRoomsSelectors, eventTracksSelectors } from \"../store/eurofurence.selectors\";\r\nimport { RecordId } from \"../store/eurofurence.types\";\r\nimport { useTheme, useThemeType } from \"./Theme\";\r\n\r\nexport const sentryRoutingInstrumentation = \"ReactNavigationInstrumentation\" in PlatformSentry ? new PlatformSentry.ReactNavigationInstrumentation() : undefined;\r\n\r\ntype LinkingConfig<ParamsList> = {\r\n    initialRouteName?: keyof ParamsList;\r\n    screens: Record<keyof ParamsList, string | LinkingConfig<any>>;\r\n    path?: string;\r\n    exact?: boolean;\r\n    parse?: Record<string, (value: string) => any>;\r\n    stringify?: Record<string, (value: any) => string>;\r\n};\r\n\r\n/**\r\n * Configure deep linking\r\n */\r\nconst linkingFrom = (days: RecordId[], tracks: RecordId[], rooms: RecordId[]): LinkingOptions<ScreenStartParamsList> => {\r\n    // Dynamically create dynamic parts.\r\n    const eventsLinking: LinkingConfig<EventsTabsScreenParamsList> = {\r\n        initialRouteName: \"Events\",\r\n        screens: {\r\n            Favorites: \"Areas/Events/Favorites\",\r\n            Results: \"Areas/Events/Results\",\r\n            Search: \"Areas/Events/Search\",\r\n\r\n            ...Object.fromEntries(days.map((id) => [id, `Areas/Events/Days/${id}`])),\r\n            ...Object.fromEntries(tracks.map((id) => [id, `Areas/Events/Tracks/${id}`])),\r\n            ...Object.fromEntries(rooms.map((id) => [id, `Areas/Events/Rooms/${id}`])),\r\n        },\r\n    };\r\n\r\n    const dealersLinking: LinkingConfig<DealersTabsScreenParamsList> = {\r\n        initialRouteName: \"All\",\r\n        screens: {\r\n            All: \"Areas/Dealers\",\r\n            Thu: \"Areas/Dealers/Thu\",\r\n            Fri: \"Areas/Dealers/Fri\",\r\n            Sat: \"Areas/Dealers/Sat\",\r\n        },\r\n    };\r\n\r\n    const areasLinking: LinkingConfig<ScreenAreasParamsList> = {\r\n        initialRouteName: \"Home\",\r\n        screens: {\r\n            Home: \"Areas/Home\",\r\n            Events: eventsLinking,\r\n            Dealers: dealersLinking,\r\n        },\r\n    };\r\n\r\n    // TODO: Use configuration constants here.\r\n    // Return the composed linking object.\r\n    return {\r\n        prefixes: [Linking.createURL(`/`), Linking.createURL(`/${conId}/Web/`), `https://app.eurofurence.org`, \"https://eurofurence.github.io/ef-app_react-native\"],\r\n        config: {\r\n            initialRouteName: \"Areas\",\r\n            screens: {\r\n                Areas: areasLinking,\r\n                Event: \"Events/:id\",\r\n                Dealer: \"Dealers/:id\",\r\n                KnowledgeGroups: \"Knowledge\",\r\n                KnowledgeEntry: \"Knowledge/:id\",\r\n                Settings: \"Settings\",\r\n                Map: \"Map/:id\",\r\n                About: \"About\",\r\n            },\r\n        },\r\n    };\r\n};\r\n\r\nexport const NavigationProvider: FC = ({ children }) => {\r\n    const navigation = useRef<NavigationContainerRef<any> | null>(null);\r\n    // Get navigation state from persistence.\r\n    const [isReady, initialState, onStateChange] = useNavigationStatePersistence();\r\n    const logEvent = useAnalytics();\r\n\r\n    const theme = useTheme();\r\n    const type = useThemeType();\r\n    const navTheme = useMemo(\r\n        () => ({\r\n            dark: type === \"dark\",\r\n            colors: {\r\n                primary: theme.primary,\r\n                background: theme.surface,\r\n                card: theme.surface,\r\n                text: theme.text,\r\n                border: theme.darken,\r\n                notification: theme.notification,\r\n            },\r\n        }),\r\n        [type, theme]\r\n    );\r\n\r\n    const logAnalytics = useCallback(\r\n        (state: NavigationState | undefined) => {\r\n            if (!state) return null;\r\n            const route: { name: string; params?: object; key: string } = state.routes[state.index] as any;\r\n\r\n            logEvent(\"screen_view\", {\r\n                screen_name: route.name,\r\n                ...route.params,\r\n            }).catch(captureException);\r\n        },\r\n        [logEvent]\r\n    );\r\n\r\n    const days = useAppSelector(eventDaysSelectors.selectIds);\r\n    const tracks = useAppSelector(eventTracksSelectors.selectIds);\r\n    const rooms = useAppSelector(eventRoomsSelectors.selectIds);\r\n\r\n    const linking = useMemo(() => linkingFrom(days, tracks, rooms), [days, tracks, rooms]);\r\n\r\n    if (!isReady) {\r\n        return null;\r\n    }\r\n    return (\r\n        <NavigationContainer\r\n            theme={navTheme}\r\n            ref={navigation}\r\n            linking={linking}\r\n            initialState={initialState}\r\n            onReady={() => {\r\n                sentryRoutingInstrumentation?.registerNavigationContainer(navigation.current);\r\n            }}\r\n            onStateChange={(state) => {\r\n                onStateChange(state);\r\n                logAnalytics(state);\r\n            }}\r\n        >\r\n            {children}\r\n        </NavigationContainer>\r\n    );\r\n};\r\n","import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { InitialState, NavigationState } from \"@react-navigation/routers\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { Linking, Platform } from \"react-native\";\r\n\r\n/**\r\n * Creates a hook for initial state loading and saving.\r\n * @param persistenceKey\r\n * @return Returns if ready, the initial state, and the state changed callback.\r\n */\r\nexport const useNavigationStatePersistence = (persistenceKey = \"NAVIGATION_STATE\"): [boolean, InitialState | undefined, (state: NavigationState | undefined) => void] => {\r\n    const [isReady, setIsReady] = useState<boolean>(false);\r\n    const [initialState, setInitialState] = useState<InitialState>();\r\n\r\n    const onStateChange = useCallback((state: NavigationState | undefined) => AsyncStorage.setItem(persistenceKey, JSON.stringify(state)), [persistenceKey]);\r\n\r\n    useEffect(() => {\r\n        // Already ready, skip.\r\n        if (isReady) return;\r\n\r\n        // Run initialization from store.\r\n        (async () => {\r\n            // Get initial URL and stored value.\r\n            const [initialUrl, savedStateString] = await Promise.all([Linking.getInitialURL(), AsyncStorage.getItem(persistenceKey)]);\r\n\r\n            // If web or initial URL is given, skip restoring.\r\n            if (Platform.OS === \"web\" || initialUrl !== null) return;\r\n\r\n            // If given, assign it as parsed from JSON.\r\n            if (typeof savedStateString === \"string\") {\r\n                setInitialState(JSON.parse(savedStateString));\r\n            }\r\n        })()\r\n            .catch(console.error)\r\n            .finally(() => setIsReady(true));\r\n    }, [isReady]);\r\n\r\n    // Return the values. Assert initial state, as it should only be used when it is to be used.\r\n    return [isReady, initialState, onStateChange];\r\n};\r\n","import * as Analytics from \"expo-firebase-analytics\";\r\nimport { useMemo } from \"react\";\r\n\r\nimport { useAppSelector } from \"../store\";\r\n\r\ntype LogEvent = (name: string, params: Record<string, any>) => Promise<void>;\r\n\r\nexport const useAnalytics = () => {\r\n    const enabled = useAppSelector((state) => state.settingsSlice.analytics.enabled);\r\n\r\n    return useMemo((): LogEvent => {\r\n        return enabled ? (name, properties) => Analytics.logEvent(name, properties) : () => Promise.resolve();\r\n    }, [enabled]);\r\n};\r\n","import { BottomSheetModalProvider } from \"@gorhom/bottom-sheet\";\r\n\r\nimport { ScreenStart } from \"./app/ScreenStart\";\r\nimport { AnalyticsManager } from \"./components/Managers/AnalyticsManager\";\r\nimport { PlatformBackgroundSyncManager } from \"./components/Managers/BackgroundSyncManager\";\r\nimport { PlatformNotificationReceivedManager } from \"./components/Managers/NotificationReceivedManager\";\r\nimport { PlatformNotificationRespondedManager } from \"./components/Managers/NotificationRespondedManager\";\r\nimport { PlatformTokenManager } from \"./components/Managers/TokenManager\";\r\nimport { SynchronizationProvider } from \"./components/Synchronization/SynchronizationProvider\";\r\nimport { NavigationProvider } from \"./context/NavigationProvider\";\r\n\r\n/**\r\n * Base App. Handles all ui related layout stuff. Context providers go in index.tsx. Actual UI content should be in screens or components\r\n */\r\nexport default function App() {\r\n    return (\r\n        <BottomSheetModalProvider>\r\n            <SynchronizationProvider>\r\n                <NavigationProvider>\r\n                    <ScreenStart />\r\n\r\n                    {/* Handle device token acquisition. */}\r\n                    <PlatformTokenManager />\r\n\r\n                    {/* Handle handling notifications in foreground. */}\r\n                    <PlatformNotificationReceivedManager />\r\n                    <PlatformNotificationRespondedManager />\r\n\r\n                    {/* Handle notifications in background. */}\r\n                    <PlatformBackgroundSyncManager />\r\n\r\n                    {/* Set up analytics. */}\r\n                    <AnalyticsManager />\r\n                </NavigationProvider>\r\n            </SynchronizationProvider>\r\n        </BottomSheetModalProvider>\r\n    );\r\n}\r\n","import { FC } from \"react\";\r\nimport { ScrollView } from \"react-native-gesture-handler\";\r\nimport { useSafeAreaInsets } from \"react-native-safe-area-context\";\r\n\r\nimport { appStyles } from \"../../app/AppStyles\";\r\nimport { Label } from \"../Atoms/Label\";\r\nimport { Button } from \"../Containers/Button\";\r\nimport { Floater } from \"../Containers/Floater\";\r\nimport { useSynchronizer } from \"../Synchronization/SynchronizationProvider\";\r\n\r\nexport type AppErrorContentProps = {\r\n    error?: any;\r\n};\r\nexport const AppErrorContent: FC<AppErrorContentProps> = ({ error }) => {\r\n    const safe = useSafeAreaInsets();\r\n    const sync = useSynchronizer();\r\n    console.log(error);\r\n    return (\r\n        <ScrollView style={[appStyles.abs, safe]}>\r\n            <Floater contentStyle={appStyles.trailer}>\r\n                <Label type=\"h1\" mt={40}>\r\n                    Sorry, something went wrong\r\n                </Label>\r\n\r\n                <Label type=\"para\" mt={20} mb={20}>\r\n                    Please let us know that there's something going wrong. You can try clearing the cache, this will however also remove your preferences.\r\n                </Label>\r\n                <Button icon=\"trash-can-outline\" onPress={sync.clear}>\r\n                    Clear the cache\r\n                </Button>\r\n                <Label type=\"h2\" mt={20} mb={20}>\r\n                    The following error caused the crash\r\n                </Label>\r\n                <Label type=\"para\" color=\"warning\">\r\n                    {`Message: ${error.message} ${error.componentStack}`}\r\n                </Label>\r\n            </Floater>\r\n        </ScrollView>\r\n    );\r\n};\r\n","import React, { ReactNode } from \"react\";\r\n\r\nimport { PlatformSentry } from \"../../sentryHelpers\";\r\nimport { AppErrorContent } from \"./AppErrorContent\";\r\n\r\nexport class AppErrorBoundary extends React.PureComponent<{ children: ReactNode }, { hasError: boolean; error: Error | null }> {\r\n    constructor(props: { children: ReactNode }) {\r\n        super(props);\r\n        this.state = { hasError: false, error: null };\r\n    }\r\n\r\n    static getDerivedStateFromError(error: Error) {\r\n        return { hasError: true, error };\r\n    }\r\n\r\n    componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n        PlatformSentry.captureException(error);\r\n\r\n        console.error(error, errorInfo);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <AppErrorContent error={this.state.error} />;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n","import { registerTaskAsync } from \"expo-notifications\";\r\nimport { defineTask, TaskManagerTaskBody } from \"expo-task-manager\";\r\nimport { Platform } from \"react-native\";\r\n\r\nimport { conId } from \"../../configuration\";\r\nimport { captureEvent, captureNotificationException } from \"../../sentryHelpers\";\r\nimport { requestSyncFromBackground } from \"./BackgroundSyncManager\";\r\n\r\n// Import globally at index, this code runs the method on import.\r\n\r\n/**\r\n * Name of the background task handling notifications when not in foreground.\r\n */\r\nconst BG_NOTIFICATIONS_NAME = \"background_notifications\";\r\n\r\n// Define task for notification handling.\r\ndefineTask(BG_NOTIFICATIONS_NAME, ({ data, error, executionInfo }: TaskManagerTaskBody<{ notification?: any }>) => {\r\n    // Skip method if error was given to be handled.\r\n    if (error) {\r\n        captureEvent(error);\r\n        return;\r\n    }\r\n\r\n    // Log that a notification was received.\r\n    console.log(\"Received data in background\", data, \"App state\", executionInfo.appState);\r\n\r\n    // Get event data.\r\n    const cid = data?.notification?.data?.CID;\r\n    const event = data?.notification?.data?.Event;\r\n\r\n    // Skip if not for this convention.\r\n    if (cid !== conId) return;\r\n\r\n    // Handle for Sync events only.\r\n    if (event === \"Sync\") {\r\n        // Is sync, request synchronization.\r\n        requestSyncFromBackground().then(\r\n            () => console.log(\"Sync marked requested\"),\r\n            (e) => captureNotificationException(\"Could not mark sync as requested\", e)\r\n        );\r\n    }\r\n});\r\n\r\n// Connect to notification on supported platforms.\r\nif (Platform.OS === \"android\" || Platform.OS === \"ios\")\r\n    registerTaskAsync(BG_NOTIFICATIONS_NAME).then(\r\n        () => console.log(\"Successfully connected for background notifications\"),\r\n        (e) => captureNotificationException(\"Unable to connect for background notifications\", e)\r\n    );\r\nelse console.log(\"Skipping registration of sync generator, unsupported on web.\");\r\n","import * as Notifications from \"expo-notifications\";\r\nimport { setNotificationChannelAsync } from \"expo-notifications\";\r\n\r\nimport { captureNotificationException } from \"../../sentryHelpers\";\r\n\r\n// Import globally at index, this code runs the method on import.\r\n\r\nexport type NotificationChannels = \"default\" | \"event_reminders\" | \"announcements\" | \"private_messages\";\r\n// Setup default channel.\r\nsetNotificationChannelAsync(\"default\", {\r\n    name: \"Miscellaneous\",\r\n    importance: Notifications.AndroidImportance.MIN,\r\n    lightColor: \"#006459\",\r\n}).then(\r\n    () => console.log(\"Assigned default notification channel\"),\r\n    (e) => captureNotificationException(\"Failed to assign notification channel:\", e)\r\n);\r\n\r\nsetNotificationChannelAsync(\"event_reminders\", {\r\n    name: \"Event Reminders\",\r\n    importance: Notifications.AndroidImportance.HIGH,\r\n    lightColor: \"#006459\",\r\n}).then(\r\n    () => console.log(\"Assigned Event Reminders notification channel\"),\r\n    (e) => captureNotificationException(\"Failed to assign notification channel:\", e)\r\n);\r\n\r\nsetNotificationChannelAsync(\"announcements\", {\r\n    name: \"Announcements\",\r\n    importance: Notifications.AndroidImportance.DEFAULT,\r\n    lightColor: \"#006459\",\r\n}).then(\r\n    () => console.log(\"Assigned Announcements notification channel\"),\r\n    (e) => captureNotificationException(\"Failed to assign notification channel:\", e)\r\n);\r\n\r\nsetNotificationChannelAsync(\"private_messages\", {\r\n    name: \"Private Messages\",\r\n    importance: Notifications.AndroidImportance.DEFAULT,\r\n    lightColor: \"#006459\",\r\n}).then(\r\n    () => console.log(\"Assigned Private Messages notification channel\"),\r\n    (e) => captureNotificationException(\"Failed to assign notification channel:\", e)\r\n);\r\n","import { setNotificationHandler } from \"expo-notifications\";\r\n\r\nimport { captureNotificationException } from \"../../sentryHelpers\";\r\n\r\n// Import globally at index, this code runs the method on import.\r\n\r\n// Set general notification handling strategy.\r\nsetNotificationHandler({\r\n    handleNotification: ({ request: { content } }) => {\r\n        // Mark handling notification.\r\n        console.log(\"Handling notification\", content);\r\n\r\n        // Show if it's a notification trigger.\r\n        return Promise.resolve({\r\n            shouldShowAlert: typeof content?.title === \"string\" || typeof content?.body === \"string\",\r\n            shouldPlaySound: false,\r\n            shouldSetBadge: false,\r\n        });\r\n    },\r\n    handleSuccess: (id) => {\r\n        // Log success.\r\n        console.log(`Handled notification successfully, assigned ID: ${id}`);\r\n    },\r\n    handleError: (id, error) => {\r\n        // Log error.\r\n        captureNotificationException(`Handling notification failed, assigned ID: ${id}`, error);\r\n    },\r\n});\r\n","import { registerRootComponent } from \"expo\";\r\nimport { FC } from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport { GestureHandlerRootView } from \"react-native-gesture-handler\";\r\nimport { SafeAreaProvider } from \"react-native-safe-area-context\";\r\nimport { Provider as StoreProvider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport * as Sentry from \"sentry-expo\";\r\n\r\nimport App from \"./App\";\r\nimport { AppErrorBoundary } from \"./components/Utilities/AppErrorBoundary\";\r\nimport { LoadingContextProvider } from \"./context/LoadingContext\";\r\nimport { sentryRoutingInstrumentation } from \"./context/NavigationProvider\";\r\nimport { PlatformSentry } from \"./sentryHelpers\";\r\nimport { persistor, store } from \"./store\";\r\n\r\nimport \"react-native-reanimated\";\r\n\r\n// Import background notification connector and handler setup.\r\nimport \"./components/Managers/BackgroundSyncGenerator\";\r\nimport \"./components/Managers/NotificationChannel\";\r\nimport \"./components/Managers/NotificationHandler\";\r\n\r\nSentry.init({\r\n    dsn: \"https://f3baa5424fef43dfa5e2e881b37c13de@o1343479.ingest.sentry.io/6647748\",\r\n    enableInExpoDevelopment: false,\r\n    debug: false, // If `true`, Sentry will try to print out useful debugging information if something goes wrong with sending the event. Set it to `false` in production\r\n    tracesSampleRate: 1,\r\n    integrations:\r\n        \"ReactNativeTracing\" in PlatformSentry\r\n            ? [\r\n                  new PlatformSentry.ReactNativeTracing({\r\n                      traceFetch: true,\r\n                      enableAppStartTracking: true,\r\n                      enableNativeFramesTracking: true,\r\n                      traceXHR: true,\r\n                      enableStallTracking: true,\r\n                      tracingOrigins: [\"localhost\", \"app.eurofurence.org\", /^\\//],\r\n                      routingInstrumentation: sentryRoutingInstrumentation,\r\n                  }),\r\n              ]\r\n            : [],\r\n});\r\n\r\nconst Index: FC = () => {\r\n    return (\r\n        <GestureHandlerRootView style={[StyleSheet.absoluteFill, styles.container]}>\r\n            <SafeAreaProvider>\r\n                <StoreProvider store={store}>\r\n                    <AppErrorBoundary>\r\n                        <PersistGate persistor={persistor}>\r\n                            <LoadingContextProvider>\r\n                                <App />\r\n                            </LoadingContextProvider>\r\n                        </PersistGate>\r\n                    </AppErrorBoundary>\r\n                </StoreProvider>\r\n            </SafeAreaProvider>\r\n        </GestureHandlerRootView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        overflow: \"hidden\",\r\n    },\r\n});\r\n\r\nconst WrappedIndex = Index;\r\n\r\nconst RootComponent = () => <WrappedIndex />;\r\nregisterRootComponent(RootComponent);\r\n"],"sourceRoot":""}